var N = null;var searchIndex = {};
searchIndex["antidote"]={"doc":"Mutex and RwLock types that do not poison themselves.","items":[[3,"WaitTimeoutResult","antidote","A type indicating whether a timed wait on a condition variable returned due to a time out or not.",N,N],[3,"Mutex","","Like `std::sync::Mutex` except that it does not poison itself.",N,N],[3,"MutexGuard","","Like `std::sync::MutexGuard`.",N,N],[3,"Condvar","","Like `std::sync::Condvar`.",N,N],[3,"TryLockError","","Like `std::sync::TryLockError`.",N,N],[3,"RwLock","","Like `std::sync::RwLock` except that it does not poison itself.",N,N],[3,"RwLockReadGuard","","Like `std::sync::RwLockReadGuard`.",N,N],[3,"RwLockWriteGuard","","Like `std::sync::RwLockWriteGuard`.",N,N],[6,"TryLockResult","","Like `std::sync::TryLockResult`.",N,N],[11,"new","","Like `std::sync::Mutex::new`.",0,[[["t"]],["mutex"]]],[11,"into_inner","","Like `std::sync::Mutex::into_inner`.",0,[[["self"]],["t"]]],[11,"lock","","Like `std::sync::Mutex::lock`.",0,[[["self"]],["mutexguard"]]],[11,"try_lock","","Like `std::sync::Mutex::try_lock`.",0,[[["self"]],["trylockresult",["mutexguard"]]]],[11,"get_mut","","Like `std::sync::Mutex::get_mut`.",0,[[["self"]],["t"]]],[11,"new","","Like `std::sync::Condvar::new`.",1,[[],["condvar"]]],[11,"wait","","Like `std::sync::Condvar::wait`.",1,[[["self"],["mutexguard"]],["mutexguard"]]],[11,"wait_timeout","","Like `std::sync::Condvar::wait_timeout`.",1,N],[11,"notify_one","","Like `std::sync::Condvar::notify_one`.",1,[[["self"]]]],[11,"notify_all","","Like `std::sync::Condvar::notify_all`.",1,[[["self"]]]],[11,"new","","Like `std::sync::RwLock::new`.",2,[[["t"]],["rwlock"]]],[11,"into_inner","","Like `std::sync::RwLock::into_inner`.",2,[[["self"]],["t"]]],[11,"read","","Like `std::sync::RwLock::read`.",2,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Like `std::sync::RwLock::try_read`.",2,[[["self"]],["trylockresult",["rwlockreadguard"]]]],[11,"write","","Like `std::sync::RwLock::write`.",2,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Like `std::sync::RwLock::try_write`.",2,[[["self"]],["trylockresult",["rwlockwriteguard"]]]],[11,"get_mut","","Like `std::sync::RwLock::get_mut`.",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"clone","","",3,[[["self"]],["waittimeoutresult"]]],[11,"eq","","",3,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"ne","","",3,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref","","",6,[[["self"]],["t"]]],[11,"deref","","",7,[[["self"]],["t"]]],[11,"deref_mut","","",4,[[["self"]],["t"]]],[11,"deref_mut","","",7,[[["self"]],["t"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"timed_out","","Returns whether the wait was known to have timed out.",3,[[["self"]],["bool"]]]],"paths":[[3,"Mutex"],[3,"Condvar"],[3,"RwLock"],[3,"WaitTimeoutResult"],[3,"MutexGuard"],[3,"TryLockError"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"]]};
searchIndex["base64"]={"doc":"","items":[[3,"Config","base64","Contains configuration parameters for base64 encoding",N,N],[4,"CharacterSet","","Available encoding character sets",N,N],[13,"Standard","","The standard character set (uses `+` and `/`)",0,N],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",0,N],[4,"LineEnding","","",N,N],[13,"LF","","",1,N],[13,"CRLF","","",1,N],[4,"LineWrap","","",N,N],[13,"NoWrap","","",2,N],[13,"Wrap","","",2,N],[4,"DecodeError","","",N,N],[13,"InvalidByte","","",3,N],[13,"InvalidLength","","",3,N],[5,"encode","","Encode arbitrary octets as base64. Returns a String. Convenience for `encode_config(input, base64::STANDARD);`.",N,[[["t"]],["string"]]],[5,"decode","","Decode from string reference as octets. Returns a Result containing a Vec. Convenience `decode_config(input, base64::STANDARD);`.",N,[[["t"]],["result",["vec","decodeerror"]]]],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",N,[[["t"],["config"]],["string"]]],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the supplied buffer to avoid allocations.",N,[[["t"],["config"],["string"]]]],[5,"decode_config","","Decode from string reference as octets. Returns a Result containing a Vec.",N,[[["t"],["config"]],["result",["vec","decodeerror"]]]],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the supplied buffer to avoid allocation. Returns a Result containing an empty tuple, aka ().",N,[[["t"],["config"],["vec"]],["result",["decodeerror"]]]],[7,"STANDARD","","",N,N],[7,"MIME","","",N,N],[7,"URL_SAFE","","",N,N],[7,"URL_SAFE_NO_PAD","","",N,N],[11,"new","","",4,[[["characterset"],["bool"],["bool"],["linewrap"]],["config"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"eq","","",3,[[["self"],["decodeerror"]],["bool"]]],[11,"ne","","",3,[[["self"],["decodeerror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["characterset"]]],[11,"clone","","",1,[[["self"]],["lineending"]]],[11,"clone","","",2,[[["self"]],["linewrap"]]],[11,"clone","","",4,[[["self"]],["config"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]]],"paths":[[4,"CharacterSet"],[4,"LineEnding"],[4,"LineWrap"],[4,"DecodeError"],[3,"Config"]]};
searchIndex["bincode"]={"doc":"`bincode` is a crate for encoding and decoding using a tiny binary serialization strategy.","items":[[3,"Bounded","bincode","A SizeLimit that restricts serialized or deserialized messages from exceeding a certain byte length.",N,N],[12,"0","","",0,N],[3,"Infinite","","A SizeLimit without a limit! Use this if you don't care about the size of encoded or decoded messages.",N,N],[5,"deserialize","","Deserializes a slice of bytes into an object.",N,N],[5,"deserialize_from","","Deserializes an object directly from a `Buffer`ed Reader.",N,[[["r"],["s"]],["result"]]],[5,"serialize_into","","Serializes an object directly into a `Writer`.",N,[[["w"],["t"],["s"]],["result"]]],[5,"serialize","","Serializes a serializable object into a `Vec` of bytes.",N,[[["t"],["s"]],["result",["vec"]]]],[0,"internal","","A collection of serialization and deserialization functions that use the `serde` crate for the serializable and deserializable implementation.",N,N],[3,"Deserializer","bincode::internal","A Deserializer that reads bytes from a buffer.",N,N],[3,"Serializer","","An Serializer that encodes values directly into a Writer.",N,N],[4,"ErrorKind","","The kind of error that can be produced during a serialization or deserialization.",N,N],[13,"IoError","","If the error stems from the reader/writer that is being used during (de)serialization, that error will be stored and returned here.",1,N],[13,"InvalidEncoding","","If the bytes in the reader are not decodable because of an invalid encoding, this error will be returned.  This error is only possible if a stream is corrupted.  A stream produced from `encode` or `encode_into` should never produce an InvalidEncoding error.",1,N],[12,"desc","bincode::internal::ErrorKind","",1,N],[12,"detail","","",1,N],[13,"SizeLimit","bincode::internal","If (de)serializing a message takes more than the provided size limit, this error is returned.",1,N],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like iterators).",1,N],[13,"Custom","","A custom error message from Serde.",1,N],[5,"serialize_into","","Serializes an object directly into a `Writer`.",N,[[["w"],["t"],["s"]],["result"]]],[5,"serialize","","Serializes a serializable object into a `Vec` of bytes.",N,[[["t"],["s"]],["result",["vec"]]]],[5,"serialized_size","","Returns the size that an object would be if serialized using bincode.",N,[[["t"]],["u64"]]],[5,"serialized_size_bounded","","Given a maximum size limit, check how large an object would be if it were to be serialized.",N,[[["t"],["u64"]],["option",["u64"]]]],[5,"deserialize_from","","Deserializes an object directly from a `Buffer`ed Reader.",N,[[["r"],["s"]],["result"]]],[5,"deserialize","","Deserializes a slice of bytes into an object.",N,N],[6,"Result","","The result of a serialization or deserialization operation.",N,N],[6,"Error","","An error that can be produced during (de)serializing.",N,N],[0,"read_types","bincode","The types that the deserializer uses for optimizations",N,N],[3,"SliceReader","bincode::read_types","A BincodeRead implementation for byte slices",N,N],[3,"IoReadReader","","A BincodeRead implementation for io::Readers",N,N],[8,"BincodeRead","","A byte-oriented reading trait that is specialized for slices and generic readers.",N,N],[6,"Deserializer","bincode","A Deserializer that uses LittleEndian byteorder",N,N],[6,"Serializer","","A Serializer that uses LittleEndian byteorder",N,N],[8,"SizeLimit","","A limit on the amount of bytes that can be read or written.",N,N],[10,"add","","Tells the SizeLimit that a certain number of bytes has been read or written.  Returns Err if the limit has been exceeded.",2,[[["self"],["u64"]],["result"]]],[10,"limit","","Returns the hard limit (if one exists)",2,[[["self"]],["option",["u64"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","bincode::internal","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","bincode::read_types","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","bincode::internal","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"forward_read_str","bincode::read_types","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"get_byte_buffer","","",6,[[["self"],["usize"]],["result",["vec"]]]],[11,"forward_read_bytes","","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"forward_read_str","","",7,[[["self"],["usize"],["v"]],["result"]]],[11,"get_byte_buffer","","",7,[[["self"],["usize"]],["result",["vec"]]]],[11,"forward_read_bytes","","",7,[[["self"],["usize"],["v"]],["result"]]],[11,"add","bincode","",0,[[["self"],["u64"]],["result"]]],[11,"limit","","",0,[[["self"]],["option",["u64"]]]],[11,"add","","",3,[[["self"],["u64"]],["result"]]],[11,"limit","","",3,[[["self"]],["option",["u64"]]]],[11,"from","","",8,[[["ioerror"]],["error"]]],[11,"clone","","",0,[[["self"]],["bounded"]]],[11,"clone","","",3,[[["self"]],["infinite"]]],[11,"fmt","bincode::internal","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"read","bincode::read_types","",6,N],[11,"read","","",7,N],[11,"description","bincode::internal","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"custom","bincode","",8,[[["t"]],["self"]]],[11,"custom","","",8,[[["t"]],["error"]]],[11,"new","bincode::internal","Creates a new Serializer with the given `Write`r.",4,[[["w"]],["serializer"]]],[11,"new","bincode::read_types","Constructs a slice reader",6,N],[11,"new","","Constructs an IoReadReader",7,[[["r"]],["ioreadreader"]]],[11,"new","bincode::internal","Creates a new Deserializer with a given `Read`er and a size_limit.",5,[[["r"],["s"]],["deserializer"]]]],"paths":[[3,"Bounded"],[4,"ErrorKind"],[8,"SizeLimit"],[3,"Infinite"],[3,"Serializer"],[3,"Deserializer"],[3,"SliceReader"],[3,"IoReadReader"],[6,"Error"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator.","items":[[6,"__BitFlagsWidth","bitflags","",N,N],[14,"bitflags","","The `bitflags!` macro generates a `struct` that holds a set of C-style bitmask flags. It is useful for creating typesafe wrappers for C APIs.",N,N]],"paths":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and decoding numbers in either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",N,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",N,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,N],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"read_u16","","",3,N],[11,"read_u32","","",3,N],[11,"read_u64","","",3,N],[11,"read_uint","","",3,N],[11,"write_u16","","",3,N],[11,"write_u32","","",3,N],[11,"write_u64","","",3,N],[11,"write_uint","","",3,N],[11,"read_u16","","",4,N],[11,"read_u32","","",4,N],[11,"read_u64","","",4,N],[11,"read_uint","","",4,N],[11,"write_u16","","",4,N],[11,"write_u32","","",4,N],[11,"write_u64","","",4,N],[11,"write_uint","","",4,N],[11,"partial_cmp","","",3,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"cmp","","",3,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",3,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["chrono"]={"doc":"Chrono 0.3.1","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",N,N],[3,"ParseWeekdayError","","An error resulting from reading `Weekday` value with `FromStr`.",N,N],[4,"Weekday","","The day of week.",N,N],[13,"Mon","","Monday.",0,N],[13,"Tue","","Tuesday.",0,N],[13,"Wed","","Wednesday.",0,N],[13,"Thu","","Thursday.",0,N],[13,"Fri","","Friday.",0,N],[13,"Sat","","Saturday.",0,N],[13,"Sun","","Sunday.",0,N],[0,"prelude","","A convenience module appropriate for glob imports (`use chrono::prelude::*;`).",N,N],[0,"offset","","The time zone, which calculates offsets from the local time to UTC.",N,N],[4,"LocalResult","chrono::offset","The conversion result from the local time to the timezone-aware datetime types.",N,N],[13,"None","","Given local time representation is invalid. This can occur when, for example, the positive timezone transition.",1,N],[13,"Single","","Given local time representation has a single unique result.",1,N],[13,"Ambiguous","","Given local time representation has multiple results and thus ambiguous. This can occur when, for example, the negative timezone transition.",1,N],[0,"utc","","The UTC (Coordinated Universal Time) time zone.",N,N],[3,"UTC","chrono::offset::utc","The UTC time zone. This is the most efficient time zone when you don't need the local time. It is also used as an offset (which is also a dummy type).",N,N],[11,"today","","Returns a `Date` which corresponds to the current date.",2,[[],["date",["utc"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",2,[[],["datetime",["utc"]]]],[0,"fixed","chrono::offset","The time zone which has a fixed offset from UTC.",N,N],[3,"FixedOffset","chrono::offset::fixed","The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.",N,N],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference. The negative `secs` means the Western Hemisphere.",3,[[["i32"]],["fixedoffset"]]],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference. The negative `secs` means the Western Hemisphere.",3,[[["i32"]],["option",["fixedoffset"]]]],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference. The negative `secs` means the Eastern Hemisphere.",3,[[["i32"]],["fixedoffset"]]],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference. The negative `secs` means the Eastern Hemisphere.",3,[[["i32"]],["option",["fixedoffset"]]]],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC to the local time.",3,[[["self"]],["i32"]]],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the local time to UTC.",3,[[["self"]],["i32"]]],[0,"local","chrono::offset","The local (system) time zone.",N,N],[3,"Local","chrono::offset::local","The local timescale. This is implemented via the standard `time` crate.",N,N],[11,"today","","Returns a `Date` which corresponds to the current date.",4,[[],["date",["local"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",4,[[],["datetime",["local"]]]],[8,"Offset","chrono::offset","The offset from the local time to UTC.",N,N],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",5,[[["self"]],["fixedoffset"]]],[8,"TimeZone","","The time zone.",N,N],[16,"Offset","","An associated offset type. This type is used to store the actual offset in date and time types. The original `TimeZone` value can be recovered via `TimeZone::from_offset`.",6,N],[11,"ymd","","Makes a new `Date` from year, month, day and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,[[["self"],["i32"],["u32"],["u32"]],["date"]]],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,[[["self"],["i32"],["u32"],["u32"]],["localresult",["date"]]]],[11,"yo","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,[[["self"],["i32"],["u32"]],["date"]]],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,[[["self"],["i32"],["u32"]],["localresult",["date"]]]],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE. The resulting `Date` may have a different year from the input year.",6,[[["self"],["i32"],["u32"],["weekday"]],["date"]]],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE. The resulting `Date` may have a different year from the input year.",6,[[["self"],["i32"],["u32"],["weekday"]],["localresult",["date"]]]],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",6,[[["self"],["i64"],["u32"]],["datetime"]]],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",6,[[["self"],["i64"],["u32"]],["localresult",["datetime"]]]],[11,"datetime_from_str","","Parses a string with the specified format string and returns a `DateTime` with the current offset. See the `format::strftime` module on the supported escape sequences.",6,[[["self"],["str"],["str"]],["parseresult",["datetime"]]]],[10,"from_offset","","Reconstructs the time zone from the offset.",6,N],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if possible.",6,[[["self"],["naivedate"]],["localresult"]]],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if possible.",6,[[["self"],["naivedatetime"]],["localresult"]]],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware `Date` if possible.",6,[[["self"],["naivedate"]],["localresult",["date"]]]],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.",6,[[["self"],["naivedatetime"]],["localresult",["datetime"]]]],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot fail.",6,N],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This cannot fail.",6,N],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,[[["self"],["naivedate"]],["date"]]],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,[[["self"],["naivedatetime"]],["datetime"]]],[11,"single","","Returns `Some` only when the conversion result is unique, or `None` otherwise.",1,[[["self"]],["option"]]],[11,"earliest","","Returns `Some` for the earliest possible conversion result, or `None` if none.",1,[[["self"]],["option"]]],[11,"latest","","Returns `Some` for the latest possible conversion result, or `None` if none.",1,[[["self"]],["option"]]],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given function.",1,[[["self"],["f"]],["localresult"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`. The offset in the current date is preserved.",1,[[["self"],["naivetime"]],["localresult",["datetime"]]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",1,[[["self"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",1,[[["self"],["u32"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",1,[[["self"],["u32"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",1,[[["self"],["u32"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"unwrap","","Returns the single unique conversion result, or panics accordingly.",1,[[["self"]],["t"]]],[0,"naive","chrono","Date and time types which do not concern about the timezones.",N,N],[0,"date","chrono::naive","ISO 8601 calendar date without timezone.",N,N],[3,"NaiveDate","chrono::naive::date","ISO 8601 calendar date without timezone. Allows for every proleptic Gregorian date from Jan 1, 262145 BCE to Dec 31, 262143 CE. Also supports the conversion from ISO 8601 ordinal and week date.",N,N],[17,"MIN","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",N,N],[17,"MAX","","The maximum possible `NaiveDate` (December 31, 262143 CE).",N,N],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year, month and day).",7,[[["i32"],["u32"],["u32"]],["naivedate"]]],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year, month and day).",7,[[["i32"],["u32"],["u32"]],["option",["naivedate"]]]],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and day of the year).",7,[[["i32"],["u32"]],["naivedate"]]],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and day of the year).",7,[[["i32"],["u32"]],["option",["naivedate"]]]],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week number and day of the week). The resulting `NaiveDate` may have a different year from the input year.",7,[[["i32"],["u32"],["weekday"]],["naivedate"]]],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week number and day of the week). The resulting `NaiveDate` may have a different year from the input year.",7,[[["i32"],["u32"],["weekday"]],["option",["naivedate"]]]],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",7,[[["i32"]],["naivedate"]]],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",7,[[["i32"]],["option",["naivedate"]]]],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`. See the `format::strftime` module on the supported escape sequences.",7,[[["str"],["str"]],["parseresult",["naivedate"]]]],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",7,[[["self"],["naivetime"]],["naivedatetime"]]],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,[[["self"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,[[["self"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,[[["self"],["u32"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,[[["self"],["u32"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,[[["self"],["u32"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",7,[[["self"]],["naivedate"]]],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",7,[[["self"]],["option",["naivedate"]]]],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",7,[[["self"]],["naivedate"]]],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",7,[[["self"]],["option",["naivedate"]]]],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current date.",7,[[["self"],["oldduration"]],["option",["naivedate"]]]],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the current date.",7,[[["self"],["oldduration"]],["option",["naivedate"]]]],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date. Returns a `Duration` of integral numbers.",7,[[["self"],["naivedate"]],["oldduration"]]],[11,"format_with_items","","Formats the date with the specified formatting items. Otherwise it is same to the ordinary `format` method.",7,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the `format::strftime` module on the supported escape sequences.",7,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[0,"time","chrono::naive","ISO 8601 time without timezone.",N,N],[3,"NaiveTime","chrono::naive::time","ISO 8601 time without timezone. Allows for the nanosecond precision and optional leap second representation.",N,N],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",8,[[["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",8,[[["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,[[["u32"],["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,[[["u32"],["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,[[["u32"],["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,[[["u32"],["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,[[["u32"],["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,[[["u32"],["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,[[["u32"],["u32"]],["naivetime"]]],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,[[["u32"],["u32"]],["option",["naivetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveTime`. See the `format::strftime` module on the supported escape sequences.",8,[[["str"],["str"]],["parseresult",["naivetime"]]]],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also returns the number of seconds in the integral number of days ignored from the addition. (We cannot return `Duration` because it is subject to overflow or underflow.)",8,N],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also returns the number of seconds in the integral number of days ignored from the subtraction. (We cannot return `Duration` because it is subject to overflow or underflow.)",8,N],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time. Returns a `Duration` within +/- 1 day. This does not overflow or underflow at all.",8,[[["self"],["naivetime"]],["oldduration"]]],[11,"format_with_items","","Formats the time with the specified formatting items. Otherwise it is same to the ordinary `format` method.",8,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the time with the specified format string. See the `format::strftime` module on the supported escape sequences.",8,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[0,"datetime","chrono::naive","ISO 8601 date and time without timezone.",N,N],[3,"NaiveDateTime","chrono::naive::datetime","ISO 8601 combined date and time without timezone.",N,N],[11,"new","","Makes a new `NaiveDateTime` from date and time components. Equivalent to `date.and_time(time)` and many other helper constructors on `NaiveDate`.",9,[[["naivedate"],["naivetime"]],["naivedatetime"]]],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date and time, from the number of non-leap seconds since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",9,[[["i64"],["u32"]],["naivedatetime"]]],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date and time, from the number of non-leap seconds since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",9,[[["i64"],["u32"]],["option",["naivedatetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDateTime`. See the `format::strftime` module on the supported escape sequences.",9,[[["str"],["str"]],["parseresult",["naivedatetime"]]]],[11,"date","","Retrieves a date component.",9,[[["self"]],["naivedate"]]],[11,"time","","Retrieves a time component.",9,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since the midnight on January 1, 1970.",9,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole non-leap second.",9,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole non-leap second.",9,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole non-leap second.",9,[[["self"]],["u32"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",9,[[["self"],["oldduration"]],["option",["naivedatetime"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",9,[[["self"],["oldduration"]],["option",["naivedatetime"]]]],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date and time. This does not overflow or underflow at all.",9,[[["self"],["naivedatetime"]],["oldduration"]]],[11,"format_with_items","","Formats the combined date and time with the specified formatting items. Otherwise it is same to the ordinary `format` method.",9,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified format string. See the `format::strftime` module on the supported escape sequences.",9,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[0,"date","chrono","ISO 8601 calendar date with time zone.",N,N],[3,"Date","chrono::date","ISO 8601 calendar date with time zone.",N,N],[17,"MIN","","The minimum possible `Date`.",N,N],[17,"MAX","","The maximum possible `Date`.",N,N],[11,"from_utc","","Makes a new `Date` with given UTC date and offset. The local date should be constructed via the `TimeZone` trait.",10,N],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`. The offset in the current date is preserved.",10,[[["self"],["naivetime"]],["option",["datetime"]]]],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",10,[[["self"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",10,[[["self"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",10,[[["self"],["u32"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",10,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",10,[[["self"],["u32"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",10,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",10,[[["self"],["u32"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",10,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"succ","","Makes a new `Date` for the next date.",10,[[["self"]],["date"]]],[11,"succ_opt","","Makes a new `Date` for the next date.",10,[[["self"]],["option",["date"]]]],[11,"pred","","Makes a new `Date` for the prior date.",10,[[["self"]],["date"]]],[11,"pred_opt","","Makes a new `Date` for the prior date.",10,[[["self"]],["option",["date"]]]],[11,"offset","","Retrieves an associated offset from UTC.",10,N],[11,"timezone","","Retrieves an associated time zone.",10,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the actual `Date` (but will change the string representation).",10,[[["self"],["tz2"]],["date"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date.",10,[[["self"],["oldduration"]],["option",["date"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",10,[[["self"],["oldduration"]],["option",["date"]]]],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a `Duration` of integral numbers.",10,[[["self"],["date"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC date.",10,[[["self"]],["naivedate"]]],[11,"naive_local","","Returns a view to the naive local date.",10,[[["self"]],["naivedate"]]],[11,"format_with_items","","Formats the date with the specified formatting items.",10,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the `format::strftime` module on the supported escape sequences.",10,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[0,"datetime","chrono","ISO 8601 date and time with time zone.",N,N],[3,"DateTime","chrono::datetime","ISO 8601 combined date and time with time zone.",N,N],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset. The local datetime should be constructed via the `TimeZone` trait.",11,N],[11,"date","","Retrieves a date component.",11,[[["self"]],["date"]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not associated to the time zone.",11,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").",11,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second boundary",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second boundary",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second boundary",11,[[["self"]],["u32"]]],[11,"offset","","Retrieves an associated offset from UTC.",11,N],[11,"timezone","","Retrieves an associated time zone.",11,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the actual `DateTime` (but will change the string representation).",11,[[["self"],["tz2"]],["datetime"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",11,[[["self"],["oldduration"]],["option",["datetime"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",11,[[["self"],["oldduration"]],["option",["datetime"]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and time. This does not overflow or underflow at all.",11,[[["self"],["datetime"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",11,[[["self"]],["naivedatetime"]]],[11,"naive_local","","Returns a view to the naive local datetime.",11,[[["self"]],["naivedatetime"]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`, then returns a new `DateTime` with a parsed `FixedOffset`.",11,[[["str"]],["parseresult",["datetime"]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`, then returns a new `DateTime` with a parsed `FixedOffset`.",11,[[["str"]],["parseresult",["datetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `DateTime` with a parsed `FixedOffset`. See the `format::strftime` module on the supported escape sequences.",11,[[["str"],["str"]],["parseresult",["datetime"]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.",11,[[["self"]],["string"]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.",11,[[["self"]],["string"]]],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",11,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified format string. See the `format::strftime` module on the supported escape sequences.",11,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[0,"format","chrono","Formatting utilities for date and time.",N,N],[3,"InternalNumeric","chrono::format","An opaque type representing numeric item types for internal uses only.",N,N],[3,"InternalFixed","","An opaque type representing fixed-format item types for internal uses only.",N,N],[3,"ParseError","","An error from the `parse` function.",N,N],[3,"DelayedFormat","","A temporary object which can be used as an argument to `format!` or others. This is normally constructed via `format` methods of each date and time type.",N,N],[4,"Pad","","Padding characters for numeric items.",N,N],[13,"None","","No padding.",12,N],[13,"Zero","","Zero (`0`) padding.",12,N],[13,"Space","","Space padding.",12,N],[4,"Numeric","","Numeric item types. They have associated formatting width (FW) and parsing width (PW).",N,N],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before 1 BCE or after 9999 CE, given an initial sign.",13,N],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.",13,N],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",13,N],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years before 1 BCE or after 9999 CE, given an initial sign.",13,N],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.",13,N],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.",13,N],[13,"Month","","Month (FW=PW=2).",13,N],[13,"Day","","Day of the month (FW=PW=2).",13,N],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).",13,N],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday of January (FW=PW=2).",13,N],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",13,N],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).",13,N],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",13,N],[13,"Ordinal","","Day of the year (FW=PW=3).",13,N],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",13,N],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",13,N],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",13,N],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",13,N],[13,"Nanosecond","","The number of nanoseconds since the last whole second (FW=PW=9). Note that this is not left-aligned; see also `Fixed::Nanosecond`.",13,N],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞). For formatting, it assumes UTC upon the absence of time zone offset.",13,N],[13,"Internal","","Internal uses only.",13,N],[4,"Fixed","","Fixed-format item types.",N,N],[13,"ShortMonthName","","Abbreviated month names.",14,N],[13,"LongMonthName","","Full month names.",14,N],[13,"ShortWeekdayName","","Abbreviated day of the week names.",14,N],[13,"LongWeekdayName","","Full day of the week names.",14,N],[13,"LowerAmPm","","AM/PM.",14,N],[13,"UpperAmPm","","AM/PM.",14,N],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned nanoseconds. May print nothing, 3, 6 or 9 digits according to the available accuracy. See also `Numeric::Nanosecond`.",14,N],[13,"Nanosecond3","","Same to `Nanosecond` but the accuracy is fixed to 3.",14,N],[13,"Nanosecond6","","Same to `Nanosecond` but the accuracy is fixed to 6.",14,N],[13,"Nanosecond9","","Same to `Nanosecond` but the accuracy is fixed to 9.",14,N],[13,"TimezoneName","","Timezone name.",14,N],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).",14,N],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).",14,N],[13,"TimezoneOffset","","Same to `TimezoneOffsetColon` but prints no colon. Parsing allows an optional colon.",14,N],[13,"TimezoneOffsetZ","","Same to `TimezoneOffsetColonZ` but prints no colon. Parsing allows an optional colon.",14,N],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and MIME date and time.",14,N],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",14,N],[13,"Internal","","Internal uses only.",14,N],[4,"Item","","A single formatting item. This is used for both formatting and parsing.",N,N],[13,"Literal","","A literally printed and parsed text.",15,N],[13,"OwnedLiteral","","Same to `Literal` but with the string owned by the item.",15,N],[13,"Space","","Whitespace. Prints literally but reads zero or more whitespace.",15,N],[13,"OwnedSpace","","Same to `Space` but with the string owned by the item.",15,N],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal length (if any) when formatting; the parser simply ignores any padded whitespace and zeroes.",15,N],[13,"Fixed","","Fixed-format item.",15,N],[13,"Error","","Issues a formatting error. Used to signal an invalid format string.",15,N],[5,"parse","","Tries to parse given string into `parsed` with given formatting items. Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used). There should be no trailing string after parsing; use a stray `Item::Space` to trim whitespaces.",N,[[["parsed"],["str"],["i"]],["parseresult"]]],[5,"format","","Tries to format given arguments with given formatting items. Internally used by `DelayedFormat`.",N,[[["formatter"],["option",["naivedate"]],["option",["naivetime"]],["option"],["i"]],["result"]]],[0,"parsed","","A collection of parsed date and time items. They can be constructed incrementally while being checked for consistency.",N,N],[3,"Parsed","chrono::format::parsed","Parsed parts of date and time. There are two classes of methods:",N,N],[12,"year","","Year.",16,N],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE when set.",16,N],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",16,N],[12,"isoyear","","Year in the ISO week date.",16,N],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that the year is >= 1 BCE when set.",16,N],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the year is >= 1 BCE when set.",16,N],[12,"month","","Month (1--12).",16,N],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday of January (0--53, 1--53 or 1--52 depending on the year).",16,N],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday of January (0--53, 1--53 or 1--52 depending on the year).",16,N],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",16,N],[12,"weekday","","Day of the week.",16,N],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",16,N],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).",16,N],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.",16,N],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",16,N],[12,"minute","","Minute number (0--59).",16,N],[12,"second","","Second number (0--60, accounting for leap seconds).",16,N],[12,"nanosecond","","The number of nanoseconds since the whole second (0--999,999,999).",16,N],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970.",16,N],[12,"offset","","Offset from the local time to UTC, in seconds.",16,N],[11,"new","","Returns the initial value of parsed parts.",16,[[],["parsed"]]],[11,"set_year","","Tries to set the `year` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_month","","Tries to set the `month` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_weekday","","Tries to set the `weekday` field from given value.",16,[[["self"],["weekday"]],["parseresult"]]],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_day","","Tries to set the `day` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value. (`false` for AM, `true` for PM)",16,[[["self"],["bool"]],["parseresult"]]],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour number in 12-hour clocks.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_minute","","Tries to set the `minute` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_second","","Tries to set the `second` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"set_offset","","Tries to set the `offset` field from given value.",16,[[["self"],["i64"]],["parseresult"]]],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",16,[[["self"]],["parseresult",["naivedate"]]]],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",16,[[["self"]],["parseresult",["naivetime"]]]],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields, except for the `offset` field (assumed to have a given value). This is required for parsing a local time or other known-timezone inputs.",16,[[["self"],["i32"]],["parseresult",["naivedatetime"]]]],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",16,[[["self"]],["parseresult",["fixedoffset"]]]],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given fields.",16,[[["self"]],["parseresult",["datetime"]]]],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given fields, with an additional `TimeZone` used to interpret and validate the local date.",16,[[["self"],["tz"]],["parseresult",["datetime"]]]],[0,"strftime","chrono::format","`strftime`/`strptime`-inspired date and time formatting syntax.",N,N],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",N,N],[11,"new","","Creates a new parsing iterator from the `strftime`-like format string.",17,[[["str"]],["strftimeitems"]]],[6,"ParseResult","chrono::format","Same to `Result<T, ParseError>`.",N,N],[11,"new","","Makes a new `DelayedFormat` value out of local date and time.",18,[[["option",["naivedate"]],["option",["naivetime"]],["i"]],["delayedformat"]]],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and time and UTC offset.",18,[[["option",["naivedate"]],["option",["naivetime"]],["off"],["i"]],["delayedformat"]]],[8,"Datelike","chrono","The common set of methods for date component.",N,N],[10,"year","","Returns the year number in the calendar date.",19,[[["self"]],["i32"]]],[11,"year_ce","","Returns the absolute year number starting from 1 with a boolean flag, which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).",19,N],[10,"month","","Returns the month number starting from 1.",19,[[["self"]],["u32"]]],[10,"month0","","Returns the month number starting from 0.",19,[[["self"]],["u32"]]],[10,"day","","Returns the day of month starting from 1.",19,[[["self"]],["u32"]]],[10,"day0","","Returns the day of month starting from 0.",19,[[["self"]],["u32"]]],[10,"ordinal","","Returns the day of year starting from 1.",19,[[["self"]],["u32"]]],[10,"ordinal0","","Returns the day of year starting from 0.",19,[[["self"]],["u32"]]],[10,"weekday","","Returns the day of week.",19,[[["self"]],["weekday"]]],[10,"isoweekdate","","Returns the ISO week date: an adjusted year, week number and day of week. The adjusted year may differ from that of the calendar date.",19,N],[10,"with_year","","Makes a new value with the year number changed.",19,[[["self"],["i32"]],["option"]]],[10,"with_month","","Makes a new value with the month number (starting from 1) changed.",19,[[["self"],["u32"]],["option"]]],[10,"with_month0","","Makes a new value with the month number (starting from 0) changed.",19,[[["self"],["u32"]],["option"]]],[10,"with_day","","Makes a new value with the day of month (starting from 1) changed.",19,[[["self"],["u32"]],["option"]]],[10,"with_day0","","Makes a new value with the day of month (starting from 0) changed.",19,[[["self"],["u32"]],["option"]]],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1) changed.",19,[[["self"],["u32"]],["option"]]],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0) changed.",19,[[["self"],["u32"]],["option"]]],[11,"num_days_from_ce","","Returns the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",19,[[["self"]],["i32"]]],[8,"Timelike","","The common set of methods for time component.",N,N],[10,"hour","","Returns the hour number from 0 to 23.",20,[[["self"]],["u32"]]],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag, which is false for AM and true for PM.",20,N],[10,"minute","","Returns the minute number from 0 to 59.",20,[[["self"]],["u32"]]],[10,"second","","Returns the second number from 0 to 59.",20,[[["self"]],["u32"]]],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",20,[[["self"]],["u32"]]],[10,"with_hour","","Makes a new value with the hour number changed.",20,[[["self"],["u32"]],["option"]]],[10,"with_minute","","Makes a new value with the minute number changed.",20,[[["self"],["u32"]],["option"]]],[10,"with_second","","Makes a new value with the second number changed.",20,[[["self"],["u32"]],["option"]]],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole non-leap second changed.",20,[[["self"],["u32"]],["option"]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",20,[[["self"]],["u32"]]],[11,"succ","","The next day in the week.",0,[[["self"]],["weekday"]]],[11,"pred","","The previous day in the week.",0,[[["self"]],["weekday"]]],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)",0,[[["self"]],["u32"]]],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",0,[[["self"]],["u32"]]],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",0,[[["self"]],["u32"]]],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",0,[[["self"]],["u32"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","chrono::offset","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","chrono::offset::utc","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","chrono::offset::fixed","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","chrono::offset::local","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","chrono::naive::date","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","chrono::naive::time","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","chrono::naive::datetime","",9,[[["self"]],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","chrono::date","",10,[[["self"]],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","chrono::datetime","",11,[[["self"]],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","chrono::format","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","chrono::format::parsed","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","chrono::format::strftime","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"sub","chrono","",21,[[["self"],["duration"]],["duration"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",21,[[["self"],["duration"]],["bool"]]],[11,"ne","","",21,[[["self"],["duration"]],["bool"]]],[11,"mul","","",21,[[["self"],["i32"]],["duration"]]],[11,"clone","","",21,[[["self"]],["duration"]]],[11,"div","","",21,[[["self"],["i32"]],["duration"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"cmp","","",21,[[["self"],["duration"]],["ordering"]]],[11,"partial_cmp","","",21,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",21,[[["self"],["duration"]],["bool"]]],[11,"le","","",21,[[["self"],["duration"]],["bool"]]],[11,"gt","","",21,[[["self"],["duration"]],["bool"]]],[11,"ge","","",21,[[["self"],["duration"]],["bool"]]],[11,"add","","",21,[[["self"],["duration"]],["duration"]]],[11,"neg","","",21,[[["self"]],["duration"]]],[11,"fix","chrono::offset::utc","",2,[[["self"]],["fixedoffset"]]],[11,"fix","chrono::offset::fixed","",3,[[["self"]],["fixedoffset"]]],[11,"from_offset","chrono::offset::utc","",2,[[["utc"]],["utc"]]],[11,"offset_from_local_date","","",2,[[["self"],["naivedate"]],["localresult",["utc"]]]],[11,"offset_from_local_datetime","","",2,[[["self"],["naivedatetime"]],["localresult",["utc"]]]],[11,"offset_from_utc_date","","",2,[[["self"],["naivedate"]],["utc"]]],[11,"offset_from_utc_datetime","","",2,[[["self"],["naivedatetime"]],["utc"]]],[11,"from_offset","chrono::offset::fixed","",3,[[["fixedoffset"]],["fixedoffset"]]],[11,"offset_from_local_date","","",3,[[["self"],["naivedate"]],["localresult",["fixedoffset"]]]],[11,"offset_from_local_datetime","","",3,[[["self"],["naivedatetime"]],["localresult",["fixedoffset"]]]],[11,"offset_from_utc_date","","",3,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",3,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_offset","chrono::offset::local","",4,[[["fixedoffset"]],["local"]]],[11,"offset_from_local_date","","",4,[[["self"],["naivedate"]],["localresult",["fixedoffset"]]]],[11,"offset_from_local_datetime","","",4,[[["self"],["naivedatetime"]],["localresult",["fixedoffset"]]]],[11,"offset_from_utc_date","","",4,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",4,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_local_date","","",4,[[["self"],["naivedate"]],["localresult",["date"]]]],[11,"from_local_datetime","","",4,[[["self"],["naivedatetime"]],["localresult",["datetime"]]]],[11,"from_utc_date","","",4,[[["self"],["naivedate"]],["date",["local"]]]],[11,"from_utc_datetime","","",4,[[["self"],["naivedatetime"]],["datetime",["local"]]]],[11,"year","chrono::naive::date","Returns the year number in the calendar date.",7,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",7,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",7,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",7,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",7,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",7,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",7,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",7,[[["self"]],["weekday"]]],[11,"isoweekdate","","",7,N],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",7,[[["self"],["i32"]],["option",["naivedate"]]]],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting from 1) changed.",7,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting from 0) changed.",7,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting from 1) changed.",7,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting from 0) changed.",7,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting from 1) changed.",7,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting from 0) changed.",7,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"year","chrono::naive::datetime","Returns the year number in the calendar date.",9,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",9,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",9,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",9,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",9,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",9,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",9,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",9,[[["self"]],["weekday"]]],[11,"isoweekdate","","",9,N],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",9,[[["self"],["i32"]],["option",["naivedatetime"]]]],[11,"with_month","","Makes a new `NaiveDateTime` with the month number (starting from 1) changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number (starting from 0) changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"year","chrono::date","",10,[[["self"]],["i32"]]],[11,"month","","",10,[[["self"]],["u32"]]],[11,"month0","","",10,[[["self"]],["u32"]]],[11,"day","","",10,[[["self"]],["u32"]]],[11,"day0","","",10,[[["self"]],["u32"]]],[11,"ordinal","","",10,[[["self"]],["u32"]]],[11,"ordinal0","","",10,[[["self"]],["u32"]]],[11,"weekday","","",10,[[["self"]],["weekday"]]],[11,"isoweekdate","","",10,N],[11,"with_year","","",10,[[["self"],["i32"]],["option",["date"]]]],[11,"with_month","","",10,[[["self"],["u32"]],["option",["date"]]]],[11,"with_month0","","",10,[[["self"],["u32"]],["option",["date"]]]],[11,"with_day","","",10,[[["self"],["u32"]],["option",["date"]]]],[11,"with_day0","","",10,[[["self"],["u32"]],["option",["date"]]]],[11,"with_ordinal","","",10,[[["self"],["u32"]],["option",["date"]]]],[11,"with_ordinal0","","",10,[[["self"],["u32"]],["option",["date"]]]],[11,"year","chrono::datetime","",11,[[["self"]],["i32"]]],[11,"month","","",11,[[["self"]],["u32"]]],[11,"month0","","",11,[[["self"]],["u32"]]],[11,"day","","",11,[[["self"]],["u32"]]],[11,"day0","","",11,[[["self"]],["u32"]]],[11,"ordinal","","",11,[[["self"]],["u32"]]],[11,"ordinal0","","",11,[[["self"]],["u32"]]],[11,"weekday","","",11,[[["self"]],["weekday"]]],[11,"isoweekdate","","",11,N],[11,"with_year","","",11,[[["self"],["i32"]],["option",["datetime"]]]],[11,"with_month","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_month0","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_day","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_day0","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_ordinal","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_ordinal0","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"hour","chrono::naive::time","Returns the hour number from 0 to 23.",8,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",8,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",8,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",8,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",8,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",8,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",8,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.",8,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",8,[[["self"]],["u32"]]],[11,"hour","chrono::naive::datetime","Returns the hour number from 0 to 23.",9,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",9,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",9,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",9,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.",9,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"hour","chrono::datetime","",11,[[["self"]],["u32"]]],[11,"minute","","",11,[[["self"]],["u32"]]],[11,"second","","",11,[[["self"]],["u32"]]],[11,"nanosecond","","",11,[[["self"]],["u32"]]],[11,"with_hour","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_minute","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_second","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_nanosecond","","",11,[[["self"],["u32"]],["option",["datetime"]]]],[11,"next","chrono::format::strftime","",17,[[["self"]],["option",["item"]]]],[11,"partial_cmp","chrono::naive::date","",7,[[["self"],["naivedate"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["naivedate"]],["bool"]]],[11,"le","","",7,[[["self"],["naivedate"]],["bool"]]],[11,"gt","","",7,[[["self"],["naivedate"]],["bool"]]],[11,"ge","","",7,[[["self"],["naivedate"]],["bool"]]],[11,"partial_cmp","chrono::naive::time","",8,[[["self"],["naivetime"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["naivetime"]],["bool"]]],[11,"le","","",8,[[["self"],["naivetime"]],["bool"]]],[11,"gt","","",8,[[["self"],["naivetime"]],["bool"]]],[11,"ge","","",8,[[["self"],["naivetime"]],["bool"]]],[11,"partial_cmp","chrono::naive::datetime","",9,[[["self"],["naivedatetime"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["naivedatetime"]],["bool"]]],[11,"le","","",9,[[["self"],["naivedatetime"]],["bool"]]],[11,"gt","","",9,[[["self"],["naivedatetime"]],["bool"]]],[11,"ge","","",9,[[["self"],["naivedatetime"]],["bool"]]],[11,"partial_cmp","chrono::date","",10,[[["self"],["date"]],["option",["ordering"]]]],[11,"partial_cmp","chrono::datetime","",11,[[["self"],["datetime"]],["option",["ordering"]]]],[11,"default","chrono::format::parsed","",16,[[],["parsed"]]],[11,"cmp","chrono::naive::date","",7,[[["self"],["naivedate"]],["ordering"]]],[11,"cmp","chrono::naive::time","",8,[[["self"],["naivetime"]],["ordering"]]],[11,"cmp","chrono::naive::datetime","",9,[[["self"],["naivedatetime"]],["ordering"]]],[11,"cmp","chrono::date","",10,[[["self"],["date"]],["ordering"]]],[11,"cmp","chrono::datetime","",11,[[["self"],["datetime"]],["ordering"]]],[11,"eq","chrono::offset","",1,[[["self"],["localresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["localresult"]],["bool"]]],[11,"eq","chrono::offset::utc","",2,[[["self"],["utc"]],["bool"]]],[11,"eq","chrono::offset::fixed","",3,[[["self"],["fixedoffset"]],["bool"]]],[11,"ne","","",3,[[["self"],["fixedoffset"]],["bool"]]],[11,"eq","chrono::naive::date","",7,[[["self"],["naivedate"]],["bool"]]],[11,"ne","","",7,[[["self"],["naivedate"]],["bool"]]],[11,"eq","chrono::naive::time","",8,[[["self"],["naivetime"]],["bool"]]],[11,"ne","","",8,[[["self"],["naivetime"]],["bool"]]],[11,"eq","chrono::naive::datetime","",9,[[["self"],["naivedatetime"]],["bool"]]],[11,"ne","","",9,[[["self"],["naivedatetime"]],["bool"]]],[11,"eq","chrono::date","",10,[[["self"],["date"]],["bool"]]],[11,"eq","chrono::datetime","",11,[[["self"],["datetime"]],["bool"]]],[11,"eq","chrono::format","",12,[[["self"],["pad"]],["bool"]]],[11,"eq","","",13,[[["self"],["numeric"]],["bool"]]],[11,"ne","","",13,[[["self"],["numeric"]],["bool"]]],[11,"eq","","",23,[[["self"],["internalnumeric"]],["bool"]]],[11,"eq","","",14,[[["self"],["fixed"]],["bool"]]],[11,"ne","","",14,[[["self"],["fixed"]],["bool"]]],[11,"eq","","",24,[[["self"],["internalfixed"]],["bool"]]],[11,"eq","","",15,[[["self"],["item"]],["bool"]]],[11,"ne","","",15,[[["self"],["item"]],["bool"]]],[11,"eq","","",25,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",25,[[["self"],["parseerror"]],["bool"]]],[11,"eq","chrono::format::parsed","",16,[[["self"],["parsed"]],["bool"]]],[11,"ne","","",16,[[["self"],["parsed"]],["bool"]]],[11,"eq","chrono","",0,[[["self"],["weekday"]],["bool"]]],[11,"eq","","",22,[[["self"],["parseweekdayerror"]],["bool"]]],[11,"ne","","",22,[[["self"],["parseweekdayerror"]],["bool"]]],[11,"clone","chrono::offset","",1,[[["self"]],["localresult"]]],[11,"clone","chrono::offset::utc","",2,[[["self"]],["utc"]]],[11,"clone","chrono::offset::fixed","",3,[[["self"]],["fixedoffset"]]],[11,"clone","chrono::offset::local","",4,[[["self"]],["local"]]],[11,"clone","chrono::naive::date","",7,[[["self"]],["naivedate"]]],[11,"clone","chrono::naive::time","",8,[[["self"]],["naivetime"]]],[11,"clone","chrono::naive::datetime","",9,[[["self"]],["naivedatetime"]]],[11,"clone","chrono::date","",10,[[["self"]],["date"]]],[11,"clone","chrono::datetime","",11,[[["self"]],["datetime"]]],[11,"clone","chrono::format","",12,[[["self"]],["pad"]]],[11,"clone","","",13,[[["self"]],["numeric"]]],[11,"clone","","",23,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["fixed"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"clone","","",15,[[["self"]],["item"]]],[11,"clone","","",25,[[["self"]],["parseerror"]]],[11,"clone","chrono::format::parsed","",16,[[["self"]],["parsed"]]],[11,"clone","chrono::format::strftime","",17,[[["self"]],["strftimeitems"]]],[11,"clone","chrono","",0,[[["self"]],["weekday"]]],[11,"clone","","",22,[[["self"]],["parseweekdayerror"]]],[11,"fmt","chrono::offset::utc","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::offset::fixed","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive::date","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive::time","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive::datetime","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::date","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::datetime","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::offset","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::offset::utc","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::offset::fixed","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive::date","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive::time","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive::datetime","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::date","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::datetime","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format::parsed","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"hash","chrono::naive::date","",7,[[["self"],["h"]]]],[11,"hash","chrono::naive::time","",8,[[["self"],["h"]]]],[11,"hash","chrono::naive::datetime","",9,[[["self"],["h"]]]],[11,"hash","chrono::date","",10,[[["self"],["h"]]]],[11,"hash","chrono::datetime","",11,[[["self"],["h"]]]],[11,"hash","chrono","",0,N],[11,"add","chrono::naive::time","",8,[[["self"],["fixedoffset"]],["naivetime"]]],[11,"add","chrono::naive::datetime","",9,[[["self"],["fixedoffset"]],["naivedatetime"]]],[11,"add","chrono::datetime","",11,[[["self"],["fixedoffset"]],["datetime"]]],[11,"add","chrono::naive::date","",7,[[["self"],["oldduration"]],["naivedate"]]],[11,"add","chrono::naive::time","",8,[[["self"],["oldduration"]],["naivetime"]]],[11,"add","chrono::naive::datetime","",9,[[["self"],["oldduration"]],["naivedatetime"]]],[11,"add","chrono::date","",10,[[["self"],["oldduration"]],["date"]]],[11,"add","chrono::datetime","",11,[[["self"],["oldduration"]],["datetime"]]],[11,"sub","chrono::naive::time","",8,[[["self"],["fixedoffset"]],["naivetime"]]],[11,"sub","chrono::naive::datetime","",9,[[["self"],["fixedoffset"]],["naivedatetime"]]],[11,"sub","chrono::datetime","",11,[[["self"],["fixedoffset"]],["datetime"]]],[11,"sub","chrono::naive::date","",7,[[["self"],["oldduration"]],["naivedate"]]],[11,"sub","chrono::naive::time","",8,[[["self"],["oldduration"]],["naivetime"]]],[11,"sub","chrono::naive::datetime","",9,[[["self"],["oldduration"]],["naivedatetime"]]],[11,"sub","chrono::date","",10,[[["self"],["oldduration"]],["date"]]],[11,"sub","chrono::datetime","",11,[[["self"],["oldduration"]],["datetime"]]],[11,"from_str","chrono::naive::date","",7,[[["str"]],["parseresult",["naivedate"]]]],[11,"from_str","chrono::naive::time","",8,[[["str"]],["parseresult",["naivetime"]]]],[11,"from_str","chrono::naive::datetime","",9,[[["str"]],["parseresult",["naivedatetime"]]]],[11,"from_str","chrono::datetime","",11,[[["str"]],["parseresult",["datetime"]]]],[11,"from_str","","",11,[[["str"]],["parseresult",["datetime"]]]],[11,"from_str","","",11,[[["str"]],["parseresult",["datetime"]]]],[11,"from_str","chrono","",0,[[["str"]],["result"]]],[11,"description","chrono::format","",25,[[["self"]],["str"]]],[11,"from_i64","chrono","",0,[[["i64"]],["option",["weekday"]]]],[11,"from_u64","","",0,[[["u64"]],["option",["weekday"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",21,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",21,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",21,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",21,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",21,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",21,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",21,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",21,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",21,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",21,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",21,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",21,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",21,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",21,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",21,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 2^63 microseconds in either direction).",21,[[["self"]],["option",["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 2^63 nanoseconds in either direction).",21,[[["self"]],["option",["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",21,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",21,[[["self"],["duration"]],["option",["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",21,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",21,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",21,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",21,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",21,[[["duration"]],["result",["duration","outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",21,[[["self"]],["result",["duration","outofrangeerror"]]]]],"paths":[[4,"Weekday"],[4,"LocalResult"],[3,"UTC"],[3,"FixedOffset"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"Parsed"],[3,"StrftimeItems"],[3,"DelayedFormat"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"],[3,"ParseWeekdayError"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"]]};
searchIndex["csv"]={"doc":"The `csv` crate provides a fast and flexible CSV reader and writer, with support for Serde.","items":[[3,"ByteRecord","csv","A single CSV record stored as raw bytes.",N,N],[3,"ByteRecordIter","","A double-ended iterator over the fields in a byte record.",N,N],[3,"Position","","A position in CSV data.",N,N],[3,"DeserializeError","","An Serde deserialization error.",N,N],[3,"Error","","An error that can occur when processing CSV data.",N,N],[3,"FromUtf8Error","","A UTF-8 validation error during record conversion.",N,N],[3,"IntoInnerError","","`IntoInnerError` occurs when consuming a `Writer` fails.",N,N],[3,"Utf8Error","","A UTF-8 validation error.",N,N],[3,"Reader","","A already configured CSV reader.",N,N],[3,"ReaderBuilder","","Builds a CSV reader with various configuration knobs.",N,N],[3,"DeserializeRecordsIntoIter","","An owned iterator over deserialized records.",N,N],[3,"DeserializeRecordsIter","","A borrowed iterator over deserialized records.",N,N],[3,"StringRecordsIntoIter","","An owned iterator over records as strings.",N,N],[3,"StringRecordsIter","","A borrowed iterator over records as strings.",N,N],[3,"ByteRecordsIntoIter","","An owned iterator over records as raw bytes.",N,N],[3,"ByteRecordsIter","","A borrowed iterator over records as raw bytes.",N,N],[3,"StringRecord","","A single CSV record stored as valid UTF-8 bytes.",N,N],[3,"StringRecordIter","","An iterator over the fields in a string record.",N,N],[3,"Writer","","A already configured CSV writer.",N,N],[3,"WriterBuilder","","Builds a CSV writer with various configuration knobs.",N,N],[4,"DeserializeErrorKind","","The type of a Serde deserialization error.",N,N],[13,"Message","","A generic Serde deserialization error.",0,N],[13,"Unsupported","","A generic Serde unsupported error.",0,N],[13,"UnexpectedEndOfRow","","This error occurs when a Rust type expects to decode another field from a row, but no more fields exist.",0,N],[13,"InvalidUtf8","","This error occurs when UTF-8 validation on a field fails. UTF-8 validation is only performed when the Rust type requires it (e.g., a `String` or `&str` type).",0,N],[13,"ParseBool","","This error occurs when a boolean value fails to parse.",0,N],[13,"ParseInt","","This error occurs when an integer value fails to parse.",0,N],[13,"ParseFloat","","This error occurs when a float value fails to parse.",0,N],[4,"ErrorKind","","The specific type of an error.",N,N],[13,"Io","","An I/O error that occurred while reading CSV data.",1,N],[13,"Utf8","","A UTF-8 decoding error that occured while reading CSV data into Rust `String`s.",1,N],[12,"pos","csv::ErrorKind","The position of the record in which this error occurred, if available.",1,N],[12,"err","","The corresponding UTF-8 error.",1,N],[13,"UnequalLengths","csv","This error occurs when two records with an unequal number of fields are found. This error only occurs when the `flexible` option in a CSV reader/writer is disabled.",1,N],[12,"pos","csv::ErrorKind","The position of the first record with an unequal number of fields to the previous record, if available.",1,N],[12,"expected_len","","The expected number of fields in a record. This is the number of fields in the record read prior to the record indicated by `pos`.",1,N],[12,"len","","The number of fields in the bad record.",1,N],[13,"Seek","csv","This error occurs when either the `byte_headers` or `headers` methods are called on a CSV reader that was asked to `seek` before it parsed the first record.",1,N],[13,"Serialize","","An error of this kind occurs only when using the Serde serializer.",1,N],[13,"Deserialize","","An error of this kind occurs only when performing automatic deserialization with serde.",1,N],[12,"pos","csv::ErrorKind","The position of this error, if available.",1,N],[12,"err","","The deserialization error.",1,N],[4,"QuoteStyle","csv","The quoting style to use when writing CSV data.",N,N],[13,"Always","","This puts quotes around every field. Always.",2,N],[13,"Necessary","","This puts quotes around fields only when necessary.",2,N],[13,"NonNumeric","","This puts quotes around all fields that are non-numeric. Namely, when writing a field that does not parse as a valid float or integer, then quotes will be used even if they aren't strictly necessary.",2,N],[13,"Never","","This never writes quotes, even if it would produce invalid CSV data.",2,N],[4,"Terminator","","A record terminator.",N,N],[13,"CRLF","","Parses `\\r`, `\\n` or `\\r\\n` as a single record terminator.",3,N],[13,"Any","","Parses the byte given as a record terminator.",3,N],[4,"Trim","","The whitespace preservation behaviour when reading CSV data.",N,N],[13,"None","","Preserves fields and headers. This is the default.",4,N],[13,"Headers","","Trim whitespace from headers.",4,N],[13,"Fields","","Trim whitespace from fields, but not headers.",4,N],[13,"All","","Trim whitespace from fields and headers.",4,N],[5,"invalid_option","","A custom Serde deserializer for possibly invalid `Option<T>` fields.",N,[[["d"]],["result",["option"]]]],[11,"new","","Create a new empty `ByteRecord`.",5,[[],["byterecord"]]],[11,"with_capacity","","Create a new empty `ByteRecord` with the given capacity settings.",5,[[["usize"],["usize"]],["byterecord"]]],[11,"deserialize","","Deserialize this record.",5,[[["self"],["option",["byterecord"]]],["result"]]],[11,"iter","","Returns an iterator over all fields in this record.",5,[[["self"]],["byterecorditer"]]],[11,"get","","Return the field at index `i`.",5,[[["self"],["usize"]],["option"]]],[11,"is_empty","","Returns true if and only if this record is empty.",5,[[["self"]],["bool"]]],[11,"len","","Returns the number of fields in this record.",5,[[["self"]],["usize"]]],[11,"truncate","","Truncate this record to `n` fields.",5,[[["self"],["usize"]]]],[11,"clear","","Clear this record so that it has zero fields.",5,[[["self"]]]],[11,"trim","","Trim the fields of this record so that leading and trailing whitespace is removed.",5,[[["self"]]]],[11,"push_field","","Add a new field to this record.",5,N],[11,"position","","Return the position of this record, if available.",5,[[["self"]],["option",["position"]]]],[11,"set_position","","Set the position of this record.",5,[[["self"],["option",["position"]]]]],[11,"range","","Return the start and end position of a field in this record.",5,[[["self"],["usize"]],["option",["range"]]]],[11,"as_slice","","Return the entire row as a single byte slice. The slice returned stores all fields contiguously. The boundaries of each field can be determined via the `range` method.",5,N],[11,"new","","Returns a new position initialized to the start value.",6,[[],["position"]]],[11,"byte","","The byte offset, starting at `0`, of this position.",6,[[["self"]],["u64"]]],[11,"line","","The line number, starting at `1`, of this position.",6,[[["self"]],["u64"]]],[11,"record","","The record index, starting with the first record at `0`.",6,[[["self"]],["u64"]]],[11,"set_byte","","Set the byte offset of this position.",6,[[["self"],["u64"]],["position"]]],[11,"set_line","","Set the line number of this position.",6,[[["self"],["u64"]],["position"]]],[11,"set_record","","Set the record index of this position.",6,[[["self"],["u64"]],["position"]]],[11,"field","","Return the field index (starting at 0) of this error, if available.",7,[[["self"]],["option",["u64"]]]],[11,"kind","","Return the underlying error kind.",7,[[["self"]],["deserializeerrorkind"]]],[11,"kind","","Return the specific type of this error.",8,[[["self"]],["errorkind"]]],[11,"into_kind","","Unwrap this error into its underlying type.",8,[[["self"]],["errorkind"]]],[11,"is_io_error","","Returns true if this is an I/O error.",8,[[["self"]],["bool"]]],[11,"into_byte_record","","Access the underlying `ByteRecord` that failed UTF-8 validation.",9,[[["self"]],["byterecord"]]],[11,"utf8_error","","Access the underlying UTF-8 validation error.",9,[[["self"]],["utf8error"]]],[11,"field","","The field index of a byte record in which UTF-8 validation failed.",10,[[["self"]],["usize"]]],[11,"valid_up_to","","The index into the given field up to which valid UTF-8 was verified.",10,[[["self"]],["usize"]]],[11,"error","","Returns the error which caused the call to `into_inner` to fail.",11,[[["self"]],["error"]]],[11,"into_inner","","Returns the underlying writer which generated the error.",11,[[["self"]],["w"]]],[0,"cookbook","","A cookbook of examples for CSV reading and writing.",N,N],[11,"new","","Create a new builder for configuring CSV parsing.",12,[[],["readerbuilder"]]],[11,"from_path","","Build a CSV parser from this configuration that reads data from the given file path.",12,[[["self"],["p"]],["result",["reader"]]]],[11,"from_reader","","Build a CSV parser from this configuration that reads data from `rdr`.",12,[[["self"],["r"]],["reader"]]],[11,"delimiter","","The field delimiter to use when parsing CSV.",12,[[["self"],["u8"]],["readerbuilder"]]],[11,"has_headers","","Whether to treat the first row as a special header row.",12,[[["self"],["bool"]],["readerbuilder"]]],[11,"flexible","","Whether the number of fields in records is allowed to change or not.",12,[[["self"],["bool"]],["readerbuilder"]]],[11,"trim","","Whether fields are trimmed of leading and trailing whitespace or not.",12,[[["self"],["trim"]],["readerbuilder"]]],[11,"terminator","","The record terminator to use when parsing CSV.",12,[[["self"],["terminator"]],["readerbuilder"]]],[11,"quote","","The quote character to use when parsing CSV.",12,[[["self"],["u8"]],["readerbuilder"]]],[11,"escape","","The escape character to use when parsing CSV.",12,[[["self"],["option",["u8"]]],["readerbuilder"]]],[11,"double_quote","","Enable double quote escapes.",12,[[["self"],["bool"]],["readerbuilder"]]],[11,"quoting","","Enable or disable quoting.",12,[[["self"],["bool"]],["readerbuilder"]]],[11,"comment","","The comment character to use when parsing CSV.",12,[[["self"],["option",["u8"]]],["readerbuilder"]]],[11,"ascii","","A convenience method for specifying a configuration to read ASCII delimited text.",12,[[["self"]],["readerbuilder"]]],[11,"buffer_capacity","","Set the capacity (in bytes) of the buffer used in the CSV reader. This defaults to a reasonable setting.",12,[[["self"],["usize"]],["readerbuilder"]]],[11,"from_path","","Create a new CSV parser with a default configuration for the given file path.",13,[[["p"]],["result",["reader"]]]],[11,"from_reader","","Create a new CSV parser with a default configuration for the given reader.",13,[[["r"]],["reader"]]],[11,"deserialize","","Returns a borrowed iterator over deserialized records.",13,[[["self"]],["deserializerecordsiter"]]],[11,"into_deserialize","","Returns an owned iterator over deserialized records.",13,[[["self"]],["deserializerecordsintoiter"]]],[11,"records","","Returns a borrowed iterator over all records as strings.",13,[[["self"]],["stringrecordsiter"]]],[11,"into_records","","Returns an owned iterator over all records as strings.",13,[[["self"]],["stringrecordsintoiter"]]],[11,"byte_records","","Returns a borrowed iterator over all records as raw bytes.",13,[[["self"]],["byterecordsiter"]]],[11,"into_byte_records","","Returns an owned iterator over all records as raw bytes.",13,[[["self"]],["byterecordsintoiter"]]],[11,"headers","","Returns a reference to the first row read by this parser.",13,[[["self"]],["result",["stringrecord"]]]],[11,"byte_headers","","Returns a reference to the first row read by this parser as raw bytes.",13,[[["self"]],["result",["byterecord"]]]],[11,"set_headers","","Set the headers of this CSV parser manually.",13,[[["self"],["stringrecord"]]]],[11,"set_byte_headers","","Set the headers of this CSV parser manually as raw bytes.",13,[[["self"],["byterecord"]]]],[11,"read_record","","Read a single row into the given record. Returns false when no more records could be read.",13,[[["self"],["stringrecord"]],["result",["bool"]]]],[11,"read_byte_record","","Read a single row into the given byte record. Returns false when no more records could be read.",13,[[["self"],["byterecord"]],["result",["bool"]]]],[11,"position","","Return the current position of this CSV reader.",13,[[["self"]],["position"]]],[11,"is_done","","Returns true if and only if this reader has been exhausted.",13,[[["self"]],["bool"]]],[11,"has_headers","","Returns true if and only if this reader has been configured to interpret the first record as a header record.",13,[[["self"]],["bool"]]],[11,"get_ref","","Returns a reference to the underlying reader.",13,[[["self"]],["r"]]],[11,"get_mut","","Returns a mutable reference to the underlying reader.",13,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this CSV reader, returning the underlying reader.",13,[[["self"]],["r"]]],[11,"seek","","Seeks the underlying reader to the position given.",13,[[["self"],["position"]],["result"]]],[11,"seek_raw","","This is like `seek`, but provides direct control over how the seeking operation is performed via `io::SeekFrom`.",13,[[["self"],["seekfrom"],["position"]],["result"]]],[11,"reader","","Return a reference to the underlying CSV reader.",14,[[["self"]],["reader"]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",14,[[["self"]],["reader"]]],[11,"into_reader","","Drop this iterator and return the underlying CSV reader.",14,[[["self"]],["reader"]]],[11,"reader","","Return a reference to the underlying CSV reader.",15,[[["self"]],["reader"]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",15,[[["self"]],["reader"]]],[11,"reader","","Return a reference to the underlying CSV reader.",16,[[["self"]],["reader"]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",16,[[["self"]],["reader"]]],[11,"into_reader","","Drop this iterator and return the underlying CSV reader.",16,[[["self"]],["reader"]]],[11,"reader","","Return a reference to the underlying CSV reader.",17,[[["self"]],["reader"]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",17,[[["self"]],["reader"]]],[11,"reader","","Return a reference to the underlying CSV reader.",18,[[["self"]],["reader"]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",18,[[["self"]],["reader"]]],[11,"into_reader","","Drop this iterator and return the underlying CSV reader.",18,[[["self"]],["reader"]]],[11,"reader","","Return a reference to the underlying CSV reader.",19,[[["self"]],["reader"]]],[11,"reader_mut","","Return a mutable reference to the underlying CSV reader.",19,[[["self"]],["reader"]]],[11,"new","","Create a new empty `StringRecord`.",20,[[],["stringrecord"]]],[11,"with_capacity","","Create a new empty `StringRecord` with the given capacity.",20,[[["usize"],["usize"]],["stringrecord"]]],[11,"from_byte_record","","Create a new `StringRecord` from a `ByteRecord`.",20,[[["byterecord"]],["result",["stringrecord","fromutf8error"]]]],[11,"from_byte_record_lossy","","Lossily create a new `StringRecord` from a `ByteRecord`.",20,[[["byterecord"]],["stringrecord"]]],[11,"deserialize","","Deserialize this record.",20,[[["self"],["option",["stringrecord"]]],["result"]]],[11,"iter","","Returns an iterator over all fields in this record.",20,[[["self"]],["stringrecorditer"]]],[11,"get","","Return the field at index `i`.",20,[[["self"],["usize"]],["option",["str"]]]],[11,"is_empty","","Returns true if and only if this record is empty.",20,[[["self"]],["bool"]]],[11,"len","","Returns the number of fields in this record.",20,[[["self"]],["usize"]]],[11,"truncate","","Truncate this record to `n` fields.",20,[[["self"],["usize"]]]],[11,"clear","","Clear this record so that it has zero fields.",20,[[["self"]]]],[11,"trim","","Trim the fields of this record so that leading and trailing whitespace is removed.",20,[[["self"]]]],[11,"push_field","","Add a new field to this record.",20,[[["self"],["str"]]]],[11,"position","","Return the position of this record, if available.",20,[[["self"]],["option",["position"]]]],[11,"set_position","","Set the position of this record.",20,[[["self"],["option",["position"]]]]],[11,"range","","Return the start and end position of a field in this record.",20,[[["self"],["usize"]],["option",["range"]]]],[11,"as_slice","","Return the entire row as a single string slice. The slice returned stores all fields contiguously. The boundaries of each field can be determined via the `range` method.",20,[[["self"]],["str"]]],[11,"as_byte_record","","Return a reference to this record's raw `ByteRecord`.",20,[[["self"]],["byterecord"]]],[11,"into_byte_record","","Convert this `StringRecord` into a `ByteRecord`.",20,[[["self"]],["byterecord"]]],[0,"tutorial","","A tutorial for handling CSV data in Rust.",N,N],[11,"new","","Create a new builder for configuring CSV writing.",21,[[],["writerbuilder"]]],[11,"from_path","","Build a CSV writer from this configuration that writes data to the given file path. The file is truncated if it already exists.",21,[[["self"],["p"]],["result",["writer"]]]],[11,"from_writer","","Build a CSV writer from this configuration that writes data to `wtr`.",21,[[["self"],["w"]],["writer"]]],[11,"delimiter","","The field delimiter to use when writing CSV.",21,[[["self"],["u8"]],["writerbuilder"]]],[11,"has_headers","","Whether to write a header row before writing any other row.",21,[[["self"],["bool"]],["writerbuilder"]]],[11,"flexible","","Whether the number of fields in records is allowed to change or not.",21,[[["self"],["bool"]],["writerbuilder"]]],[11,"terminator","","The record terminator to use when writing CSV.",21,[[["self"],["terminator"]],["writerbuilder"]]],[11,"quote_style","","The quoting style to use when writing CSV.",21,[[["self"],["quotestyle"]],["writerbuilder"]]],[11,"quote","","The quote character to use when writing CSV.",21,[[["self"],["u8"]],["writerbuilder"]]],[11,"double_quote","","Enable double quote escapes.",21,[[["self"],["bool"]],["writerbuilder"]]],[11,"escape","","The escape character to use when writing CSV.",21,[[["self"],["u8"]],["writerbuilder"]]],[11,"buffer_capacity","","Set the capacity (in bytes) of the internal buffer used in the CSV writer. This defaults to a reasonable setting.",21,[[["self"],["usize"]],["writerbuilder"]]],[11,"from_path","","Build a CSV writer with a default configuration that writes data to the given file path. The file is truncated if it already exists.",22,[[["p"]],["result",["writer"]]]],[11,"from_writer","","Build a CSV writer with a default configuration that writes data to `wtr`.",22,[[["w"]],["writer"]]],[11,"serialize","","Serialize a single record using Serde.",22,[[["self"],["s"]],["result"]]],[11,"write_record","","Write a single record.",22,[[["self"],["i"]],["result"]]],[11,"write_byte_record","","Write a single `ByteRecord`.",22,[[["self"],["byterecord"]],["result"]]],[11,"write_field","","Write a single field.",22,[[["self"],["t"]],["result"]]],[11,"flush","","Flush the contents of the internal buffer to the underlying writer.",22,[[["self"]],["result"]]],[11,"into_inner","","Flush the contents of the internal buffer and return the underlying writer.",22,[[["self"]],["result",["intoinnererror"]]]],[6,"Result","","A type alias for `Result<T, csv::Error>`.",N,N],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,N],[11,"count","","",23,[[["self"]],["usize"]]],[11,"next","","",14,[[["self"]],["option",["result"]]]],[11,"next","","",15,[[["self"]],["option",["result"]]]],[11,"next","","",16,[[["self"]],["option",["result"]]]],[11,"next","","",17,[[["self"]],["option",["result"]]]],[11,"next","","",18,[[["self"]],["option",["result"]]]],[11,"next","","",19,[[["self"]],["option",["result"]]]],[11,"next","","",24,[[["self"]],["option",["str"]]]],[11,"size_hint","","",24,N],[11,"count","","",24,[[["self"]],["usize"]]],[11,"default","","",5,[[],["byterecord"]]],[11,"default","","",12,[[],["readerbuilder"]]],[11,"default","","",20,[[],["stringrecord"]]],[11,"default","","",21,[[],["writerbuilder"]]],[11,"default","","",2,[[],["quotestyle"]]],[11,"default","","",3,[[],["terminator"]]],[11,"default","","",4,[[],["trim"]]],[11,"next_back","","",23,[[["self"]],["option"]]],[11,"next_back","","",24,[[["self"]],["option",["str"]]]],[11,"eq","","",5,[[["self"],["byterecord"]],["bool"]]],[11,"eq","","",5,[[["self"],["vec"]],["bool"]]],[11,"eq","","",5,N],[11,"eq","","",6,[[["self"],["position"]],["bool"]]],[11,"ne","","",6,[[["self"],["position"]],["bool"]]],[11,"eq","","",7,[[["self"],["deserializeerror"]],["bool"]]],[11,"ne","","",7,[[["self"],["deserializeerror"]],["bool"]]],[11,"eq","","",0,[[["self"],["deserializeerrorkind"]],["bool"]]],[11,"ne","","",0,[[["self"],["deserializeerrorkind"]],["bool"]]],[11,"eq","","",9,[[["self"],["fromutf8error"]],["bool"]]],[11,"ne","","",9,[[["self"],["fromutf8error"]],["bool"]]],[11,"eq","","",10,[[["self"],["utf8error"]],["bool"]]],[11,"ne","","",10,[[["self"],["utf8error"]],["bool"]]],[11,"eq","","",20,[[["self"],["stringrecord"]],["bool"]]],[11,"eq","","",20,[[["self"],["vec"]],["bool"]]],[11,"eq","","",20,N],[11,"eq","","",4,[[["self"],["trim"]],["bool"]]],[11,"from","","",5,[[["stringrecord"]],["byterecord"]]],[11,"from","","",5,[[["vec"]],["byterecord"]]],[11,"from","","",5,N],[11,"from","","",8,[[["error"]],["error"]]],[11,"from","","",20,[[["vec"]],["stringrecord"]]],[11,"from","","",20,N],[11,"clone","","",5,[[["self"]],["byterecord"]]],[11,"clone","","",6,[[["self"]],["position"]]],[11,"clone","","",7,[[["self"]],["deserializeerror"]]],[11,"clone","","",0,[[["self"]],["deserializeerrorkind"]]],[11,"clone","","",9,[[["self"]],["fromutf8error"]]],[11,"clone","","",10,[[["self"]],["utf8error"]]],[11,"clone","","",20,[[["self"]],["stringrecord"]]],[11,"clone","","",2,[[["self"]],["quotestyle"]]],[11,"clone","","",3,[[["self"]],["terminator"]]],[11,"clone","","",4,[[["self"]],["trim"]]],[11,"extend","","",5,[[["self"],["i"]]]],[11,"extend","","",20,[[["self"],["i"]]]],[11,"drop","","",22,[[["self"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"index","","",5,N],[11,"index","","",20,[[["self"],["usize"]],["str"]]],[11,"from_iter","","",5,[[["i"]],["byterecord"]]],[11,"from_iter","","",20,[[["i"]],["stringrecord"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]],[11,"cause","","",8,[[["self"]],["option",["stderror"]]]],[11,"description","","",9,[[["self"]],["str"]]],[11,"cause","","",9,[[["self"]],["option",["stderror"]]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"cause","","",11,[[["self"]],["option",["stderror"]]]],[11,"custom","","",8,[[["t"]],["error"]]],[11,"custom","","",7,[[["t"]],["deserializeerror"]]]],"paths":[[4,"DeserializeErrorKind"],[4,"ErrorKind"],[4,"QuoteStyle"],[4,"Terminator"],[4,"Trim"],[3,"ByteRecord"],[3,"Position"],[3,"DeserializeError"],[3,"Error"],[3,"FromUtf8Error"],[3,"Utf8Error"],[3,"IntoInnerError"],[3,"ReaderBuilder"],[3,"Reader"],[3,"DeserializeRecordsIntoIter"],[3,"DeserializeRecordsIter"],[3,"StringRecordsIntoIter"],[3,"StringRecordsIter"],[3,"ByteRecordsIntoIter"],[3,"ByteRecordsIter"],[3,"StringRecord"],[3,"WriterBuilder"],[3,"Writer"],[3,"ByteRecordIter"],[3,"StringRecordIter"]]};
searchIndex["csv_core"]={"doc":"`csv-core` provides a fast CSV reader and writer for use in a `no_std` context.","items":[[3,"Reader","csv_core","A pull based CSV reader.",N,N],[3,"ReaderBuilder","","Builds a CSV reader with various configuration knobs.",N,N],[3,"Writer","","A writer for CSV data.",N,N],[3,"WriterBuilder","","A builder for configuring a CSV writer.",N,N],[4,"ReadFieldResult","","The result of parsing at most one field from CSV data.",N,N],[13,"InputEmpty","","The caller provided input was exhausted before the end of a field or record was found.",0,N],[13,"OutputFull","","The caller provided output buffer was filled before an entire field could be written to it.",0,N],[13,"Field","","The end of a field was found.",0,N],[12,"record_end","csv_core::ReadFieldResult","Whether this was the last field in a record or not.",0,N],[13,"End","csv_core","All CSV data has been read.",0,N],[4,"ReadFieldNoCopyResult","","The result of parsing at most one field from CSV data while ignoring the output.",N,N],[13,"InputEmpty","","The caller provided input was exhausted before the end of a field or record was found.",1,N],[13,"Field","","The end of a field was found.",1,N],[12,"record_end","csv_core::ReadFieldNoCopyResult","Whether this was the last field in a record or not.",1,N],[13,"End","csv_core","All CSV data has been read.",1,N],[4,"ReadRecordResult","","The result of parsing at most one record from CSV data.",N,N],[13,"InputEmpty","","The caller provided input was exhausted before the end of a record was found.",2,N],[13,"OutputFull","","The caller provided output buffer was filled before an entire field could be written to it.",2,N],[13,"OutputEndsFull","","The caller provided output buffer of field end poisitions was filled before the next field could be parsed.",2,N],[13,"Record","","The end of a record was found.",2,N],[13,"End","","All CSV data has been read.",2,N],[4,"ReadRecordNoCopyResult","","The result of parsing at most one record from CSV data while ignoring output.",N,N],[13,"InputEmpty","","The caller provided input was exhausted before the end of a record was found.",3,N],[13,"Record","","The end of a record was found.",3,N],[13,"End","","All CSV data has been read.",3,N],[4,"WriteResult","","The result of writing CSV data.",N,N],[13,"InputEmpty","","This result occurs when all of the bytes from the given input have been processed.",4,N],[13,"OutputFull","","This result occurs when the output buffer was too small to process all of the input bytes. Generally, this means the caller must call the corresponding method again with the rest of the input and more room in the output buffer.",4,N],[4,"Terminator","","A record terminator.",N,N],[13,"CRLF","","Parses `\\r`, `\\n` or `\\r\\n` as a single record terminator.",5,N],[13,"Any","","Parses the byte given as a record terminator.",5,N],[4,"QuoteStyle","","The quoting style to use when writing CSV data.",N,N],[13,"Always","","This puts quotes around every field. Always.",6,N],[13,"Necessary","","This puts quotes around fields only when necessary.",6,N],[13,"NonNumeric","","This puts quotes around all fields that are non-numeric. Namely, when writing a field that does not parse as a valid float or integer, then quotes will be used even if they aren't strictly necessary.",6,N],[13,"Never","","This never writes quotes, even if it would produce invalid CSV data.",6,N],[5,"is_non_numeric","","Returns true if and only if the given input is non-numeric.",N,N],[5,"quote","","Escape quotes `input` and writes the result to `output`.",N,N],[11,"new","","Create a new builder.",7,[[],["readerbuilder"]]],[11,"build","","Build a CSV parser from this configuration.",7,[[["self"]],["reader"]]],[11,"delimiter","","The field delimiter to use when parsing CSV.",7,[[["self"],["u8"]],["readerbuilder"]]],[11,"terminator","","The record terminator to use when parsing CSV.",7,[[["self"],["terminator"]],["readerbuilder"]]],[11,"quote","","The quote character to use when parsing CSV.",7,[[["self"],["u8"]],["readerbuilder"]]],[11,"escape","","The escape character to use when parsing CSV.",7,[[["self"],["option",["u8"]]],["readerbuilder"]]],[11,"double_quote","","Enable double quote escapes.",7,[[["self"],["bool"]],["readerbuilder"]]],[11,"quoting","","Enable or disable quoting.",7,[[["self"],["bool"]],["readerbuilder"]]],[11,"comment","","The comment character to use when parsing CSV.",7,[[["self"],["option",["u8"]]],["readerbuilder"]]],[11,"ascii","","A convenience method for specifying a configuration to read ASCII delimited text.",7,[[["self"]],["readerbuilder"]]],[11,"new","","Create a new CSV reader with a default parser configuration.",8,[[],["reader"]]],[11,"reset","","Reset the parser such that it behaves as if it had never been used.",8,[[["self"]]]],[11,"line","","Return the current line number as measured by the number of occurrences of `\\n`.",8,[[["self"]],["u64"]]],[11,"set_line","","Set the line number.",8,[[["self"],["u64"]]]],[11,"read_field","","Parse a single CSV field in `input` and copy field data to `output`.",8,N],[11,"read_record","","Parse a single CSV record in `input` and copy each field contiguously to `output`, with the end position of each field written to `ends`.",8,N],[11,"new","","Create a new builder for configuring a CSV writer.",9,[[],["writerbuilder"]]],[11,"build","","Builder a CSV writer from this configuration.",9,[[["self"]],["writer"]]],[11,"delimiter","","The field delimiter to use when writing CSV.",9,[[["self"],["u8"]],["writerbuilder"]]],[11,"terminator","","The record terminator to use when writing CSV.",9,[[["self"],["terminator"]],["writerbuilder"]]],[11,"quote_style","","The quoting style to use when writing CSV.",9,[[["self"],["quotestyle"]],["writerbuilder"]]],[11,"quote","","The quote character to use when writing CSV.",9,[[["self"],["u8"]],["writerbuilder"]]],[11,"escape","","The escape character to use when writing CSV.",9,[[["self"],["u8"]],["writerbuilder"]]],[11,"double_quote","","The quoting escape mechanism to use when writing CSV.",9,[[["self"],["bool"]],["writerbuilder"]]],[11,"new","","Creates a new CSV writer with the default configuration.",10,[[],["writer"]]],[11,"finish","","Finish writing CSV data to `output`.",10,N],[11,"field","","Write a single CSV field from `input` to `output` while employing this writer's quoting style.",10,N],[11,"delimiter","","Write the configured field delimiter to `output`.",10,N],[11,"terminator","","Write the configured record terminator to `output`.",10,N],[11,"is_special_byte","","Returns true if and only if the given byte corresponds to a special byte in this CSV writer's configuration.",10,[[["self"],["u8"]],["bool"]]],[11,"should_quote","","Returns true if and only if we should put the given field data in quotes. This takes the quoting style into account.",10,N],[11,"get_delimiter","","Return the delimiter used for this writer.",10,[[["self"]],["u8"]]],[11,"get_terminator","","Return the terminator used for this writer.",10,[[["self"]],["terminator"]]],[11,"get_quote_style","","Return the quoting style used for this writer.",10,[[["self"]],["quotestyle"]]],[11,"get_quote","","Return the quote character used for this writer.",10,[[["self"]],["u8"]]],[11,"get_escape","","Return the escape character used for this writer.",10,[[["self"]],["u8"]]],[11,"get_double_quote","","Return whether this writer doubles quotes or not. When the writer does not double quotes, it will escape them using the escape character.",10,[[["self"]],["bool"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["readfieldresult"]],["bool"]]],[11,"ne","","",0,[[["self"],["readfieldresult"]],["bool"]]],[11,"eq","","",1,[[["self"],["readfieldnocopyresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["readfieldnocopyresult"]],["bool"]]],[11,"eq","","",2,[[["self"],["readrecordresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["readrecordnocopyresult"]],["bool"]]],[11,"eq","","",4,[[["self"],["writeresult"]],["bool"]]],[11,"clone","","",8,[[["self"]],["reader"]]],[11,"clone","","",0,[[["self"]],["readfieldresult"]]],[11,"clone","","",1,[[["self"]],["readfieldnocopyresult"]]],[11,"clone","","",2,[[["self"]],["readrecordresult"]]],[11,"clone","","",3,[[["self"]],["readrecordnocopyresult"]]],[11,"clone","","",4,[[["self"]],["writeresult"]]],[11,"clone","","",10,[[["self"]],["writer"]]],[11,"clone","","",5,[[["self"]],["terminator"]]],[11,"clone","","",6,[[["self"]],["quotestyle"]]],[11,"default","","",8,[[],["reader"]]],[11,"default","","",7,[[],["readerbuilder"]]],[11,"default","","",9,[[],["writerbuilder"]]],[11,"default","","",10,[[],["writer"]]],[11,"default","","",5,[[],["terminator"]]],[11,"default","","",6,[[],["quotestyle"]]]],"paths":[[4,"ReadFieldResult"],[4,"ReadFieldNoCopyResult"],[4,"ReadRecordResult"],[4,"ReadRecordNoCopyResult"],[4,"WriteResult"],[4,"Terminator"],[4,"QuoteStyle"],[3,"ReaderBuilder"],[3,"Reader"],[3,"WriterBuilder"],[3,"Writer"]]};
searchIndex["dtoa"]={"doc":"","items":[[5,"write","dtoa","",N,[[["w"],["v"]],["result",["usize"]]]],[8,"Floating","","",N,N],[10,"write","","",0,[[["self"],["w"]],["result",["usize"]]]],[14,"diyfp","","",N,N],[14,"dtoa","","",N,N]],"paths":[[8,"Floating"]]};
searchIndex["flate2"]={"doc":"A DEFLATE-based stream compression/decompression library","items":[[3,"GzBuilder","flate2","A builder structure to create a new gzip Encoder.",N,N],[3,"GzHeader","","A structure representing the header of a gzip stream.",N,N],[3,"Compress","","Raw in-memory compression stream for blocks of data.",N,N],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",N,N],[3,"DataError","","Error returned when a decompression object finds that the input stream of bytes was not a valid input stream of bytes.",N,N],[3,"Crc","","The CRC calculated by a CrcReader.",N,N],[3,"CrcReader","","A wrapper around a `std::io::Read` that calculates the CRC.",N,N],[4,"Status","","Possible status results of compressing some data or successfully decompressing a block of data.",N,N],[13,"Ok","","Indicates success.",0,N],[13,"BufError","","Indicates that forward progress is not possible due to input or output buffers being empty.",0,N],[13,"StreamEnd","","Indicates that all input has been consumed and all output bytes have been written. Decompression/compression should not be called again.",0,N],[4,"Flush","","Values which indicate the form of flushing to be used when compressing or decompressing in-memory data.",N,N],[13,"None","","A typical parameter for passing to compression/decompression functions, this indicates that the underlying stream to decide how much data to accumulate before producing output in order to maximize compression.",1,N],[13,"Sync","","All pending output is flushed to the output buffer and the output is aligned on a byte boundary so that the decompressor can get all input data available so far.",1,N],[13,"Partial","","All pending output is flushed to the output buffer, but the output is not aligned to a byte boundary.",1,N],[13,"Block","","A deflate block is completed and emitted, as for `Flush::Sync`, but the output is not aligned on a byte boundary and up to seven vits of the current block are held to be written as the next byte after the next deflate block is completed.",1,N],[13,"Full","","All output is flushed as with `Flush::Sync` and the compression state is reset so decompression can restart from this point if previous compressed data has been damaged or if random access is desired.",1,N],[13,"Finish","","Pending input is processed and pending output is flushed.",1,N],[4,"Compression","","When compressing data, the compression level can be specified by a value in this enum.",N,N],[13,"None","","No compression is to be performed, this may actually inflate data slightly when encoding.",2,N],[13,"Fast","","Optimize for the best speed of encoding.",2,N],[13,"Best","","Optimize for the size of data being encoded.",2,N],[13,"Default","","Choose the default compression, a balance between speed and size.",2,N],[11,"new","","Create a new CRC.",3,[[],["crc"]]],[11,"sum","","bla",3,[[["self"]],["u32"]]],[11,"amount","","The number of bytes that have been used to calculate the CRC. This value is only accurate if the amount is lower than 2^32.",3,[[["self"]],["u32"]]],[11,"update","","Update the CRC with the bytes in `data`.",3,N],[11,"reset","","Reset the CRC.",3,[[["self"]]]],[11,"combine","","Combine the CRC with the CRC for the subsequent block of bytes.",3,[[["self"],["crc"]]]],[11,"new","","Create a new CrcReader.",4,[[["r"]],["crcreader"]]],[11,"crc","","Get the Crc for this CrcReader.",4,[[["self"]],["crc"]]],[11,"into_inner","","Get the reader that is wrapped by this CrcReader.",4,[[["self"]],["r"]]],[11,"get_ref","","Get the reader that is wrapped by this CrcReader by reference.",4,[[["self"]],["r"]]],[11,"get_mut","","Get a mutable reference to the reader that is wrapped by this CrcReader.",4,[[["self"]],["r"]]],[11,"reset","","Reset the Crc in this CrcReader.",4,[[["self"]]]],[11,"new","","Create a new blank builder with no header by default.",5,[[],["builder"]]],[11,"mtime","","Configure the `mtime` field in the gzip header.",5,[[["self"],["u32"]],["builder"]]],[11,"extra","","Configure the `extra` field in the gzip header.",5,[[["self"],["vec",["u8"]]],["builder"]]],[11,"filename","","Configure the `filename` field in the gzip header.",5,N],[11,"comment","","Configure the `comment` field in the gzip header.",5,N],[11,"write","","Consume this builder, creating a writer encoder in the process.",5,[[["self"],["w"],["compression"]],["encoderwriter"]]],[11,"read","","Consume this builder, creating a reader encoder in the process.",5,[[["self"],["r"],["compression"]],["encoderreader"]]],[11,"buf_read","","Consume this builder, creating a reader encoder in the process.",5,[[["self"],["r"],["compression"]],["encoderreaderbuf"]]],[11,"filename","","Returns the `filename` field of this gzip stream's header, if present.",6,[[["self"]],["option"]]],[11,"extra","","Returns the `extra` field of this gzip stream's header, if present.",6,[[["self"]],["option"]]],[11,"comment","","Returns the `comment` field of this gzip stream's header, if present.",6,[[["self"]],["option"]]],[11,"mtime","","Returns the `mtime` field of this gzip stream's header, if present.",6,[[["self"]],["u32"]]],[11,"new","","Creates a new object ready for compressing data that it's given.",7,[[["compression"],["bool"]],["compress"]]],[11,"total_in","","Returns the total number of input bytes which have been processed by this compression object.",7,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of output bytes which have been produced by this compression object.",7,[[["self"]],["u64"]]],[11,"reset","","Quickly resets this compressor without having to reallocate anything.",7,[[["self"]]]],[11,"compress","","Compresses the input data into the output, consuming only as much input as needed and writing as much output as possible.",7,N],[11,"compress_vec","","Compresses the input data into the extra space of the output, consuming only as much input as needed and writing as much output as possible.",7,N],[11,"new","","Creates a new object ready for decompressing data that it's given.",8,[[["bool"]],["decompress"]]],[11,"total_in","","Returns the total number of input bytes which have been processed by this decompression object.",8,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of output bytes which have been produced by this decompression object.",8,[[["self"]],["u64"]]],[11,"decompress","","Decompresses the input data into the output, consuming only as much input as needed and writing as much output as possible.",8,N],[11,"decompress_vec","","Decompresses the input data into the extra space in the output vector specified by `output`.",8,N],[11,"reset","","Performs the equivalent of replacing this decompression state with a freshly allocated copy.",8,[[["self"],["bool"]]]],[0,"read","","Types which operate over `Read` streams, both encoders and decoders for various formats.",N,N],[3,"DeflateEncoder","flate2::read","A DEFLATE encoder, or compressor.",N,N],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",N,N],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",N,N],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",N,N],[3,"GzEncoder","","A gzip streaming encoder",N,N],[3,"GzDecoder","","A gzip streaming decoder",N,N],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a multistream",N,N],[0,"write","flate2","Types which operate over `Write` streams, both encoders and decoders for various formats.",N,N],[3,"DeflateEncoder","flate2::write","A DEFLATE encoder, or compressor.",N,N],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",N,N],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",N,N],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",N,N],[3,"GzEncoder","","A gzip streaming encoder",N,N],[0,"bufread","flate2","Types which operate over `BufRead` streams, both encoders and decoders for various formats.",N,N],[3,"DeflateEncoder","flate2::bufread","A DEFLATE encoder, or compressor.",N,N],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",N,N],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",N,N],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",N,N],[3,"GzEncoder","","A gzip streaming encoder",N,N],[3,"GzDecoder","","A gzip streaming decoder",N,N],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a multistream",N,N],[8,"FlateReadExt","flate2","A helper trait to create encoder/decoders with method syntax.",N,N],[11,"gz_encode","","Consume this reader to create a compression stream at the specified compression level.",9,[[["self"],["compression"]],["gzencoder"]]],[11,"gz_decode","","Consume this reader to create a decompression stream of this stream.",9,[[["self"]],["result",["gzdecoder"]]]],[11,"zlib_encode","","Consume this reader to create a compression stream at the specified compression level.",9,[[["self"],["compression"]],["zlibencoder"]]],[11,"zlib_decode","","Consume this reader to create a decompression stream of this stream.",9,[[["self"]],["zlibdecoder"]]],[11,"deflate_encode","","Consume this reader to create a compression stream at the specified compression level.",9,[[["self"],["compression"]],["deflateencoder"]]],[11,"deflate_decode","","Consume this reader to create a decompression stream of this stream.",9,[[["self"]],["deflatedecoder"]]],[8,"FlateWriteExt","","A helper trait to create encoder/decoders with method syntax.",N,N],[11,"gz_encode","","Consume this writer to create a compression stream at the specified compression level.",10,[[["self"],["compression"]],["gzencoder"]]],[11,"zlib_encode","","Consume this writer to create a compression stream at the specified compression level.",10,[[["self"],["compression"]],["zlibencoder"]]],[11,"zlib_decode","","Consume this writer to create a decompression stream of this stream.",10,[[["self"]],["zlibdecoder"]]],[11,"deflate_encode","","Consume this writer to create a compression stream at the specified compression level.",10,[[["self"],["compression"]],["deflateencoder"]]],[11,"deflate_decode","","Consume this writer to create a decompression stream of this stream.",10,[[["self"]],["deflatedecoder"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","flate2::write","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","flate2::read","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","flate2::bufread","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","flate2::read","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","flate2::bufread","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","flate2::write","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","flate2::read","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","flate2::bufread","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","flate2::read","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","flate2::bufread","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","flate2::write","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"into","flate2::read","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"into","flate2::bufread","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"into","flate2::read","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"into","flate2::bufread","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"into","flate2::write","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"clone","flate2","",2,[[["self"]],["compression"]]],[11,"drop","flate2::write","",18,[[["self"]]]],[11,"fmt","flate2","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"write","flate2::write","",12,N],[11,"flush","","",12,[[["self"]],["result"]]],[11,"write","flate2::read","",13,N],[11,"flush","","",13,[[["self"]],["result"]]],[11,"write","flate2::bufread","",14,N],[11,"flush","","",14,[[["self"]],["result"]]],[11,"write","flate2::read","",15,N],[11,"flush","","",15,[[["self"]],["result"]]],[11,"write","flate2::bufread","",16,N],[11,"flush","","",16,[[["self"]],["result"]]],[11,"write","flate2::write","",17,N],[11,"flush","","",17,[[["self"]],["result"]]],[11,"write","","",18,N],[11,"flush","","",18,[[["self"]],["result"]]],[11,"write","flate2::read","",19,N],[11,"flush","","",19,[[["self"]],["result"]]],[11,"write","flate2::bufread","",20,N],[11,"flush","","",20,[[["self"]],["result"]]],[11,"write","flate2::read","",21,N],[11,"flush","","",21,[[["self"]],["result"]]],[11,"write","","",22,N],[11,"flush","","",22,[[["self"]],["result"]]],[11,"write","flate2::bufread","",23,N],[11,"flush","","",23,[[["self"]],["result"]]],[11,"write","","",24,N],[11,"flush","","",24,[[["self"]],["result"]]],[11,"write","flate2::write","",25,N],[11,"flush","","",25,[[["self"]],["result"]]],[11,"write","flate2::read","",26,N],[11,"flush","","",26,[[["self"]],["result"]]],[11,"write","flate2::bufread","",27,N],[11,"flush","","",27,[[["self"]],["result"]]],[11,"write","flate2::read","",28,N],[11,"flush","","",28,[[["self"]],["result"]]],[11,"write","flate2::bufread","",29,N],[11,"flush","","",29,[[["self"]],["result"]]],[11,"write","flate2::write","",30,N],[11,"flush","","",30,[[["self"]],["result"]]],[11,"read","flate2","",4,N],[11,"read","flate2::write","",12,N],[11,"read","flate2::read","",13,N],[11,"read","flate2::bufread","",14,N],[11,"read","flate2::read","",15,N],[11,"read","flate2::bufread","",16,N],[11,"read","flate2::write","",17,N],[11,"read","","",18,N],[11,"read","flate2::read","",19,N],[11,"read","flate2::bufread","",20,N],[11,"read","flate2::read","",21,N],[11,"read","","",22,N],[11,"read","flate2::bufread","",23,N],[11,"read","","",24,N],[11,"read","flate2::write","",25,N],[11,"read","flate2::read","",26,N],[11,"read","flate2::bufread","",27,N],[11,"read","flate2::read","",28,N],[11,"read","flate2::bufread","",29,N],[11,"read","flate2::write","",30,N],[11,"fill_buf","flate2","",4,[[["self"]],["result"]]],[11,"consume","","",4,[[["self"],["usize"]]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to the stream given at the given compression level.",12,[[["w"],["compression"]],["encoderwriter"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",12,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",12,[[["self"]],["w"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the output stream for another.",12,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",12,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",12,[[["self"]],["result"]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",12,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that have been written to this compresor.",12,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",12,[[["self"]],["u64"]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",13,[[["r"],["compression"]],["encoderreader"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",13,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",13,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",13,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",13,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",13,[[["self"]],["u64"]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",14,[[["r"],["compression"]],["encoderreaderbuf"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",14,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",14,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",14,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",14,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",14,[[["self"]],["u64"]]],[11,"new","flate2::read","Creates a new decoder which will decompress data read from the given stream.",15,[[["r"]],["decoderreader"]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",15,[[["r"],["vec",["u8"]]],["decoderreader"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",15,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",15,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",15,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",15,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",15,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",15,[[["self"]],["u64"]]],[11,"new","flate2::bufread","Creates a new decoder which will decompress data read from the given stream.",16,[[["r"]],["decoderreaderbuf"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",16,[[["self"],["r"]],["r"]]],[11,"reset_data","","Resets the state of this decoder's data",16,[[["self"]]]],[11,"get_ref","","Acquires a reference to the underlying stream",16,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",16,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",16,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",16,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",16,[[["self"]],["u64"]]],[11,"new","flate2::write","Creates a new decoder which will write uncompressed data to the stream.",17,[[["w"]],["decoderwriter"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",17,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",17,[[["self"]],["w"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the output stream for another.",17,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",17,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",17,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for decompression.",17,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has written to its output stream.",17,[[["self"]],["u64"]]],[11,"new","","Creates a new encoder which will use the given compression level.",18,[[["w"],["compression"]],["encoderwriter"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",18,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",18,[[["self"]],["w"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",18,[[["self"]],["result"]]],[11,"finish","","Finish encoding this stream, returning the underlying writer once the encoding is done.",18,[[["self"]],["result"]]],[11,"new","flate2::read","Creates a new encoder which will use the given compression level.",19,[[["r"],["compression"]],["encoderreader"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",19,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",19,[[["self"]],["r"]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",19,[[["self"]],["r"]]],[11,"new","flate2::bufread","Creates a new encoder which will use the given compression level.",20,[[["r"],["compression"]],["encoderreaderbuf"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",20,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",20,[[["self"]],["r"]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",20,[[["self"]],["r"]]],[11,"new","flate2::read","Creates a new decoder from the given reader, immediately parsing the gzip header.",21,[[["r"]],["result",["decoderreader"]]]],[11,"header","","Returns the header associated with this stream.",21,[[["self"]],["header"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",21,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",21,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",21,[[["self"]],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately parsing the (first) gzip header. If the gzip stream contains multiple members all will be decoded.",22,[[["r"]],["result",["multidecoderreader"]]]],[11,"header","","Returns the current header associated with this stream.",22,[[["self"]],["header"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",22,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",22,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",22,[[["self"]],["r"]]],[11,"new","flate2::bufread","Creates a new decoder from the given reader, immediately parsing the gzip header.",23,[[["r"]],["result",["decoderreaderbuf"]]]],[11,"header","","Returns the header associated with this stream.",23,[[["self"]],["header"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",23,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",23,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",23,[[["self"]],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately parsing the (first) gzip header. If the gzip stream contains multiple members all will be decoded.",24,[[["r"]],["result",["multidecoderreaderbuf"]]]],[11,"header","","Returns the current header associated with this stream.",24,[[["self"]],["header"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",24,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",24,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",24,[[["self"]],["r"]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to the stream given at the given compression level.",25,[[["w"],["compression"]],["encoderwriter"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",25,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",25,[[["self"]],["w"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the output stream for another.",25,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",25,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",25,[[["self"]],["result"]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",25,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that have been written to this compresor.",25,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",25,[[["self"]],["u64"]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",26,[[["r"],["compression"]],["encoderreader"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",26,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",26,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",26,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",26,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",26,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",26,[[["self"]],["u64"]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",27,[[["r"],["compression"]],["encoderreaderbuf"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out the input stream for another.",27,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",27,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",27,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",27,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this compressor.",27,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has produced.",27,[[["self"]],["u64"]]],[11,"new","flate2::read","Creates a new decoder which will decompress data read from the given stream.",28,[[["r"]],["decoderreader"]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",28,[[["r"],["vec",["u8"]]],["decoderreader"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",28,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",28,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",28,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",28,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",28,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",28,[[["self"]],["u64"]]],[11,"new","flate2::bufread","Creates a new decoder which will decompress data read from the given stream.",29,[[["r"]],["decoderreaderbuf"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the input stream for another.",29,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",29,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",29,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",29,[[["self"]],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",29,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",29,[[["self"]],["u64"]]],[11,"new","flate2::write","Creates a new decoder which will write uncompressed data to the stream.",30,[[["w"]],["decoderwriter"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",30,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",30,[[["self"]],["w"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out the output stream for another.",30,[[["self"],["w"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",30,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",30,[[["self"]],["result"]]],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for decompression.",30,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has written to its output stream.",30,[[["self"]],["u64"]]]],"paths":[[4,"Status"],[4,"Flush"],[4,"Compression"],[3,"Crc"],[3,"CrcReader"],[3,"GzBuilder"],[3,"GzHeader"],[3,"Compress"],[3,"Decompress"],[8,"FlateReadExt"],[8,"FlateWriteExt"],[3,"DataError"],[3,"DeflateEncoder"],[3,"DeflateEncoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateDecoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzEncoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"ZlibEncoder"],[3,"ZlibEncoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibDecoder"],[3,"ZlibDecoder"]]};
searchIndex["foreign_types"]={"doc":"A framework for Rust wrappers over C APIs.","items":[[3,"Opaque","foreign_types","An opaque type used to define `ForeignTypeRef` types.",N,N],[8,"ForeignType","","A type implemented by wrappers over foreign types.",N,N],[16,"CType","","The raw C type.",0,N],[16,"Ref","","The type representing a reference to this type.",0,N],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,N],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,N],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed foreign types.",N,N],[16,"CType","","The raw C type.",1,N],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,N],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",1,N],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,N],[14,"foreign_type","","A macro to easily define wrappers for foreign types.",N,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]};
searchIndex["httparse"]={"doc":"httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",N,N],[3,"Request","","A parsed Request.",N,N],[12,"method","","The request method, such as `GET`.",0,N],[12,"path","","The request path, such as `/about-us`.",0,N],[12,"version","","The request version, such as `HTTP/1.1`.",0,N],[12,"headers","","The request headers.",0,N],[3,"Response","","A parsed Response.",N,N],[12,"version","","The response version, such as `HTTP/1.1`.",1,N],[12,"code","","The response code, such as `200`.",1,N],[12,"reason","","The response reason-phrase, such as `OK`.",1,N],[12,"headers","","The response headers.",1,N],[3,"Header","","Represents a parsed header.",N,N],[12,"name","","The name portion of a header.",2,N],[12,"value","","The value portion of a header.",2,N],[4,"Error","","An error in parsing.",N,N],[13,"HeaderName","","Invalid byte in header name.",3,N],[13,"HeaderValue","","Invalid byte in header value.",3,N],[13,"NewLine","","Invalid byte in new line.",3,N],[13,"Status","","Invalid byte in Response status.",3,N],[13,"Token","","Invalid byte where token is required.",3,N],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,N],[13,"Version","","Invalid byte in HTTP version.",3,N],[4,"Status","","The result of a successful parse pass.",N,N],[13,"Complete","","The completed result.",4,N],[13,"Partial","","A partial result.",4,N],[5,"parse_headers","","Parse a buffer of bytes as headers.",N,N],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",N,N],[6,"Result","","A Result of any parsing action.",N,N],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array to pass in for parsing.",N,N],[11,"is_complete","","Convenience method to check if status is complete.",4,[[["self"]],["bool"]]],[11,"is_partial","","Convenience method to check if status is partial.",4,[[["self"]],["bool"]]],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if the status is `Partial`.",4,[[["self"]],["t"]]],[11,"new","","Creates a new Request, using a slice of headers you allocate.",0,N],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,N],[11,"new","","Creates a new `Response` using a slice of `Header`s you have allocated.",1,N],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,N],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"eq","","",3,[[["self"],["error"]],["bool"]]],[11,"eq","","",5,[[["self"],["invalidchunksize"]],["bool"]]],[11,"eq","","",4,[[["self"],["status"]],["bool"]]],[11,"ne","","",4,[[["self"],["status"]],["bool"]]],[11,"eq","","",2,[[["self"],["header"]],["bool"]]],[11,"ne","","",2,[[["self"],["header"]],["bool"]]],[11,"clone","","",3,[[["self"]],["error"]]],[11,"clone","","",4,[[["self"]],["status"]]],[11,"clone","","",2,[[["self"]],["header"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["hyper"]={"doc":"Hyper","items":[[3,"Url","hyper","A parsed URL record.",N,N],[3,"LanguageTag","","A language tag as described in BCP47.",N,N],[12,"language","","Language subtags are used to indicate the language, ignoring all other aspects such as script, region or spefic invariants.",0,N],[12,"extlangs","","Extended language subtags are used to identify certain specially selected languages that, for various historical and compatibility reasons, are closely identified with or tagged using an existing primary language subtag.",0,N],[12,"script","","Script subtags are used to indicate the script or writing system variations that distinguish the written forms of a language or its dialects.",0,N],[12,"region","","Region subtags are used to indicate linguistic variations associated with or appropriate to a specific country, territory, or region. Typically, a region subtag is used to indicate variations such as regional dialects or usage, or region-specific spelling conventions. It can also be used to indicate that content is expressed in a way that is appropriate for use throughout a region, for instance, Spanish content tailored to be useful throughout Latin America.",0,N],[12,"variants","","Variant subtags are used to indicate additional, well-recognized variations that define a language or its dialects that are not covered by other available subtags.",0,N],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in various applications.  They are intended to identify information that is commonly used in association with languages or language tags but that is not part of language identification.",0,N],[12,"privateuse","","Private use subtags are used to indicate distinctions in language that are important in a given context by private agreement.",0,N],[0,"client","","HTTP Client",N,N],[3,"Client","hyper::client","A Client to use additional features with Requests.",N,N],[3,"RequestBuilder","","Options for an individual Request.",N,N],[3,"ProxyConfig","","Proxy server configuration with a custom connector and TLS wrapper.",N,N],[4,"Body","","An enum of possible body types for a Request.",N,N],[13,"ChunkedBody","","A Reader does not necessarily know it's size, so it is chunked.",1,N],[13,"SizedBody","","For Readers that can know their size, like a `File`.",1,N],[13,"BufBody","","A String has a size, and uses Content-Length.",1,N],[4,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client.",N,N],[13,"FollowNone","","Don't follow any redirects.",2,N],[13,"FollowAll","","Follow all redirects.",2,N],[13,"FollowIf","","Follow a redirect if the contained function returns true.",2,N],[0,"pool","","Client Connection Pooling",N,N],[3,"Pool","hyper::client::pool","The `NetworkConnector` that behaves as a connection pool used by hyper's `Client`.",N,N],[3,"Config","","Config options for the `Pool`.",N,N],[12,"max_idle","","The maximum idle connections per host.",3,N],[3,"PooledStream","","A Stream that will try to be returned to the Pool when dropped.",N,N],[11,"new","","Creates a `Pool` with a `DefaultConnector`.",4,[[["config"]],["pool",["defaultconnector"]]]],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",4,[[["config"],["c"]],["pool"]]],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",4,[[["self"]]]],[11,"into_inner","","Take the wrapped stream out of the pool completely.",5,[[["self"]],["s"]]],[11,"get_ref","","Gets a borrowed reference to the underlying stream.",5,[[["self"]],["s"]]],[0,"request","hyper::client","Client Requests",N,N],[3,"Request","hyper::client::request","A client request to a remote server. The W type tracks the state of the request, Fresh vs Streaming.",N,N],[12,"url","","The target URI for this request.",6,N],[12,"version","","The HTTP version of this request.",6,N],[11,"headers","","Read the Request headers.",6,[[["self"]],["headers"]]],[11,"method","","Read the Request method.",6,[[["self"]],["method"]]],[11,"set_write_timeout","","Set the write timeout.",6,[[["self"],["option",["duration"]]],["result"]]],[11,"set_read_timeout","","Set the read timeout.",6,[[["self"],["option",["duration"]]],["result"]]],[11,"with_message","","Create a new `Request<Fresh>` that will use the given `HttpMessage` for its communication with the server. This implies that the given `HttpMessage` instance has already been properly initialized by the caller (e.g. a TCP connection's already established).",6,[[["method"],["url"],["box",["httpmessage"]]],["result",["request"]]]],[11,"new","","Create a new client request.",6,[[["method"],["url"]],["result",["request"]]]],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",6,[[["method"],["url"],["c"]],["result",["request"]]]],[11,"start","","Consume a Fresh Request, writing the headers and method, returning a Streaming Request.",6,[[["self"]],["result",["request"]]]],[11,"headers_mut","","Get a mutable reference to the Request headers.",6,[[["self"]],["headers"]]],[11,"send","","Completes writing the request, and returns a response to read from.",6,[[["self"]],["result",["response"]]]],[0,"response","hyper::client","Client Responses",N,N],[3,"Response","hyper::client::response","A response for a client request to a remote server.",N,N],[12,"status","","The status from the server.",7,N],[12,"headers","","The headers from the server.",7,N],[12,"version","","The HTTP version of this response from the server.",7,N],[12,"url","","The final URL of this response.",7,N],[11,"new","","Creates a new response from a server.",7,[[["url"],["box",["networkstream"]]],["result",["response"]]]],[11,"with_message","","Creates a new response received from the server on the given `HttpMessage`.",7,[[["url"],["box",["httpmessage"]]],["result",["response"]]]],[11,"status_raw","","Get the raw status code and reason.",7,[[["self"]],["rawstatus"]]],[11,"get_ref","","Gets a borrowed reference to the underlying `HttpMessage`.",7,[[["self"]],["httpmessage"]]],[8,"IntoUrl","hyper::client","A helper trait to convert common objects into a Url.",N,N],[10,"into_url","","Consumes the object, trying to return a Url.",8,[[["self"]],["result",["url","urlerror"]]]],[11,"new","","Create a new Client.",9,[[],["client"]]],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",9,[[["config"]],["client"]]],[11,"with_http_proxy","","Create a Client with an HTTP proxy to a (host, port).",9,[[["h"],["u16"]],["client"]]],[11,"with_proxy_config","","Create a Client using a proxy with a custom connector and SSL client.",9,[[["proxyconfig"]],["client"]]],[11,"with_connector","","Create a new client with a specific connector.",9,[[["c"]],["client"]]],[11,"with_protocol","","Create a new client with a specific `Protocol`.",9,[[["p"]],["client"]]],[11,"set_redirect_policy","","Set the RedirectPolicy.",9,[[["self"],["redirectpolicy"]]]],[11,"set_read_timeout","","Set the read timeout value for all requests.",9,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","Set the write timeout value for all requests.",9,[[["self"],["option",["duration"]]]]],[11,"get","","Build a Get request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"head","","Build a Head request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"patch","","Build a Patch request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"post","","Build a Post request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"put","","Build a Put request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"delete","","Build a Delete request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"request","","Build a new request using this Client.",9,[[["self"],["method"],["u"]],["requestbuilder"]]],[11,"body","","Set a request body to be sent.",10,[[["self"],["b"]],["requestbuilder"]]],[11,"headers","","Add additional headers to the request.",10,[[["self"],["headers"]],["requestbuilder"]]],[11,"header","","Add an individual new header to the request.",10,[[["self"],["h"]],["requestbuilder"]]],[11,"send","","Execute this request and receive a Response back.",10,[[["self"]],["result",["response"]]]],[11,"new","","Create a new `ProxyConfig`.",11,[[["str"],["h"],["u16"],["c"],["s"]],["proxyconfig"]]],[11,"set_pool_config","","Change the `pool::Config` for the proxy.",11,[[["self"],["option",["config"]]]]],[0,"error","hyper","Error and Result module.",N,N],[4,"ParseError","hyper::error","Errors that can occur during parsing.",N,N],[13,"EmptyHost","","",12,N],[13,"IdnaError","","",12,N],[13,"InvalidPort","","",12,N],[13,"InvalidIpv4Address","","",12,N],[13,"InvalidIpv6Address","","",12,N],[13,"InvalidDomainCharacter","","",12,N],[13,"RelativeUrlWithoutBase","","",12,N],[13,"RelativeUrlWithCannotBeABaseBase","","",12,N],[13,"SetHostOnCannotBeABaseUrl","","",12,N],[13,"Overflow","","",12,N],[4,"Error","","A set of errors that can occur parsing HTTP streams.",N,N],[13,"Method","","An invalid `Method`, such as `GE,T`.",13,N],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",13,N],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",13,N],[13,"Header","","An invalid `Header`.",13,N],[13,"TooLarge","","A message head is too large to be reasonable.",13,N],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",13,N],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",13,N],[13,"Ssl","","An error from a SSL library.",13,N],[13,"Utf8","","Parsing a field as string failed",13,N],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",N,N],[0,"method","hyper","The HTTP request method",N,N],[4,"Method","hyper::method","The Request Method (VERB)",N,N],[13,"Options","","OPTIONS",14,N],[13,"Get","","GET",14,N],[13,"Post","","POST",14,N],[13,"Put","","PUT",14,N],[13,"Delete","","DELETE",14,N],[13,"Head","","HEAD",14,N],[13,"Trace","","TRACE",14,N],[13,"Connect","","CONNECT",14,N],[13,"Patch","","PATCH",14,N],[13,"Extension","","Method extensions. An example would be `let m = Extension(\"FOO\".to_string())`.",14,N],[11,"safe","","Whether a method is considered \"safe\", meaning the request is essentially read-only.",14,[[["self"]],["bool"]]],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has the same result is executed multiple times.",14,[[["self"]],["bool"]]],[0,"header","hyper","Headers container, and common header fields.",N,N],[3,"EntityTag","hyper::header","An entity tag, defined in RFC7232",N,N],[12,"weak","","Weakness indicator for the tag",15,N],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",N,N],[12,"0","","",16,N],[3,"Quality","","Represents a quality used in quality values.",N,N],[12,"0","","",17,N],[3,"QualityItem","","Represents an item with a quality value as defined in RFC7231.",N,N],[12,"item","","The actual contents of the field.",18,N],[12,"quality","","The quality (client or server preference) for the value.",18,N],[3,"Accept","","`Accept` header, defined in RFC7231",N,N],[12,"0","","",19,N],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of CORS",N,N],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of CORS",N,N],[12,"0","","",20,N],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of CORS",N,N],[12,"0","","",21,N],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of CORS",N,N],[12,"0","","",22,N],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of CORS",N,N],[12,"0","","",23,N],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of CORS",N,N],[12,"0","","",24,N],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of CORS",N,N],[12,"0","","",25,N],[3,"AcceptCharset","","`Accept-Charset` header, defined in RFC7231",N,N],[12,"0","","",26,N],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in RFC7231",N,N],[12,"0","","",27,N],[3,"AcceptLanguage","","`Accept-Language` header, defined in RFC7231",N,N],[12,"0","","",28,N],[3,"AcceptRanges","","`Accept-Ranges` header, defined in RFC7233",N,N],[12,"0","","",29,N],[3,"Allow","","`Allow` header, defined in RFC7231",N,N],[12,"0","","",30,N],[3,"Authorization","","`Authorization` header, defined in RFC7235",N,N],[12,"0","","",31,N],[3,"Basic","","Credential holder for Basic Authentication",N,N],[12,"username","","The username as a possibly empty string",32,N],[12,"password","","The password. `None` if the `:` delimiter character was not part of the parsed input.",32,N],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",N,N],[12,"token","","Actual bearer token as a string",33,N],[3,"CacheControl","","`Cache-Control` header, defined in RFC7234",N,N],[12,"0","","",34,N],[3,"Connection","","`Connection` header, defined in RFC7230",N,N],[12,"0","","",35,N],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in RFC6266",N,N],[12,"disposition","","The disposition",36,N],[12,"parameters","","Disposition parameters",36,N],[3,"ContentLength","","`Content-Length` header, defined in RFC7230",N,N],[12,"0","","",37,N],[3,"ContentEncoding","","`Content-Encoding` header, defined in RFC7231",N,N],[12,"0","","",38,N],[3,"ContentLanguage","","`Content-Language` header, defined in RFC7231",N,N],[12,"0","","",39,N],[3,"ContentRange","","`Content-Range` header, defined in RFC7233",N,N],[12,"0","","",40,N],[3,"ContentType","","`Content-Type` header, defined in RFC7231",N,N],[12,"0","","",41,N],[3,"Cookie","","`Cookie` header, defined in RFC6265",N,N],[12,"0","","",42,N],[3,"Date","","`Date` header, defined in RFC7231",N,N],[12,"0","","",43,N],[3,"ETag","","`ETag` header, defined in RFC7232",N,N],[12,"0","","",44,N],[3,"Expires","","`Expires` header, defined in RFC7234",N,N],[12,"0","","",45,N],[3,"From","","`From` header, defined in RFC7231",N,N],[12,"0","","",46,N],[3,"Host","","The `Host` header.",N,N],[12,"hostname","","The hostname, such a example.domain.",47,N],[12,"port","","An optional port number.",47,N],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in RFC7232",N,N],[12,"0","","",48,N],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in RFC7232",N,N],[12,"0","","",49,N],[3,"LastModified","","`Last-Modified` header, defined in RFC7232",N,N],[12,"0","","",50,N],[3,"Location","","`Location` header, defined in RFC7231",N,N],[12,"0","","",51,N],[3,"Origin","","The `Origin` header.",N,N],[12,"scheme","","The scheme, such as http or https",52,N],[12,"host","","The host, such as Host{hostname: \"hyper.rs\".to_owned(), port: None}",52,N],[3,"Prefer","","`Prefer` header, defined in RFC7240",N,N],[12,"0","","",53,N],[3,"PreferenceApplied","","`Preference-Applied` header, defined in RFC7240",N,N],[12,"0","","",54,N],[3,"Referer","","`Referer` header, defined in RFC7231",N,N],[12,"0","","",55,N],[3,"Server","","`Server` header, defined in RFC7231",N,N],[12,"0","","",56,N],[3,"SetCookie","","`Set-Cookie` header, defined RFC6265",N,N],[12,"0","","",57,N],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in RFC6797",N,N],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as any subdomains of the host's domain name.",58,N],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header field, during which the UA regards the host (from whom the message was received) as a Known HSTS Host.",58,N],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in RFC7230",N,N],[12,"0","","",59,N],[3,"Upgrade","","`Upgrade` header, defined in RFC7230",N,N],[12,"0","","",60,N],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",N,N],[12,"name","","The protocol identifier",61,N],[12,"version","","The optional version of the protocol, often in the format \"DIGIT.DIGIT\" (e.g.. \"1.2\")",61,N],[3,"UserAgent","","`User-Agent` header, defined in RFC7231",N,N],[12,"0","","",62,N],[3,"Headers","","A map of header fields on requests and responses.",N,N],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",N,N],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",N,N],[3,"HeaderFormatter","","",N,N],[12,"0","","",63,N],[4,"Charset","","A Mime charset.",N,N],[13,"Us_Ascii","","US ASCII",64,N],[13,"Iso_8859_1","","ISO-8859-1",64,N],[13,"Iso_8859_2","","ISO-8859-2",64,N],[13,"Iso_8859_3","","ISO-8859-3",64,N],[13,"Iso_8859_4","","ISO-8859-4",64,N],[13,"Iso_8859_5","","ISO-8859-5",64,N],[13,"Iso_8859_6","","ISO-8859-6",64,N],[13,"Iso_8859_7","","ISO-8859-7",64,N],[13,"Iso_8859_8","","ISO-8859-8",64,N],[13,"Iso_8859_9","","ISO-8859-9",64,N],[13,"Iso_8859_10","","ISO-8859-10",64,N],[13,"Shift_Jis","","Shift_JIS",64,N],[13,"Euc_Jp","","EUC-JP",64,N],[13,"Iso_2022_Kr","","ISO-2022-KR",64,N],[13,"Euc_Kr","","EUC-KR",64,N],[13,"Iso_2022_Jp","","ISO-2022-JP",64,N],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",64,N],[13,"Iso_8859_6_E","","ISO-8859-6-E",64,N],[13,"Iso_8859_6_I","","ISO-8859-6-I",64,N],[13,"Iso_8859_8_E","","ISO-8859-8-E",64,N],[13,"Iso_8859_8_I","","ISO-8859-8-I",64,N],[13,"Gb2312","","GB2312",64,N],[13,"Big5","","Big5",64,N],[13,"Koi8_R","","KOI8-R",64,N],[13,"Ext","","An arbitrary charset specified as a string",64,N],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding` or `Accept-Encoding` header.",N,N],[13,"Chunked","","The `chunked` encoding.",65,N],[13,"Gzip","","The `gzip` encoding.",65,N],[13,"Deflate","","The `deflate` encoding.",65,N],[13,"Compress","","The `compress` encoding.",65,N],[13,"Identity","","The `identity` encoding.",65,N],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",65,N],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header, part of CORS",N,N],[13,"Any","","Allow all origins",66,N],[13,"Null","","A hidden origin",66,N],[13,"Value","","Allow one particular origin",66,N],[4,"RangeUnit","","Range Units, described in RFC7233",N,N],[13,"Bytes","","Indicating byte-range requests are supported.",67,N],[13,"None","","Reserved as keyword, indicating no ranges are supported.",67,N],[13,"Unregistered","","The given range unit is not registered at IANA.",67,N],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",N,N],[13,"NoCache","","\"no-cache\"",68,N],[13,"NoStore","","\"no-store\"",68,N],[13,"NoTransform","","\"no-transform\"",68,N],[13,"OnlyIfCached","","\"only-if-cached\"",68,N],[13,"MaxAge","","\"max-age=delta\"",68,N],[13,"MaxStale","","\"max-stale=delta\"",68,N],[13,"MinFresh","","\"min-fresh=delta\"",68,N],[13,"MustRevalidate","","\"must-revalidate\"",68,N],[13,"Public","","\"public\"",68,N],[13,"Private","","\"private\"",68,N],[13,"ProxyRevalidate","","\"proxy-revalidate\"",68,N],[13,"SMaxAge","","\"s-maxage=delta\"",68,N],[13,"Extension","","Extension directives. Optionally include an argument.",68,N],[4,"ConnectionOption","","Values that can be in the `Connection` header.",N,N],[13,"KeepAlive","","The `keep-alive` connection value.",69,N],[13,"Close","","The `close` connection value.",69,N],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",69,N],[4,"DispositionType","","The implied disposition of the content of the HTTP body",N,N],[13,"Inline","","Inline implies default processing",70,N],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally, rather than process it normally (as per its media type).",70,N],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",70,N],[4,"DispositionParam","","A parameter to the disposition type",N,N],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of bytes representing the filename",71,N],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized parameters.",71,N],[4,"ContentRangeSpec","","Content-Range, described in RFC7233",N,N],[13,"Bytes","","Byte range",72,N],[12,"range","hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be satisfied",72,N],[12,"instance_length","","Total length of the instance, can be omitted if unknown",72,N],[13,"Unregistered","hyper::header","Custom range, with unit not registered at IANA",72,N],[12,"unit","hyper::header::ContentRangeSpec","other-range-unit",72,N],[12,"resp","","other-range-resp",72,N],[4,"Expect","hyper::header","The `Expect` header.",N,N],[13,"Continue","","The value `100-continue`.",73,N],[4,"IfMatch","","`If-Match` header, defined in RFC7232",N,N],[13,"Any","","Any value is a match",74,N],[13,"Items","","Only the listed items are a match",74,N],[4,"IfNoneMatch","","`If-None-Match` header, defined in RFC7232",N,N],[13,"Any","","Any value is a match",75,N],[13,"Items","","Only the listed items are a match",75,N],[4,"IfRange","","`If-Range` header, defined in RFC7233",N,N],[13,"EntityTag","","The entity-tag the client has of the resource",76,N],[13,"Date","","The date when the client retrieved the resource",76,N],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",N,N],[13,"NoCache","","Corresponds to the `no-cache` value.",77,N],[13,"Ext","","Every value other than `no-cache`.",77,N],[4,"Preference","","Prefer contains a list of these preferences.",N,N],[13,"RespondAsync","","\"respond-async\"",78,N],[13,"ReturnRepresentation","","\"return=representation\"",78,N],[13,"ReturnMinimal","","\"return=minimal\"",78,N],[13,"HandlingStrict","","\"handling=strict\"",78,N],[13,"HandlingLeniant","","\"handling=leniant\"",78,N],[13,"Wait","","\"wait=delta\"",78,N],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is just \"\". A preference can also have a list of parameters.",78,N],[4,"Range","","`Range` header, defined in RFC7233",N,N],[13,"Bytes","","Byte range",79,N],[13,"Unregistered","","Custom range, with unit not registered at IANA (`other-range-unit`: String , `other-range-set`: String)",79,N],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`. Each `ByteRangeSpec` defines a range of bytes to fetch",N,N],[13,"FromTo","","Get all bytes between x and y (\"x-y\")",80,N],[13,"AllFrom","","Get all bytes starting from x (\"x-\")",80,N],[13,"Last","","Get last x bytes (\"-x\")",80,N],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of Referrer Policy",N,N],[13,"NoReferrer","","`no-referrer`",81,N],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",81,N],[13,"SameOrigin","","`same-origin`",81,N],[13,"Origin","","`origin`",81,N],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",81,N],[13,"UnsafeUrl","","`unsafe-url`",81,N],[13,"StrictOrigin","","`strict-origin`",81,N],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",81,N],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive except for the `WebSocket` value.",N,N],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",82,N],[13,"Tls","","`TLS` value, Transport Layer Security RFC2817",82,N],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol RFC6455",82,N],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",82,N],[13,"Unregistered","","Any other protocol name not known to hyper",82,N],[4,"Vary","","`Vary` header, defined in RFC7231",N,N],[13,"Any","","Any value is a match",83,N],[13,"Items","","Only the listed items are a match",83,N],[5,"qitem","","Convinience function to wrap a value in a `QualityItem` Sets `q` to the default 1.0",N,[[["t"]],["qualityitem"]]],[5,"q","","Convenience function to create a `Quality` from a float.",N,[[["f32"]],["quality"]]],[11,"star","","A constructor to easily create `Accept: */*`.",19,[[],["accept"]]],[11,"json","","A constructor to easily create `Accept: application/json`.",19,[[],["accept"]]],[11,"text","","A constructor to easily create `Accept: text/*`.",19,[[],["accept"]]],[11,"image","","A constructor to easily create `Accept: image/*`.",19,[[],["accept"]]],[11,"close","","A constructor to easily create a `Connection: close` header.",35,[[],["connection"]]],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",35,[[],["connection"]]],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",41,[[],["contenttype"]]],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",41,[[],["contenttype"]]],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",41,[[],["contenttype"]]],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",41,[[],["contenttype"]]],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",41,[[],["contenttype"]]],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",41,[[],["contenttype"]]],[11,"new","","Creates a new `Origin` header.",52,[[["s"],["h"],["option",["u16"]]],["origin"]]],[11,"bytes","","Get the most common byte range header (\"bytes=from-to\")",79,[[["u64"],["u64"]],["range"]]],[11,"bytes_multi","","Get byte range header with multiple subranges (\"bytes=from1-to1,from2-to2,fromX-toX\")",79,[[["vec"]],["range"]]],[11,"including_subdomains","","Create an STS header that includes subdomains",58,[[["u64"]],["stricttransportsecurity"]]],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",58,[[["u64"]],["stricttransportsecurity"]]],[11,"new","","Creates a new Protocol with the given name and version",61,[[["protocolname"],["option",["string"]]],["protocol"]]],[11,"new","","Constructs a new EntityTag. # Panics If the tag contains invalid characters.",15,[[["bool"],["string"]],["entitytag"]]],[11,"weak","","Constructs a new weak EntityTag. # Panics If the tag contains invalid characters.",15,[[["string"]],["entitytag"]]],[11,"strong","","Constructs a new strong EntityTag. # Panics If the tag contains invalid characters.",15,[[["string"]],["entitytag"]]],[11,"tag","","Get the tag.",15,[[["self"]],["str"]]],[11,"set_tag","","Set the tag. # Panics If the tag contains invalid characters.",15,[[["self"],["string"]]]],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their opaque-tags match character-by-character.",15,[[["self"],["entitytag"]],["bool"]]],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their opaque-tags match character-by-character, regardless of either or both being tagged as \"weak\".",15,[[["self"],["entitytag"]],["bool"]]],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",15,[[["self"],["entitytag"]],["bool"]]],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",15,[[["self"],["entitytag"]],["bool"]]],[11,"new","","Creates a new `QualityItem` from an item and a quality. The item can be of any type. The quality should be a value in the range [0, 1].",18,[[["t"],["quality"]],["qualityitem"]]],[0,"parsing","","Utility functions for Header implementations.",N,N],[3,"ExtendedValue","hyper::header::parsing","An extended header parameter value (i.e., tagged with a character set and optionally, a language), as defined in RFC 5987.",N,N],[12,"charset","","The character set that is used to encode the `value` to a string.",84,N],[12,"language_tag","","The human language details of the `value`, if available.",84,N],[12,"value","","The parameter value, as expressed in octets.",84,N],[3,"HTTP_VALUE","","This encode set is used for HTTP header values and is defined at https://tools.ietf.org/html/rfc5987#section-3.2",N,N],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",N,N],[5,"from_raw_str","","Reads a raw string into a value.",N,N],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",N,N],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",N,N],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in RFC 5987.",N,[[["str"]],["result",["extendedvalue"]]]],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",N,N],[10,"scheme","","An optional Scheme name.",85,[[],["option",["str"]]]],[10,"fmt_scheme","","Format the Scheme data into a header value.",85,[[["self"],["formatter"]],["result"]]],[8,"Header","","A trait for any object that will represent a header field and value.",N,N],[10,"header_name","","Returns the name of the header field this belongs to.",86,[[],["str"]]],[10,"parse_header","","Parse a header from a raw stream of bytes.",86,N],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",N,N],[10,"fmt_header","","Format a header to be output into a TcpStream.",87,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new, empty headers map.",88,[[],["headers"]]],[11,"set","","Set a header field to the corresponding value.",88,[[["self"],["h"]]]],[11,"get_raw","","Access the raw value of a header.",88,[[["self"],["str"]],["option"]]],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",88,[[["self"],["k"],["vec",["vec"]]]]],[11,"append_raw","","Append a value to raw value of this header.",88,[[["self"],["k"],["vec",["u8"]]]]],[11,"remove_raw","","Remove a header set by set_raw",88,[[["self"],["str"]]]],[11,"get","","Get a reference to the header field's value, if it exists.",88,[[["self"]],["option"]]],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",88,[[["self"]],["option"]]],[11,"has","","Returns a boolean of whether a certain header is in the map.",88,[[["self"]],["bool"]]],[11,"remove","","Removes a header from the map, if one existed. Returns true if a header has been removed.",88,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the header fields.",88,[[["self"]],["headersitems"]]],[11,"len","","Returns the number of headers in the map.",88,[[["self"]],["usize"]]],[11,"clear","","Remove all headers from the map.",88,[[["self"]]]],[11,"is","","Check if a HeaderView is a certain Header.",89,[[["self"]],["bool"]]],[11,"name","","Get the Header name as a slice.",89,[[["self"]],["str"]]],[11,"value","","Cast the value to a certain Header type.",89,[[["self"]],["option"]]],[11,"value_string","","Get just the header value as a String.",89,[[["self"]],["string"]]],[0,"http","hyper","Pieces pertaining to the HTTP message protocol.",N,N],[3,"RawStatus","hyper::http","The raw status code and reason-phrase.",N,N],[12,"0","","",90,N],[12,"1","","",90,N],[5,"should_keep_alive","","Checks if a connection should be kept alive.",N,[[["httpversion"],["headers"]],["bool"]]],[0,"h1","","Adapts the HTTP/1.1 implementation into the `HttpMessage` API.",N,N],[3,"Http11Message","hyper::http::h1","An implementation of the `HttpMessage` trait for HTTP/1.1.",N,N],[3,"Http11Protocol","","The `Protocol` implementation provides HTTP/1.1 messages.",N,N],[3,"EndError","","",N,N],[3,"Incoming","","An Incoming Message head. Includes request/status line, and headers.",N,N],[12,"version","","HTTP version of the message.",91,N],[12,"subject","","Subject (request line or status line) of Incoming message.",91,N],[12,"headers","","Headers of the Incoming message.",91,N],[4,"HttpReader","","Readers to handle different Transfer-Encodings.",N,N],[13,"SizedReader","","A Reader used when a Content-Length header is passed with a positive integer.",92,N],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",92,N],[13,"EofReader","","A Reader used for responses that don't indicate a length or chunked.",92,N],[13,"EmptyReader","","A Reader used for messages that should never have a body.",92,N],[4,"HttpWriter","","Writers to handle different Transfer-Encodings.",N,N],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is determined.",93,N],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",93,N],[13,"SizedWriter","","A Writer for when Content-Length is set.",93,N],[13,"EmptyWriter","","A writer that should not write any body.",93,N],[5,"parse_request","","Parses a request into an Incoming message head.",N,[[["bufreader"]],["result",["incoming"]]]],[5,"parse_response","","Parses a response into an Incoming message head.",N,[[["bufreader"]],["result",["incoming"]]]],[17,"CR","","The `\\r` byte.",N,N],[17,"LF","","The `\\n` byte.",N,N],[17,"LINE_ENDING","","The bytes `\\r\\n`.",N,N],[11,"into_inner","","Consumes the `Http11Message` and returns the underlying `NetworkStream`.",94,[[["self"]],["box",["networkstream"]]]],[11,"get_ref","","Gets a borrowed reference to the underlying `NetworkStream`, regardless of the state of the `Http11Message`.",94,[[["self"]],["networkstream"]]],[11,"get_mut","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the `Http11Message`.",94,[[["self"]],["networkstream"]]],[11,"with_stream","","Creates a new `Http11Message` that will use the given `NetworkStream` for communicating to the peer.",94,[[["box",["networkstream"]]],["http11message"]]],[11,"flush_outgoing","","Flushes the current outgoing content and moves the stream into the `stream` property.",94,[[["self"]],["result"]]],[11,"with_connector","","Creates a new `Http11Protocol` instance that will use the given `NetworkConnector` for establishing HTTP connections.",95,[[["c"]],["http11protocol"]]],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",92,[[["self"]],["r"]]],[11,"get_ref","","Gets a borrowed reference to the underlying Reader.",92,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying Reader.",92,[[["self"]],["r"]]],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",93,[[["self"]],["w"]]],[11,"get_ref","","Access the inner Writer.",93,[[["self"]],["w"]]],[11,"get_mut","","Access the inner Writer mutably.",93,[[["self"]],["w"]]],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",93,[[["self"]],["result",["enderror"]]]],[0,"message","hyper::http","Defines the `HttpMessage` trait that serves to encapsulate the operations of a single request-response cycle on any HTTP connection.",N,N],[3,"RequestHead","hyper::http::message","Describes a request.",N,N],[12,"headers","","The headers of the request",96,N],[12,"method","","The method of the request",96,N],[12,"url","","The URL of the request",96,N],[3,"ResponseHead","","Describes a response.",N,N],[12,"headers","","The headers of the reponse",97,N],[12,"raw_status","","The raw status line of the response",97,N],[12,"version","","The HTTP/2 version which generated the response",97,N],[8,"Protocol","","The trait provides an API for creating new `HttpMessage`s depending on the underlying HTTP protocol.",N,N],[10,"new_message","","Creates a fresh `HttpMessage` bound to the given host, based on the given protocol scheme.",98,[[["self"],["str"],["u16"],["str"]],["result",["box"]]]],[8,"HttpMessage","","The trait provides an API for sending an receiving HTTP messages.",N,N],[10,"set_outgoing","","Initiates a new outgoing request.",99,[[["self"],["requesthead"]],["result",["requesthead"]]]],[10,"get_incoming","","Obtains the incoming response and returns its head (i.e. the `ResponseHead` struct)",99,[[["self"]],["result",["responsehead"]]]],[10,"set_read_timeout","","Set the read timeout duration for this message.",99,[[["self"],["option",["duration"]]],["result"]]],[10,"set_write_timeout","","Set the write timeout duration for this message.",99,[[["self"],["option",["duration"]]],["result"]]],[10,"close_connection","","Closes the underlying HTTP connection.",99,[[["self"]],["result"]]],[10,"has_body","","Returns whether the incoming message has a body.",99,[[["self"]],["bool"]]],[11,"set_proxied","","Called when the Client wishes to use a Proxy.",99,[[["self"],["bool"]]]],[11,"is","","Is the underlying type in this trait object a T?",99,[[["self"]],["bool"]]],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",99,[[["self"]],["option"]]],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained data.",99,[[["self"]],["option"]]],[11,"downcast","","If the underlying type is T, extract it.",99,[[["box",["httpmessage"]]],["result",["box","box"]]]],[0,"net","hyper","A collection of traits abstracting over Listeners and Streams.",N,N],[3,"NetworkConnections","hyper::net","An iterator wrapper over a `NetworkAcceptor`.",N,N],[3,"HttpListener","","A `NetworkListener` for `HttpStream`s.",N,N],[3,"HttpStream","","A wrapper around a `TcpStream`.",N,N],[12,"0","","",100,N],[3,"HttpConnector","","A connector that will produce HttpStreams.",N,N],[3,"HttpsListener","","A Http Listener over SSL.",N,N],[3,"HttpsConnector","","A connector that can protect HTTP streams using SSL.",N,N],[4,"Fresh","","The write-status indicating headers have not been written.",N,N],[4,"Streaming","","The write-status indicating headers have been written.",N,N],[4,"HttpsStream","","A stream over the HTTP protocol, possibly protected by SSL.",N,N],[13,"Http","","A plain text stream.",101,N],[13,"Https","","A stream protected by SSL.",101,N],[8,"NetworkListener","","An abstraction to listen for connections on a certain port.",N,N],[16,"Stream","","The stream produced for each connection.",102,N],[10,"accept","","Returns an iterator of streams.",102,[[["self"]],["result"]]],[10,"local_addr","","Get the address this Listener ended up listening on.",102,[[["self"]],["result",["socketaddr"]]]],[11,"incoming","","Returns an iterator over incoming connections.",102,[[["self"]],["networkconnections"]]],[11,"set_read_timeout","","Sets the read timeout for all streams that are accepted",102,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","Sets the write timeout for all streams that are accepted",102,[[["self"],["option",["duration"]]]]],[8,"NetworkStream","","An abstraction over streams that a `Server` can utilize.",N,N],[10,"peer_addr","","Get the remote address of the underlying connection.",103,[[["self"]],["result",["socketaddr"]]]],[10,"set_read_timeout","","Set the maximum time to wait for a read to complete.",103,[[["self"],["option",["duration"]]],["result"]]],[10,"set_write_timeout","","Set the maximum time to wait for a write to complete.",103,[[["self"],["option",["duration"]]],["result"]]],[11,"close","","This will be called when Stream should no longer be kept alive.",103,[[["self"],["shutdown"]],["result"]]],[8,"NetworkConnector","","A connector creates a NetworkStream.",N,N],[16,"Stream","","Type of `Stream` to create",104,N],[10,"connect","","Connect to a remote address.",104,[[["self"],["str"],["u16"],["str"]],["result"]]],[8,"SslClient","","An abstraction to allow any SSL implementation to be used with client-side HttpsStreams.",N,N],[16,"Stream","","The protected stream.",105,N],[10,"wrap_client","","Wrap a client stream with SSL.",105,[[["self"],["t"],["str"]],["result"]]],[8,"SslServer","","An abstraction to allow any SSL implementation to be used with server-side HttpsStreams.",N,N],[16,"Stream","","The protected stream.",106,N],[10,"wrap_server","","Wrap a server stream with SSL.",106,[[["self"],["t"]],["result"]]],[11,"is","","Is the underlying type in this trait object a `T`?",103,[[["self"]],["bool"]]],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",103,[[["self"]],["option"]]],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained data.",103,[[["self"]],["option"]]],[11,"downcast","","If the underlying type is `T`, extract it.",103,[[["box",["networkstream"]]],["result",["box","box"]]]],[11,"is","","Is the underlying type in this trait object a `T`?",103,[[["self"]],["bool"]]],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",103,[[["self"]],["option"]]],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained data.",103,[[["self"]],["option"]]],[11,"downcast","","If the underlying type is `T`, extract it.",103,[[["box",["networkstream"]]],["result",["box","box"]]]],[11,"new","","Start listening to an address over HTTP.",107,[[["to"]],["result",["httplistener"]]]],[11,"new","","Start listening to an address over HTTPS.",108,[[["to"],["s"]],["result",["httpslistener"]]]],[11,"with_listener","","Construct an HttpsListener from a bound `TcpListener`.",108,[[["httplistener"],["s"]],["httpslistener"]]],[11,"new","","Create a new connector using the provided SSL implementation.",109,[[["s"]],["httpsconnector",["httpconnector"]]]],[11,"with_connector","","Create a new connector using the provided SSL implementation.",109,[[["s"],["c"]],["httpsconnector"]]],[0,"server","hyper","HTTP Server",N,N],[3,"Server","hyper::server","A server can listen on a TCP socket.",N,N],[3,"Listening","","A listening server, which can later be closed.",N,N],[12,"socket","","The socket addresses that the server is bound to.",110,N],[0,"request","","Server Requests",N,N],[3,"Request","hyper::server::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",N,N],[12,"remote_addr","","The IP address of the remote connection.",111,N],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",111,N],[12,"headers","","The headers of the incoming request.",111,N],[12,"uri","","The target request-uri for this request.",111,N],[12,"version","","The version of HTTP for this request.",111,N],[11,"new","","Create a new Request, reading the StartLine and Headers so they are immediately useful.",111,[[["bufreader"],["socketaddr"]],["result",["request"]]]],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",111,[[["self"],["option",["duration"]]],["result"]]],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",111,[[["self"]],["option"]]],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected over HTTPS.",111,[[["self"]],["option"]]],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",111,N],[0,"response","hyper::server","Server Responses",N,N],[3,"Response","hyper::server::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",N,N],[12,"version","","The HTTP version of this response.",112,N],[11,"status","","The status of this response.",112,[[["self"]],["statuscode"]]],[11,"headers","","The headers of this response.",112,[[["self"]],["headers"]]],[11,"construct","","Construct a Response from its constituent parts.",112,[[["httpversion"],["httpwriter",["write"]],["statuscode"],["headers"]],["response",["fresh"]]]],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",112,N],[11,"new","","Creates a new Response that can be used to write to a network stream.",112,[[["write"],["headers"]],["response",["fresh"]]]],[11,"send","","Writes the body and ends the response.",112,N],[11,"start","","Consume this Response, writing the Headers and Status and creating a Response",112,[[["self"]],["result",["response"]]]],[11,"status_mut","","Get a mutable reference to the status.",112,[[["self"]],["statuscode"]]],[11,"headers_mut","","Get a mutable reference to the Headers.",112,[[["self"]],["headers"]]],[11,"end","","Flushes all writing of a response to the client.",112,[[["self"]],["result"]]],[8,"Handler","hyper::server","A handler that can handle incoming requests for a server.",N,N],[10,"handle","","Receives a `Request`/`Response` pair, and should perform some action on them.",113,[[["self"],["request"],["response",["fresh"]]]]],[11,"check_continue","","Called when a Request includes a `Expect: 100-continue` header.",113,N],[11,"on_connection_start","","This is run after a connection is received, on a per-connection basis (not a per-request basis, as a connection with keep-alive may handle multiple requests)",113,[[["self"]]]],[11,"on_connection_end","","This is run before a connection is closed, on a per-connection basis (not a per-request basis, as a connection with keep-alive may handle multiple requests)",113,[[["self"]]]],[11,"new","","Creates a new server with the provided handler.",114,[[["l"]],["server"]]],[11,"keep_alive","","Controls keep-alive for this server.",114,[[["self"],["option",["duration"]]]]],[11,"set_read_timeout","","Sets the read timeout for all Request reads.",114,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","Sets the write timeout for all Response writes.",114,[[["self"],["option",["duration"]]]]],[11,"local_addr","","Get the address that the server is listening on.",114,[[["self"]],["result",["socketaddr"]]]],[11,"http","","Creates a new server that will handle `HttpStream`s.",114,[[["to"]],["result",["server"]]]],[11,"https","","Creates a new server that will handle `HttpStream`s over SSL.",114,[[["a"],["s"]],["result",["server"]]]],[11,"handle","","Binds to a socket and starts handling connections.",114,[[["self"],["h"]],["result",["listening"]]]],[11,"handle_threads","","Binds to a socket and starts handling connections with the provided number of threads.",114,[[["self"],["h"],["usize"]],["result",["listening"]]]],[11,"close","","Warning: This function doesn't work. The server remains listening after you called it. See https://github.com/hyperium/hyper/issues/338 for more details.",110,[[["self"]],["result"]]],[0,"status","hyper","HTTP status codes",N,N],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[13,"Continue","","100 Continue [RFC7231, Section 6.2.1]",115,N],[13,"SwitchingProtocols","","101 Switching Protocols [RFC7231, Section 6.2.2]",115,N],[13,"Processing","","102 Processing [RFC2518]",115,N],[13,"Ok","","200 OK [RFC7231, Section 6.3.1]",115,N],[13,"Created","","201 Created [RFC7231, Section 6.3.2]",115,N],[13,"Accepted","","202 Accepted [RFC7231, Section 6.3.3]",115,N],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",115,N],[13,"NoContent","","204 No Content [RFC7231, Section 6.3.5]",115,N],[13,"ResetContent","","205 Reset Content [RFC7231, Section 6.3.6]",115,N],[13,"PartialContent","","206 Partial Content [RFC7233, Section 4.1]",115,N],[13,"MultiStatus","","207 Multi-Status [RFC4918]",115,N],[13,"AlreadyReported","","208 Already Reported [RFC5842]",115,N],[13,"ImUsed","","226 IM Used [RFC3229]",115,N],[13,"MultipleChoices","","300 Multiple Choices [RFC7231, Section 6.4.1]",115,N],[13,"MovedPermanently","","301 Moved Permanently [RFC7231, Section 6.4.2]",115,N],[13,"Found","","302 Found [RFC7231, Section 6.4.3]",115,N],[13,"SeeOther","","303 See Other [RFC7231, Section 6.4.4]",115,N],[13,"NotModified","","304 Not Modified [RFC7232, Section 4.1]",115,N],[13,"UseProxy","","305 Use Proxy [RFC7231, Section 6.4.5]",115,N],[13,"TemporaryRedirect","","307 Temporary Redirect [RFC7231, Section 6.4.7]",115,N],[13,"PermanentRedirect","","308 Permanent Redirect [RFC7238]",115,N],[13,"BadRequest","","400 Bad Request [RFC7231, Section 6.5.1]",115,N],[13,"Unauthorized","","401 Unauthorized [RFC7235, Section 3.1]",115,N],[13,"PaymentRequired","","402 Payment Required [RFC7231, Section 6.5.2]",115,N],[13,"Forbidden","","403 Forbidden [RFC7231, Section 6.5.3]",115,N],[13,"NotFound","","404 Not Found [RFC7231, Section 6.5.4]",115,N],[13,"MethodNotAllowed","","405 Method Not Allowed [RFC7231, Section 6.5.5]",115,N],[13,"NotAcceptable","","406 Not Acceptable [RFC7231, Section 6.5.6]",115,N],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required [RFC7235, Section 3.2]",115,N],[13,"RequestTimeout","","408 Request Timeout [RFC7231, Section 6.5.7]",115,N],[13,"Conflict","","409 Conflict [RFC7231, Section 6.5.8]",115,N],[13,"Gone","","410 Gone [RFC7231, Section 6.5.9]",115,N],[13,"LengthRequired","","411 Length Required [RFC7231, Section 6.5.10]",115,N],[13,"PreconditionFailed","","412 Precondition Failed [RFC7232, Section 4.2]",115,N],[13,"PayloadTooLarge","","413 Payload Too Large [RFC7231, Section 6.5.11]",115,N],[13,"UriTooLong","","414 URI Too Long [RFC7231, Section 6.5.12]",115,N],[13,"UnsupportedMediaType","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",115,N],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable [RFC7233, Section 4.4]",115,N],[13,"ExpectationFailed","","417 Expectation Failed [RFC7231, Section 6.5.14]",115,N],[13,"ImATeapot","","418 I'm a teapot [curiously, not registered by IANA, but RFC2324]",115,N],[13,"MisdirectedRequest","","421 Misdirected Request RFC7540, Section 9.1.2",115,N],[13,"UnprocessableEntity","","422 Unprocessable Entity [RFC4918]",115,N],[13,"Locked","","423 Locked [RFC4918]",115,N],[13,"FailedDependency","","424 Failed Dependency [RFC4918]",115,N],[13,"UpgradeRequired","","426 Upgrade Required [RFC7231, Section 6.5.15]",115,N],[13,"PreconditionRequired","","428 Precondition Required [RFC6585]",115,N],[13,"TooManyRequests","","429 Too Many Requests [RFC6585]",115,N],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large [RFC6585]",115,N],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons [RFC7725]",115,N],[13,"InternalServerError","","500 Internal Server Error [RFC7231, Section 6.6.1]",115,N],[13,"NotImplemented","","501 Not Implemented [RFC7231, Section 6.6.2]",115,N],[13,"BadGateway","","502 Bad Gateway [RFC7231, Section 6.6.3]",115,N],[13,"ServiceUnavailable","","503 Service Unavailable [RFC7231, Section 6.6.4]",115,N],[13,"GatewayTimeout","","504 Gateway Timeout [RFC7231, Section 6.6.5]",115,N],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",115,N],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates [RFC2295]",115,N],[13,"InsufficientStorage","","507 Insufficient Storage [RFC4918]",115,N],[13,"LoopDetected","","508 Loop Detected [RFC5842]",115,N],[13,"NotExtended","","510 Not Extended [RFC2774]",115,N],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required [RFC6585]",115,N],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",115,N],[4,"StatusClass","","The class of an HTTP `status-code`.",N,N],[13,"Informational","","1xx (Informational): The request was received, continuing process",116,N],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",116,N],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",116,N],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",116,N],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",116,N],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",116,N],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",115,[[["self"]],["option",["str"]]]],[11,"class","","Determine the class of a status code, based on its first digit.",115,[[["self"]],["statusclass"]]],[11,"is_informational","","Check if class is Informational.",115,[[["self"]],["bool"]]],[11,"is_success","","Check if class is Success.",115,[[["self"]],["bool"]]],[11,"is_redirection","","Check if class is Redirection.",115,[[["self"]],["bool"]]],[11,"is_client_error","","Check if class is ClientError.",115,[[["self"]],["bool"]]],[11,"is_server_error","","Check if class is ServerError.",115,[[["self"]],["bool"]]],[11,"is_strange_status","","Check if class is NoClass",115,[[["self"]],["bool"]]],[11,"default_code","","Get the default status code for the class.",116,[[["self"]],["statuscode"]]],[0,"uri","hyper","HTTP RequestUris",N,N],[4,"RequestUri","hyper::uri","The Request-URI of a Request's StartLine.",N,N],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",117,N],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",117,N],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",117,N],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",117,N],[0,"version","hyper","HTTP Versions enum",N,N],[4,"HttpVersion","hyper::version","Represents a version of the HTTP spec.",N,N],[13,"Http09","","`HTTP/0.9`",118,N],[13,"Http10","","`HTTP/1.0`",118,N],[13,"Http11","","`HTTP/1.1`",118,N],[13,"Http20","","`HTTP/2.0`",118,N],[0,"mime","hyper","Re-exporting the mime crate, for convenience.",N,N],[3,"Mime","hyper::mime","Mime, or Media Type. Encapsulates common registers types.",N,N],[12,"0","","",119,N],[12,"1","","",119,N],[12,"2","","",119,N],[4,"TopLevel","","",N,N],[13,"Star","","",120,N],[13,"Text","","",120,N],[13,"Image","","",120,N],[13,"Audio","","",120,N],[13,"Video","","",120,N],[13,"Application","","",120,N],[13,"Multipart","","",120,N],[13,"Message","","",120,N],[13,"Model","","",120,N],[13,"Ext","","",120,N],[4,"SubLevel","","",N,N],[13,"Star","","",121,N],[13,"Plain","","",121,N],[13,"Html","","",121,N],[13,"Xml","","",121,N],[13,"Javascript","","",121,N],[13,"Css","","",121,N],[13,"EventStream","","",121,N],[13,"Json","","",121,N],[13,"WwwFormUrlEncoded","","",121,N],[13,"Msgpack","","",121,N],[13,"OctetStream","","",121,N],[13,"FormData","","",121,N],[13,"Png","","",121,N],[13,"Gif","","",121,N],[13,"Bmp","","",121,N],[13,"Jpeg","","",121,N],[13,"Mpeg","","",121,N],[13,"Mp4","","",121,N],[13,"Ogg","","",121,N],[13,"Ext","","",121,N],[4,"Attr","","",N,N],[13,"Charset","","",122,N],[13,"Boundary","","",122,N],[13,"Q","","",122,N],[13,"Ext","","",122,N],[4,"Value","","",N,N],[13,"Utf8","","",123,N],[13,"Ext","","",123,N],[6,"Param","","",N,N],[14,"mime","","Easily create a Mime without having to import so many enums.",N,N],[14,"header","hyper","",N,N],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_string","","",124,[[["self"]],["string"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","hyper::client","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"connect","hyper::client::pool","",4,[[["self"],["str"],["u16"],["str"]],["result",["httpstream","error"]]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","hyper::client::request","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","hyper::client::response","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","hyper::error","",12,[[["self"]],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","hyper::method","",14,[[["self"]],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","hyper::header","",15,[[["self"]],["u"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_string","","",125,[[["self"]],["string"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_string","","",26,[[["self"]],["string"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_string","","",88,[[["self"]],["string"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into_iter","","",126,[[["self"]],["i"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_string","","",89,[[["self"]],["string"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_string","","",68,[[["self"]],["string"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_string","","",72,[[["self"]],["string"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_string","","",73,[[["self"]],["string"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_string","","",74,[[["self"]],["string"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_string","","",76,[[["self"]],["string"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_string","","",77,[[["self"]],["string"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_string","","",78,[[["self"]],["string"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_string","","",82,[[["self"]],["string"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_string","","",83,[[["self"]],["string"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"into","hyper::header::parsing","",84,[[["self"]],["u"]]],[11,"to_string","","",84,[[["self"]],["string"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"into","hyper::http","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"into","hyper::http::h1","",94,[[["self"]],["u"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"into","hyper::http::message","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"into","hyper::net","",129,[[["self"]],["u"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into_iter","","",129,[[["self"]],["i"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"connect","","",130,[[["self"],["str"],["u16"],["str"]],["result",["httpstream","error"]]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"connect","","",109,[[["self"],["str"],["u16"],["str"]],["result",["httpstream","error"]]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"into","hyper::server","",114,[[["self"]],["u"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"into","hyper::server::request","",111,[[["self"]],["u"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"into","hyper::server::response","",112,[[["self"]],["u"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"into","hyper::status","",115,[[["self"]],["u"]]],[11,"to_string","","",115,[[["self"]],["string"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"into","hyper::uri","",117,[[["self"]],["u"]]],[11,"to_string","","",117,[[["self"]],["string"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"into","hyper::version","",118,[[["self"]],["u"]]],[11,"to_string","","",118,[[["self"]],["string"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"into","hyper::mime","",119,[[["self"]],["u"]]],[11,"to_string","","",119,[[["self"]],["string"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_string","","",120,[[["self"]],["string"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_string","","",121,[[["self"]],["string"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_string","","",122,[[["self"]],["string"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_string","","",123,[[["self"]],["string"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"from","hyper::error","",12,[[["errors"]],["parseerror"]]],[11,"hash","hyper","",124,N],[11,"from_str","","",124,[[["str"]],["result",["url","parseerror"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::error","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"index","hyper","",124,[[["self"],["rangefull"]],["str"]]],[11,"index","","",124,[[["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",124,[[["self"],["range",["position"]]],["str"]]],[11,"index","","",124,[[["self"],["rangeto",["position"]]],["str"]]],[11,"eq","","",124,[[["self"],["url"]],["bool"]]],[11,"eq","hyper::error","",12,[[["self"],["parseerror"]],["bool"]]],[11,"clone","hyper","",124,[[["self"]],["url"]]],[11,"clone","hyper::error","",12,[[["self"]],["parseerror"]]],[11,"as_ref","hyper","",124,[[["self"]],["str"]]],[11,"fmt","hyper::error","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"cmp","","",124,[[["self"],["url"]],["ordering"]]],[11,"partial_cmp","","",124,[[["self"],["url"]],["option",["ordering"]]]],[11,"to_socket_addrs","","",124,[[["self"]],["result",["error"]]]],[11,"description","hyper::error","",12,[[["self"]],["str"]]],[11,"fmt","hyper","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",0,[[["str"]],["result",["languagetag","error"]]]],[11,"eq","","",0,[[["self"],["languagetag"]],["bool"]]],[11,"clone","","",0,[[["self"]],["languagetag"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"default","","",0,[[],["languagetag"]]],[11,"hash","hyper::mime","",122,N],[11,"hash","","",120,N],[11,"hash","","",119,N],[11,"hash","","",121,N],[11,"hash","","",123,N],[11,"fmt","","",121,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",123,[[["str"]],["result",["value"]]]],[11,"from_str","","",119,[[["str"]],["result",["mime"]]]],[11,"from_str","","",121,[[["str"]],["result",["sublevel"]]]],[11,"from_str","","",122,[[["str"]],["result",["attr"]]]],[11,"from_str","","",120,[[["str"]],["result",["toplevel"]]]],[11,"eq","","",120,[[["self"],["toplevel"]],["bool"]]],[11,"eq","","",122,[[["self"],["str"]],["bool"]]],[11,"eq","","",120,[[["self"],["str"]],["bool"]]],[11,"eq","","",123,[[["self"],["str"]],["bool"]]],[11,"eq","","",123,[[["self"],["string"]],["bool"]]],[11,"eq","","",120,[[["self"],["string"]],["bool"]]],[11,"eq","","",123,[[["self"],["str"]],["bool"]]],[11,"eq","","",122,[[["self"],["string"]],["bool"]]],[11,"eq","","",120,[[["self"],["str"]],["bool"]]],[11,"eq","","",121,[[["self"],["str"]],["bool"]]],[11,"eq","","",122,[[["self"],["str"]],["bool"]]],[11,"eq","","",121,[[["self"],["string"]],["bool"]]],[11,"eq","","",123,[[["self"],["value"]],["bool"]]],[11,"eq","","",121,[[["self"],["str"]],["bool"]]],[11,"eq","","",122,[[["self"],["attr"]],["bool"]]],[11,"eq","","",119,[[["self"],["mime"]],["bool"]]],[11,"eq","","",121,[[["self"],["sublevel"]],["bool"]]],[11,"deref","","",123,[[["self"]],["str"]]],[11,"deref","","",121,[[["self"]],["str"]]],[11,"deref","","",122,[[["self"]],["str"]]],[11,"deref","","",120,[[["self"]],["str"]]],[11,"clone","","",120,[[["self"]],["toplevel"]]],[11,"clone","","",123,[[["self"]],["value"]]],[11,"clone","","",119,[[["self"]],["mime"]]],[11,"clone","","",121,[[["self"]],["sublevel"]]],[11,"clone","","",122,[[["self"]],["attr"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"cmp","","",123,[[["self"],["value"]],["ordering"]]],[11,"cmp","","",122,[[["self"],["attr"]],["ordering"]]],[11,"cmp","","",120,[[["self"],["toplevel"]],["ordering"]]],[11,"cmp","","",121,[[["self"],["sublevel"]],["ordering"]]],[11,"cmp","","",119,[[["self"],["mime"]],["ordering"]]],[11,"partial_cmp","","",120,[[["self"],["toplevel"]],["option",["ordering"]]]],[11,"lt","","",120,[[["self"],["toplevel"]],["bool"]]],[11,"le","","",120,[[["self"],["toplevel"]],["bool"]]],[11,"gt","","",120,[[["self"],["toplevel"]],["bool"]]],[11,"ge","","",120,[[["self"],["toplevel"]],["bool"]]],[11,"partial_cmp","","",121,[[["self"],["sublevel"]],["option",["ordering"]]]],[11,"lt","","",121,[[["self"],["sublevel"]],["bool"]]],[11,"le","","",121,[[["self"],["sublevel"]],["bool"]]],[11,"gt","","",121,[[["self"],["sublevel"]],["bool"]]],[11,"ge","","",121,[[["self"],["sublevel"]],["bool"]]],[11,"partial_cmp","","",122,[[["self"],["attr"]],["option",["ordering"]]]],[11,"lt","","",122,[[["self"],["attr"]],["bool"]]],[11,"le","","",122,[[["self"],["attr"]],["bool"]]],[11,"gt","","",122,[[["self"],["attr"]],["bool"]]],[11,"ge","","",122,[[["self"],["attr"]],["bool"]]],[11,"partial_cmp","","",119,[[["self"],["mime"]],["option",["ordering"]]]],[11,"lt","","",119,[[["self"],["mime"]],["bool"]]],[11,"le","","",119,[[["self"],["mime"]],["bool"]]],[11,"gt","","",119,[[["self"],["mime"]],["bool"]]],[11,"ge","","",119,[[["self"],["mime"]],["bool"]]],[11,"partial_cmp","","",123,[[["self"],["value"]],["option",["ordering"]]]],[11,"lt","","",123,[[["self"],["value"]],["bool"]]],[11,"le","","",123,[[["self"],["value"]],["bool"]]],[11,"gt","","",123,[[["self"],["value"]],["bool"]]],[11,"ge","","",123,[[["self"],["value"]],["bool"]]],[11,"into_url","hyper","",124,[[["self"]],["result",["url","urlerror"]]]],[11,"scheme","hyper::header","",32,[[],["option",["str"]]]],[11,"fmt_scheme","","",32,[[["self"],["formatter"]],["result"]]],[11,"scheme","","",33,[[],["option",["str"]]]],[11,"fmt_scheme","","",33,[[["self"],["formatter"]],["result"]]],[11,"header_name","","",19,[[],["str"]]],[11,"parse_header","","",19,N],[11,"header_name","","",125,[[],["str"]]],[11,"parse_header","","",125,N],[11,"header_name","","",20,[[],["str"]]],[11,"parse_header","","",20,N],[11,"header_name","","",21,[[],["str"]]],[11,"parse_header","","",21,N],[11,"header_name","","",66,[[],["str"]]],[11,"parse_header","","",66,N],[11,"header_name","","",22,[[],["str"]]],[11,"parse_header","","",22,N],[11,"header_name","","",23,[[],["str"]]],[11,"parse_header","","",23,N],[11,"header_name","","",24,[[],["str"]]],[11,"parse_header","","",24,N],[11,"header_name","","",25,[[],["str"]]],[11,"parse_header","","",25,N],[11,"header_name","","",26,[[],["str"]]],[11,"parse_header","","",26,N],[11,"header_name","","",27,[[],["str"]]],[11,"parse_header","","",27,N],[11,"header_name","","",28,[[],["str"]]],[11,"parse_header","","",28,N],[11,"header_name","","",29,[[],["str"]]],[11,"parse_header","","",29,N],[11,"header_name","","",30,[[],["str"]]],[11,"parse_header","","",30,N],[11,"header_name","","",31,[[],["str"]]],[11,"parse_header","","",31,N],[11,"header_name","","",34,[[],["str"]]],[11,"parse_header","","",34,N],[11,"header_name","","",42,[[],["str"]]],[11,"parse_header","","",42,N],[11,"header_name","","",35,[[],["str"]]],[11,"parse_header","","",35,N],[11,"header_name","","",36,[[],["str"]]],[11,"parse_header","","",36,N],[11,"header_name","","",38,[[],["str"]]],[11,"parse_header","","",38,N],[11,"header_name","","",39,[[],["str"]]],[11,"parse_header","","",39,N],[11,"header_name","","",37,[[],["str"]]],[11,"parse_header","","",37,N],[11,"header_name","","",40,[[],["str"]]],[11,"parse_header","","",40,N],[11,"header_name","","",41,[[],["str"]]],[11,"parse_header","","",41,N],[11,"header_name","","",43,[[],["str"]]],[11,"parse_header","","",43,N],[11,"header_name","","",44,[[],["str"]]],[11,"parse_header","","",44,N],[11,"header_name","","",73,[[],["str"]]],[11,"parse_header","","",73,N],[11,"header_name","","",45,[[],["str"]]],[11,"parse_header","","",45,N],[11,"header_name","","",46,[[],["str"]]],[11,"parse_header","","",46,N],[11,"header_name","","",47,[[],["str"]]],[11,"parse_header","","",47,N],[11,"header_name","","",74,[[],["str"]]],[11,"parse_header","","",74,N],[11,"header_name","","",48,[[],["str"]]],[11,"parse_header","","",48,N],[11,"header_name","","",75,[[],["str"]]],[11,"parse_header","","",75,N],[11,"header_name","","",76,[[],["str"]]],[11,"parse_header","","",76,N],[11,"header_name","","",49,[[],["str"]]],[11,"parse_header","","",49,N],[11,"header_name","","",50,[[],["str"]]],[11,"parse_header","","",50,N],[11,"header_name","","",51,[[],["str"]]],[11,"parse_header","","",51,N],[11,"header_name","","",52,[[],["str"]]],[11,"parse_header","","",52,N],[11,"header_name","","",77,[[],["str"]]],[11,"parse_header","","",77,N],[11,"header_name","","",53,[[],["str"]]],[11,"parse_header","","",53,N],[11,"header_name","","",54,[[],["str"]]],[11,"parse_header","","",54,N],[11,"header_name","","",79,[[],["str"]]],[11,"parse_header","","",79,N],[11,"header_name","","",55,[[],["str"]]],[11,"parse_header","","",55,N],[11,"header_name","","",81,[[],["str"]]],[11,"parse_header","","",81,N],[11,"header_name","","",56,[[],["str"]]],[11,"parse_header","","",56,N],[11,"header_name","","",57,[[],["str"]]],[11,"parse_header","","",57,N],[11,"header_name","","",58,[[],["str"]]],[11,"parse_header","","",58,N],[11,"header_name","","",59,[[],["str"]]],[11,"parse_header","","",59,N],[11,"header_name","","",60,[[],["str"]]],[11,"parse_header","","",60,N],[11,"header_name","","",62,[[],["str"]]],[11,"parse_header","","",62,N],[11,"header_name","","",83,[[],["str"]]],[11,"parse_header","","",83,N],[11,"fmt_header","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt_multi_header","","",57,[[["self"],["multilineformatter"]],["result"]]],[11,"fmt_header","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",83,[[["self"],["formatter"]],["result"]]],[11,"new_message","hyper::http::h1","",95,[[["self"],["str"],["u16"],["str"]],["result",["box"]]]],[11,"set_outgoing","","",94,[[["self"],["requesthead"]],["result",["requesthead"]]]],[11,"get_incoming","","",94,[[["self"]],["result",["responsehead"]]]],[11,"has_body","","",94,[[["self"]],["bool"]]],[11,"set_read_timeout","","",94,[[["self"],["option",["duration"]]],["result"]]],[11,"set_write_timeout","","",94,[[["self"],["option",["duration"]]],["result"]]],[11,"close_connection","","",94,[[["self"]],["result"]]],[11,"set_proxied","","",94,[[["self"],["bool"]]]],[11,"accept","hyper::net","",107,[[["self"]],["result",["httpstream"]]]],[11,"local_addr","","",107,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",107,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","",107,[[["self"],["option",["duration"]]]]],[11,"accept","","",108,[[["self"]],["result"]]],[11,"local_addr","","",108,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",108,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","",108,[[["self"],["option",["duration"]]]]],[11,"peer_addr","hyper::client::pool","",5,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",5,[[["self"],["option",["duration"]]],["result"]]],[11,"set_write_timeout","","",5,[[["self"],["option",["duration"]]],["result"]]],[11,"close","","",5,[[["self"],["shutdown"]],["result"]]],[11,"set_previous_response_expected_no_content","","",5,[[["self"],["bool"]]]],[11,"previous_response_expected_no_content","","",5,[[["self"]],["bool"]]],[11,"peer_addr","hyper::net","",100,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",100,[[["self"],["option",["duration"]]],["result"]]],[11,"set_write_timeout","","",100,[[["self"],["option",["duration"]]],["result"]]],[11,"close","","",100,[[["self"],["shutdown"]],["result"]]],[11,"peer_addr","","",101,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",101,[[["self"],["option",["duration"]]],["result"]]],[11,"set_write_timeout","","",101,[[["self"],["option",["duration"]]],["result"]]],[11,"close","","",101,[[["self"],["shutdown"]],["result"]]],[11,"connect","hyper::client::pool","",4,[[["self"],["str"],["u16"],["str"]],["result",["pooledstream"]]]],[11,"connect","hyper::net","",130,[[["self"],["str"],["u16"],["str"]],["result",["httpstream"]]]],[11,"connect","","",109,[[["self"],["str"],["u16"],["str"]],["result"]]],[11,"next","hyper::header","",126,[[["self"]],["option",["headerview"]]]],[11,"next","hyper::net","",129,[[["self"]],["option",["result"]]]],[11,"partial_cmp","hyper::header","",16,[[["self"],["httpdate"]],["option",["ordering"]]]],[11,"lt","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"le","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"gt","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"ge","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"partial_cmp","","",17,[[["self"],["quality"]],["option",["ordering"]]]],[11,"lt","","",17,[[["self"],["quality"]],["bool"]]],[11,"le","","",17,[[["self"],["quality"]],["bool"]]],[11,"gt","","",17,[[["self"],["quality"]],["bool"]]],[11,"ge","","",17,[[["self"],["quality"]],["bool"]]],[11,"partial_cmp","","",18,[[["self"],["qualityitem"]],["option",["ordering"]]]],[11,"partial_cmp","hyper::status","",115,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"partial_cmp","","",116,[[["self"],["statusclass"]],["option",["ordering"]]]],[11,"partial_cmp","hyper::version","",118,[[["self"],["httpversion"]],["option",["ordering"]]]],[11,"default","hyper::client::pool","",3,[[],["config"]]],[11,"default","hyper::client","",9,[[],["client"]]],[11,"default","","",2,[[],["redirectpolicy"]]],[11,"default","hyper::header","",17,[[],["quality"]]],[11,"default","hyper::net","",130,[[],["httpconnector"]]],[11,"default","","",109,[[],["httpsconnector"]]],[11,"cmp","hyper::header","",16,[[["self"],["httpdate"]],["ordering"]]],[11,"cmp","","",17,[[["self"],["quality"]],["ordering"]]],[11,"cmp","hyper::status","",115,[[["self"],["statuscode"]],["ordering"]]],[11,"cmp","","",116,[[["self"],["statusclass"]],["ordering"]]],[11,"cmp","hyper::version","",118,[[["self"],["httpversion"]],["ordering"]]],[11,"eq","hyper::method","",14,[[["self"],["method"]],["bool"]]],[11,"ne","","",14,[[["self"],["method"]],["bool"]]],[11,"eq","hyper::header","",19,[[["self"],["accept"]],["bool"]]],[11,"ne","","",19,[[["self"],["accept"]],["bool"]]],[11,"eq","","",125,[[["self"],["accesscontrolallowcredentials"]],["bool"]]],[11,"eq","","",20,[[["self"],["accesscontrolallowheaders"]],["bool"]]],[11,"ne","","",20,[[["self"],["accesscontrolallowheaders"]],["bool"]]],[11,"eq","","",21,[[["self"],["accesscontrolallowmethods"]],["bool"]]],[11,"ne","","",21,[[["self"],["accesscontrolallowmethods"]],["bool"]]],[11,"eq","","",66,[[["self"],["accesscontrolalloworigin"]],["bool"]]],[11,"ne","","",66,[[["self"],["accesscontrolalloworigin"]],["bool"]]],[11,"eq","","",22,[[["self"],["accesscontrolexposeheaders"]],["bool"]]],[11,"ne","","",22,[[["self"],["accesscontrolexposeheaders"]],["bool"]]],[11,"eq","","",23,[[["self"],["accesscontrolmaxage"]],["bool"]]],[11,"ne","","",23,[[["self"],["accesscontrolmaxage"]],["bool"]]],[11,"eq","","",24,[[["self"],["accesscontrolrequestheaders"]],["bool"]]],[11,"ne","","",24,[[["self"],["accesscontrolrequestheaders"]],["bool"]]],[11,"eq","","",25,[[["self"],["accesscontrolrequestmethod"]],["bool"]]],[11,"ne","","",25,[[["self"],["accesscontrolrequestmethod"]],["bool"]]],[11,"eq","","",26,[[["self"],["acceptcharset"]],["bool"]]],[11,"ne","","",26,[[["self"],["acceptcharset"]],["bool"]]],[11,"eq","","",27,[[["self"],["acceptencoding"]],["bool"]]],[11,"ne","","",27,[[["self"],["acceptencoding"]],["bool"]]],[11,"eq","","",28,[[["self"],["acceptlanguage"]],["bool"]]],[11,"ne","","",28,[[["self"],["acceptlanguage"]],["bool"]]],[11,"eq","","",29,[[["self"],["acceptranges"]],["bool"]]],[11,"ne","","",29,[[["self"],["acceptranges"]],["bool"]]],[11,"eq","","",67,[[["self"],["rangeunit"]],["bool"]]],[11,"ne","","",67,[[["self"],["rangeunit"]],["bool"]]],[11,"eq","","",30,[[["self"],["allow"]],["bool"]]],[11,"ne","","",30,[[["self"],["allow"]],["bool"]]],[11,"eq","","",31,[[["self"],["authorization"]],["bool"]]],[11,"ne","","",31,[[["self"],["authorization"]],["bool"]]],[11,"eq","","",32,[[["self"],["basic"]],["bool"]]],[11,"ne","","",32,[[["self"],["basic"]],["bool"]]],[11,"eq","","",33,[[["self"],["bearer"]],["bool"]]],[11,"ne","","",33,[[["self"],["bearer"]],["bool"]]],[11,"eq","","",34,[[["self"],["cachecontrol"]],["bool"]]],[11,"ne","","",34,[[["self"],["cachecontrol"]],["bool"]]],[11,"eq","","",68,[[["self"],["cachedirective"]],["bool"]]],[11,"ne","","",68,[[["self"],["cachedirective"]],["bool"]]],[11,"eq","","",42,[[["self"],["cookie"]],["bool"]]],[11,"ne","","",42,[[["self"],["cookie"]],["bool"]]],[11,"eq","","",69,[[["self"],["connectionoption"]],["bool"]]],[11,"ne","","",69,[[["self"],["connectionoption"]],["bool"]]],[11,"eq","","",35,[[["self"],["connection"]],["bool"]]],[11,"ne","","",35,[[["self"],["connection"]],["bool"]]],[11,"eq","","",70,[[["self"],["dispositiontype"]],["bool"]]],[11,"ne","","",70,[[["self"],["dispositiontype"]],["bool"]]],[11,"eq","","",71,[[["self"],["dispositionparam"]],["bool"]]],[11,"ne","","",71,[[["self"],["dispositionparam"]],["bool"]]],[11,"eq","","",36,[[["self"],["contentdisposition"]],["bool"]]],[11,"ne","","",36,[[["self"],["contentdisposition"]],["bool"]]],[11,"eq","","",38,[[["self"],["contentencoding"]],["bool"]]],[11,"ne","","",38,[[["self"],["contentencoding"]],["bool"]]],[11,"eq","","",39,[[["self"],["contentlanguage"]],["bool"]]],[11,"ne","","",39,[[["self"],["contentlanguage"]],["bool"]]],[11,"eq","","",37,[[["self"],["contentlength"]],["bool"]]],[11,"ne","","",37,[[["self"],["contentlength"]],["bool"]]],[11,"eq","","",40,[[["self"],["contentrange"]],["bool"]]],[11,"ne","","",40,[[["self"],["contentrange"]],["bool"]]],[11,"eq","","",72,[[["self"],["contentrangespec"]],["bool"]]],[11,"ne","","",72,[[["self"],["contentrangespec"]],["bool"]]],[11,"eq","","",41,[[["self"],["contenttype"]],["bool"]]],[11,"ne","","",41,[[["self"],["contenttype"]],["bool"]]],[11,"eq","","",43,[[["self"],["date"]],["bool"]]],[11,"ne","","",43,[[["self"],["date"]],["bool"]]],[11,"eq","","",44,[[["self"],["etag"]],["bool"]]],[11,"ne","","",44,[[["self"],["etag"]],["bool"]]],[11,"eq","","",73,[[["self"],["expect"]],["bool"]]],[11,"eq","","",45,[[["self"],["expires"]],["bool"]]],[11,"ne","","",45,[[["self"],["expires"]],["bool"]]],[11,"eq","","",46,[[["self"],["from"]],["bool"]]],[11,"ne","","",46,[[["self"],["from"]],["bool"]]],[11,"eq","","",47,[[["self"],["host"]],["bool"]]],[11,"ne","","",47,[[["self"],["host"]],["bool"]]],[11,"eq","","",74,[[["self"],["ifmatch"]],["bool"]]],[11,"ne","","",74,[[["self"],["ifmatch"]],["bool"]]],[11,"eq","","",48,[[["self"],["ifmodifiedsince"]],["bool"]]],[11,"ne","","",48,[[["self"],["ifmodifiedsince"]],["bool"]]],[11,"eq","","",75,[[["self"],["ifnonematch"]],["bool"]]],[11,"ne","","",75,[[["self"],["ifnonematch"]],["bool"]]],[11,"eq","","",76,[[["self"],["ifrange"]],["bool"]]],[11,"ne","","",76,[[["self"],["ifrange"]],["bool"]]],[11,"eq","","",49,[[["self"],["ifunmodifiedsince"]],["bool"]]],[11,"ne","","",49,[[["self"],["ifunmodifiedsince"]],["bool"]]],[11,"eq","","",50,[[["self"],["lastmodified"]],["bool"]]],[11,"ne","","",50,[[["self"],["lastmodified"]],["bool"]]],[11,"eq","","",51,[[["self"],["location"]],["bool"]]],[11,"ne","","",51,[[["self"],["location"]],["bool"]]],[11,"eq","","",52,[[["self"],["origin"]],["bool"]]],[11,"eq","","",77,[[["self"],["pragma"]],["bool"]]],[11,"ne","","",77,[[["self"],["pragma"]],["bool"]]],[11,"eq","","",53,[[["self"],["prefer"]],["bool"]]],[11,"ne","","",53,[[["self"],["prefer"]],["bool"]]],[11,"eq","","",78,[[["self"],["preference"]],["bool"]]],[11,"ne","","",78,[[["self"],["preference"]],["bool"]]],[11,"eq","","",54,[[["self"],["preferenceapplied"]],["bool"]]],[11,"ne","","",54,[[["self"],["preferenceapplied"]],["bool"]]],[11,"eq","","",79,[[["self"],["range"]],["bool"]]],[11,"ne","","",79,[[["self"],["range"]],["bool"]]],[11,"eq","","",80,[[["self"],["byterangespec"]],["bool"]]],[11,"ne","","",80,[[["self"],["byterangespec"]],["bool"]]],[11,"eq","","",55,[[["self"],["referer"]],["bool"]]],[11,"ne","","",55,[[["self"],["referer"]],["bool"]]],[11,"eq","","",81,[[["self"],["referrerpolicy"]],["bool"]]],[11,"eq","","",56,[[["self"],["server"]],["bool"]]],[11,"ne","","",56,[[["self"],["server"]],["bool"]]],[11,"eq","","",57,[[["self"],["setcookie"]],["bool"]]],[11,"ne","","",57,[[["self"],["setcookie"]],["bool"]]],[11,"eq","","",58,[[["self"],["stricttransportsecurity"]],["bool"]]],[11,"ne","","",58,[[["self"],["stricttransportsecurity"]],["bool"]]],[11,"eq","","",59,[[["self"],["transferencoding"]],["bool"]]],[11,"ne","","",59,[[["self"],["transferencoding"]],["bool"]]],[11,"eq","","",60,[[["self"],["upgrade"]],["bool"]]],[11,"ne","","",60,[[["self"],["upgrade"]],["bool"]]],[11,"eq","","",82,[[["self"],["protocolname"]],["bool"]]],[11,"ne","","",82,[[["self"],["protocolname"]],["bool"]]],[11,"eq","","",61,[[["self"],["protocol"]],["bool"]]],[11,"ne","","",61,[[["self"],["protocol"]],["bool"]]],[11,"eq","","",62,[[["self"],["useragent"]],["bool"]]],[11,"ne","","",62,[[["self"],["useragent"]],["bool"]]],[11,"eq","","",83,[[["self"],["vary"]],["bool"]]],[11,"ne","","",83,[[["self"],["vary"]],["bool"]]],[11,"eq","","",64,[[["self"],["charset"]],["bool"]]],[11,"ne","","",64,[[["self"],["charset"]],["bool"]]],[11,"eq","","",65,[[["self"],["encoding"]],["bool"]]],[11,"ne","","",65,[[["self"],["encoding"]],["bool"]]],[11,"eq","","",15,[[["self"],["entitytag"]],["bool"]]],[11,"ne","","",15,[[["self"],["entitytag"]],["bool"]]],[11,"eq","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"ne","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"eq","","",17,[[["self"],["quality"]],["bool"]]],[11,"ne","","",17,[[["self"],["quality"]],["bool"]]],[11,"eq","","",18,[[["self"],["qualityitem"]],["bool"]]],[11,"ne","","",18,[[["self"],["qualityitem"]],["bool"]]],[11,"eq","hyper::header::parsing","",84,[[["self"],["extendedvalue"]],["bool"]]],[11,"ne","","",84,[[["self"],["extendedvalue"]],["bool"]]],[11,"eq","hyper::header","",88,[[["self"],["headers"]],["bool"]]],[11,"eq","hyper::http","",90,[[["self"],["rawstatus"]],["bool"]]],[11,"ne","","",90,[[["self"],["rawstatus"]],["bool"]]],[11,"eq","hyper::status","",115,[[["self"],["statuscode"]],["bool"]]],[11,"eq","","",116,[[["self"],["statusclass"]],["bool"]]],[11,"eq","hyper::uri","",117,[[["self"],["requesturi"]],["bool"]]],[11,"ne","","",117,[[["self"],["requesturi"]],["bool"]]],[11,"eq","hyper::version","",118,[[["self"],["httpversion"]],["bool"]]],[11,"from","hyper::client","",1,[[["r"]],["body"]]],[11,"from","hyper::error","",13,[[["ioerror"]],["error"]]],[11,"from","","",13,[[["parseerror"]],["error"]]],[11,"from","","",13,[[["utf8error"]],["error"]]],[11,"from","","",13,[[["fromutf8error"]],["error"]]],[11,"from","","",13,[[["error"]],["error"]]],[11,"from","hyper::net","",107,[[["tcplistener"]],["httplistener"]]],[11,"as_ref","hyper::method","",14,[[["self"]],["str"]]],[11,"clone","hyper::client","",2,[[["self"]],["redirectpolicy"]]],[11,"clone","hyper::method","",14,[[["self"]],["method"]]],[11,"clone","hyper::header","",19,[[["self"]],["accept"]]],[11,"clone","","",125,[[["self"]],["accesscontrolallowcredentials"]]],[11,"clone","","",20,[[["self"]],["accesscontrolallowheaders"]]],[11,"clone","","",21,[[["self"]],["accesscontrolallowmethods"]]],[11,"clone","","",66,[[["self"]],["accesscontrolalloworigin"]]],[11,"clone","","",22,[[["self"]],["accesscontrolexposeheaders"]]],[11,"clone","","",23,[[["self"]],["accesscontrolmaxage"]]],[11,"clone","","",24,[[["self"]],["accesscontrolrequestheaders"]]],[11,"clone","","",25,[[["self"]],["accesscontrolrequestmethod"]]],[11,"clone","","",26,[[["self"]],["acceptcharset"]]],[11,"clone","","",27,[[["self"]],["acceptencoding"]]],[11,"clone","","",28,[[["self"]],["acceptlanguage"]]],[11,"clone","","",29,[[["self"]],["acceptranges"]]],[11,"clone","","",67,[[["self"]],["rangeunit"]]],[11,"clone","","",30,[[["self"]],["allow"]]],[11,"clone","","",31,[[["self"]],["authorization"]]],[11,"clone","","",32,[[["self"]],["basic"]]],[11,"clone","","",33,[[["self"]],["bearer"]]],[11,"clone","","",34,[[["self"]],["cachecontrol"]]],[11,"clone","","",68,[[["self"]],["cachedirective"]]],[11,"clone","","",42,[[["self"]],["cookie"]]],[11,"clone","","",69,[[["self"]],["connectionoption"]]],[11,"clone","","",35,[[["self"]],["connection"]]],[11,"clone","","",70,[[["self"]],["dispositiontype"]]],[11,"clone","","",71,[[["self"]],["dispositionparam"]]],[11,"clone","","",36,[[["self"]],["contentdisposition"]]],[11,"clone","","",38,[[["self"]],["contentencoding"]]],[11,"clone","","",39,[[["self"]],["contentlanguage"]]],[11,"clone","","",37,[[["self"]],["contentlength"]]],[11,"clone","","",40,[[["self"]],["contentrange"]]],[11,"clone","","",72,[[["self"]],["contentrangespec"]]],[11,"clone","","",41,[[["self"]],["contenttype"]]],[11,"clone","","",43,[[["self"]],["date"]]],[11,"clone","","",44,[[["self"]],["etag"]]],[11,"clone","","",73,[[["self"]],["expect"]]],[11,"clone","","",45,[[["self"]],["expires"]]],[11,"clone","","",46,[[["self"]],["from"]]],[11,"clone","","",47,[[["self"]],["host"]]],[11,"clone","","",74,[[["self"]],["ifmatch"]]],[11,"clone","","",48,[[["self"]],["ifmodifiedsince"]]],[11,"clone","","",75,[[["self"]],["ifnonematch"]]],[11,"clone","","",76,[[["self"]],["ifrange"]]],[11,"clone","","",49,[[["self"]],["ifunmodifiedsince"]]],[11,"clone","","",50,[[["self"]],["lastmodified"]]],[11,"clone","","",51,[[["self"]],["location"]]],[11,"clone","","",52,[[["self"]],["origin"]]],[11,"clone","","",77,[[["self"]],["pragma"]]],[11,"clone","","",53,[[["self"]],["prefer"]]],[11,"clone","","",78,[[["self"]],["preference"]]],[11,"clone","","",54,[[["self"]],["preferenceapplied"]]],[11,"clone","","",79,[[["self"]],["range"]]],[11,"clone","","",80,[[["self"]],["byterangespec"]]],[11,"clone","","",55,[[["self"]],["referer"]]],[11,"clone","","",81,[[["self"]],["referrerpolicy"]]],[11,"clone","","",56,[[["self"]],["server"]]],[11,"clone","","",57,[[["self"]],["setcookie"]]],[11,"clone","","",58,[[["self"]],["stricttransportsecurity"]]],[11,"clone","","",59,[[["self"]],["transferencoding"]]],[11,"clone","","",60,[[["self"]],["upgrade"]]],[11,"clone","","",82,[[["self"]],["protocolname"]]],[11,"clone","","",61,[[["self"]],["protocol"]]],[11,"clone","","",62,[[["self"]],["useragent"]]],[11,"clone","","",83,[[["self"]],["vary"]]],[11,"clone","","",64,[[["self"]],["charset"]]],[11,"clone","","",65,[[["self"]],["encoding"]]],[11,"clone","","",15,[[["self"]],["entitytag"]]],[11,"clone","","",16,[[["self"]],["httpdate"]]],[11,"clone","","",17,[[["self"]],["quality"]]],[11,"clone","","",18,[[["self"]],["qualityitem"]]],[11,"clone","hyper::header::parsing","",84,[[["self"]],["extendedvalue"]]],[11,"clone","","",127,[[["self"]],["http_value"]]],[11,"clone","hyper::header","",88,[[["self"]],["headers"]]],[11,"clone","hyper::http::message","",96,[[["self"]],["requesthead"]]],[11,"clone","","",97,[[["self"]],["responsehead"]]],[11,"clone","hyper::http","",90,[[["self"]],["rawstatus"]]],[11,"clone","hyper::net","",107,[[["self"]],["httplistener"]]],[11,"clone","","",100,[[["self"]],["httpstream"]]],[11,"clone","","",130,[[["self"]],["httpconnector"]]],[11,"clone","","",101,[[["self"]],["httpsstream"]]],[11,"clone","","",108,[[["self"]],["httpslistener"]]],[11,"clone","hyper::status","",115,[[["self"]],["statuscode"]]],[11,"clone","","",116,[[["self"]],["statusclass"]]],[11,"clone","hyper::uri","",117,[[["self"]],["requesturi"]]],[11,"clone","hyper::version","",118,[[["self"]],["httpversion"]]],[11,"extend","hyper::header","",88,[[["self"],["i"]]]],[11,"drop","hyper::client::pool","",5,[[["self"]]]],[11,"drop","hyper::client::response","",7,[[["self"]]]],[11,"drop","hyper::server::response","",112,[[["self"]]]],[11,"drop","hyper::server","",110,[[["self"]]]],[11,"fmt","hyper::error","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::method","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header::parsing","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::status","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::uri","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::version","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::pool","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::response","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::error","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::method","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header::parsing","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::http::h1","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::http::message","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::http","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::net","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server::response","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::status","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::uri","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::version","",118,[[["self"],["formatter"]],["result"]]],[11,"hash","hyper::method","",14,N],[11,"hash","hyper::status","",115,N],[11,"hash","hyper::version","",118,N],[11,"deref","hyper::header","",19,[[["self"]],["vec"]]],[11,"deref","","",20,[[["self"]],["vec"]]],[11,"deref","","",21,[[["self"]],["vec"]]],[11,"deref","","",22,[[["self"]],["vec"]]],[11,"deref","","",23,[[["self"]],["u32"]]],[11,"deref","","",24,[[["self"]],["vec"]]],[11,"deref","","",25,[[["self"]],["method"]]],[11,"deref","","",26,[[["self"]],["vec"]]],[11,"deref","","",27,[[["self"]],["vec"]]],[11,"deref","","",28,[[["self"]],["vec"]]],[11,"deref","","",29,[[["self"]],["vec"]]],[11,"deref","","",30,[[["self"]],["vec"]]],[11,"deref","","",31,[[["self"]],["s"]]],[11,"deref","","",34,[[["self"]],["vec"]]],[11,"deref","","",42,[[["self"]],["vec"]]],[11,"deref","","",35,[[["self"]],["vec"]]],[11,"deref","","",38,[[["self"]],["vec"]]],[11,"deref","","",39,[[["self"]],["vec"]]],[11,"deref","","",37,[[["self"]],["u64"]]],[11,"deref","","",40,[[["self"]],["contentrangespec"]]],[11,"deref","","",41,[[["self"]],["mime"]]],[11,"deref","","",43,[[["self"]],["httpdate"]]],[11,"deref","","",44,[[["self"]],["entitytag"]]],[11,"deref","","",45,[[["self"]],["httpdate"]]],[11,"deref","","",46,[[["self"]],["string"]]],[11,"deref","","",48,[[["self"]],["httpdate"]]],[11,"deref","","",49,[[["self"]],["httpdate"]]],[11,"deref","","",50,[[["self"]],["httpdate"]]],[11,"deref","","",51,[[["self"]],["string"]]],[11,"deref","","",53,[[["self"]],["vec"]]],[11,"deref","","",54,[[["self"]],["vec"]]],[11,"deref","","",55,[[["self"]],["string"]]],[11,"deref","","",56,[[["self"]],["string"]]],[11,"deref","","",57,[[["self"]],["vec"]]],[11,"deref","","",59,[[["self"]],["vec"]]],[11,"deref","","",60,[[["self"]],["vec"]]],[11,"deref","","",62,[[["self"]],["string"]]],[11,"deref_mut","","",19,[[["self"]],["vec"]]],[11,"deref_mut","","",20,[[["self"]],["vec"]]],[11,"deref_mut","","",21,[[["self"]],["vec"]]],[11,"deref_mut","","",22,[[["self"]],["vec"]]],[11,"deref_mut","","",23,[[["self"]],["u32"]]],[11,"deref_mut","","",24,[[["self"]],["vec"]]],[11,"deref_mut","","",25,[[["self"]],["method"]]],[11,"deref_mut","","",26,[[["self"]],["vec"]]],[11,"deref_mut","","",27,[[["self"]],["vec"]]],[11,"deref_mut","","",28,[[["self"]],["vec"]]],[11,"deref_mut","","",29,[[["self"]],["vec"]]],[11,"deref_mut","","",30,[[["self"]],["vec"]]],[11,"deref_mut","","",31,[[["self"]],["s"]]],[11,"deref_mut","","",34,[[["self"]],["vec"]]],[11,"deref_mut","","",42,[[["self"]],["vec"]]],[11,"deref_mut","","",35,[[["self"]],["vec"]]],[11,"deref_mut","","",38,[[["self"]],["vec"]]],[11,"deref_mut","","",39,[[["self"]],["vec"]]],[11,"deref_mut","","",37,[[["self"]],["u64"]]],[11,"deref_mut","","",40,[[["self"]],["contentrangespec"]]],[11,"deref_mut","","",41,[[["self"]],["mime"]]],[11,"deref_mut","","",43,[[["self"]],["httpdate"]]],[11,"deref_mut","","",44,[[["self"]],["entitytag"]]],[11,"deref_mut","","",45,[[["self"]],["httpdate"]]],[11,"deref_mut","","",46,[[["self"]],["string"]]],[11,"deref_mut","","",48,[[["self"]],["httpdate"]]],[11,"deref_mut","","",49,[[["self"]],["httpdate"]]],[11,"deref_mut","","",50,[[["self"]],["httpdate"]]],[11,"deref_mut","","",51,[[["self"]],["string"]]],[11,"deref_mut","","",53,[[["self"]],["vec"]]],[11,"deref_mut","","",54,[[["self"]],["vec"]]],[11,"deref_mut","","",55,[[["self"]],["string"]]],[11,"deref_mut","","",56,[[["self"]],["string"]]],[11,"deref_mut","","",57,[[["self"]],["vec"]]],[11,"deref_mut","","",59,[[["self"]],["vec"]]],[11,"deref_mut","","",60,[[["self"]],["vec"]]],[11,"deref_mut","","",62,[[["self"]],["string"]]],[11,"from_iter","","",88,[[["i"]],["headers"]]],[11,"from_str","hyper::method","",14,[[["str"]],["result",["method","error"]]]],[11,"from_str","hyper::header","",67,[[["str"]],["result"]]],[11,"from_str","","",32,[[["str"]],["result",["basic"]]]],[11,"from_str","","",33,[[["str"]],["result",["bearer"]]]],[11,"from_str","","",68,[[["str"]],["result",["cachedirective","option"]]]],[11,"from_str","","",69,[[["str"]],["result",["connectionoption"]]]],[11,"from_str","","",72,[[["str"]],["result"]]],[11,"from_str","","",47,[[["str"]],["result",["host"]]]],[11,"from_str","","",52,[[["str"]],["result",["origin"]]]],[11,"from_str","","",78,[[["str"]],["result",["preference","option"]]]],[11,"from_str","","",79,[[["str"]],["result",["range"]]]],[11,"from_str","","",80,[[["str"]],["result",["byterangespec"]]]],[11,"from_str","","",58,[[["str"]],["result",["stricttransportsecurity"]]]],[11,"from_str","","",82,[[["str"]],["result",["protocolname"]]]],[11,"from_str","","",61,[[["str"]],["result",["protocol"]]]],[11,"from_str","","",64,[[["str"]],["result",["charset"]]]],[11,"from_str","","",65,[[["str"]],["result",["encoding"]]]],[11,"from_str","","",15,[[["str"]],["result",["entitytag"]]]],[11,"from_str","","",16,[[["str"]],["result",["httpdate"]]]],[11,"from_str","","",18,[[["str"]],["result",["qualityitem"]]]],[11,"from_str","hyper::uri","",117,[[["str"]],["result",["requesturi","error"]]]],[11,"write","hyper::client::pool","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"write","hyper::client::request","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","hyper::http::h1","",94,N],[11,"flush","","",94,[[["self"]],["result"]]],[11,"write","","",93,N],[11,"flush","","",93,[[["self"]],["result"]]],[11,"write","hyper::net","",100,N],[11,"flush","","",100,[[["self"]],["result"]]],[11,"write","","",101,N],[11,"flush","","",101,[[["self"]],["result"]]],[11,"write","hyper::server::response","",112,N],[11,"flush","","",112,[[["self"]],["result"]]],[11,"read","hyper::client::pool","",5,N],[11,"read","hyper::client::response","",7,N],[11,"read","hyper::client","",1,N],[11,"read","hyper::http::h1","",94,N],[11,"read","","",92,N],[11,"read","hyper::net","",100,N],[11,"read","","",101,N],[11,"read","hyper::server::request","",111,N],[11,"description","hyper::error","",13,[[["self"]],["str"]]],[11,"cause","","",13,[[["self"]],["option",["stderror"]]]],[11,"from_raw_fd","hyper::net","",107,[[["rawfd"]],["httplistener"]]],[11,"from_raw_fd","","",100,[[["rawfd"]],["httpstream"]]],[11,"as_raw_fd","","",107,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",100,[[["self"]],["rawfd"]]],[11,"contains","hyper::header::parsing","",127,[[["self"],["u8"]],["bool"]]],[11,"parse","hyper","Parse an absolute URL from a string.",124,[[["str"]],["result",["url","parseerror"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its query string.",124,[[["str"],["i"]],["result",["url","parseerror"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",124,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",124,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",124,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",124,[[["self"]],["string"]]],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",124,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.",124,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can contain a username, password, host, and port number.",124,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL as the base will return an error.",124,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.",124,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",124,[[["self"]],["option",["str"]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",124,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",124,[[["self"]],["option",["str"]]]],[11,"host","","Return the parsed representation of the host for this URL. Non-ASCII domain labels are punycode-encoded per IDNA.",124,[[["self"]],["option",["host"]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",124,[[["self"]],["option",["str"]]]],[11,"port","","Return the port number for this URL, if any.",124,[[["self"]],["option",["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",124,[[["self"]],["option",["u16"]]]],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",124,[[["self"],["f"]],["result",["hostandport","error"]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with '/'. For other URLs, this starts with a '/' slash and continues with slash-separated path segments.",124,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of '/' slash-separated path segments, each as a percent-encoded ASCII string.",124,[[["self"]],["option",["split"]]]],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",124,[[["self"]],["option",["str"]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded` and return an iterator of (key, value) pairs.",124,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",124,[[["self"]],["option",["str"]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",124,N],[11,"set_query","","Change this URL’s query string.",124,N],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs in `application/x-www-form-urlencoded` syntax.",124,[[["self"]],["serializer",["urlquery"]]]],[11,"set_path","","Change this URL’s path.",124,N],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",124,[[["self"]],["result",["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",124,[[["self"],["option",["u16"]]],["result"]]],[11,"set_host","","Change this URL’s host.",124,[[["self"],["option",["str"]]],["result",["parseerror"]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",124,[[["self"],["ipaddr"]],["result"]]],[11,"set_password","","Change this URL’s password.",124,[[["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",124,[[["self"],["str"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",124,[[["self"],["str"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",124,[[["p"]],["result",["url"]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",124,[[["p"]],["result",["url"]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar, convert its path to an absolute `std::path::Path`.",124,[[["self"]],["result",["pathbuf"]]]],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used as a normal language tag. None fields in the language range are ignored. If the language tag has more extlangs than the range these extlangs are ignored. Matches are case-insensitive. `*` in language ranges are represented using `None` values. The language range `*` that matches language tags is created by the default language tag: `let wildcard: LanguageTag = Default::default();.`",0,[[["self"],["languagetag"]],["bool"]]],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,[[["self"]],["bool"]]],[11,"canonicalize","","Returns the canonical version of the language tag.",0,[[["self"]],["languagetag"]]],[11,"get_param","hyper::mime","",119,[[["self"],["a"]],["option",["value"]]]],[11,"as_str","","",120,[[["self"]],["str"]]],[11,"as_str","","",121,[[["self"]],["str"]]],[11,"as_str","","",122,[[["self"]],["str"]]],[11,"as_str","","",123,[[["self"]],["str"]]]],"paths":[[3,"LanguageTag"],[4,"Body"],[4,"RedirectPolicy"],[3,"Config"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[8,"IntoUrl"],[3,"Client"],[3,"RequestBuilder"],[3,"ProxyConfig"],[4,"ParseError"],[4,"Error"],[4,"Method"],[3,"EntityTag"],[3,"HttpDate"],[3,"Quality"],[3,"QualityItem"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentLength"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentRange"],[3,"ContentType"],[3,"Cookie"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"Host"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Origin"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"UserAgent"],[3,"HeaderFormatter"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[4,"ProtocolName"],[4,"Vary"],[3,"ExtendedValue"],[8,"Scheme"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"HeaderView"],[3,"RawStatus"],[3,"Incoming"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Http11Message"],[3,"Http11Protocol"],[3,"RequestHead"],[3,"ResponseHead"],[8,"Protocol"],[8,"HttpMessage"],[3,"HttpStream"],[4,"HttpsStream"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[8,"SslClient"],[8,"SslServer"],[3,"HttpListener"],[3,"HttpsListener"],[3,"HttpsConnector"],[3,"Listening"],[3,"Request"],[3,"Response"],[8,"Handler"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Url"],[3,"AccessControlAllowCredentials"],[3,"HeadersItems"],[3,"HTTP_VALUE"],[3,"EndError"],[3,"NetworkConnections"],[3,"HttpConnector"],[4,"Fresh"],[4,"Streaming"]]};
searchIndex["hyper_native_tls"]={"doc":"SSL support for Hyper via the native-tls crate.","items":[[3,"TlsStream","hyper_native_tls","A Hyper stream using native_tls.",N,N],[3,"NativeTlsClient","","An `SslClient` implementation using native-tls.",N,N],[3,"NativeTlsServer","","An `SslServer` implementation using native-tls.",N,N],[4,"ServerError","","An error creating a `NativeTlsServer`.",N,N],[13,"Io","","An error reading the identity file.",0,N],[13,"Tls","","An error initializing the acceptor.",0,N],[11,"new","","Returns a `NativeTlsClient` with a default configuration.",1,[[],["result",["nativetlsclient"]]]],[11,"new","","Returns a `NativeTlsServer` with a default configuration.",2,[[["p"],["str"]],["result",["nativetlsserver","servererror"]]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"from","","",1,[[["tlsconnector"]],["nativetlsclient"]]],[11,"from","","",2,[[["tlsacceptor"]],["nativetlsserver"]]],[11,"clone","","",3,[[["self"]],["tlsstream"]]],[11,"clone","","",2,[[["self"]],["nativetlsserver"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"read","","",3,N],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"wrap_client","","",1,[[["self"],["t"],["str"]],["result",["tlsstream"]]]],[11,"peer_addr","","",3,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",3,[[["self"],["option",["duration"]]],["result"]]],[11,"set_write_timeout","","",3,[[["self"],["option",["duration"]]],["result"]]],[11,"wrap_server","","",2,[[["self"],["t"]],["result",["tlsstream"]]]]],"paths":[[4,"ServerError"],[3,"NativeTlsClient"],[3,"NativeTlsServer"],[3,"TlsStream"]]};
searchIndex["idna"]={"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","items":[[5,"domain_to_ascii","idna","The domain to ASCII algorithm.",N,[[["str"]],["result",["string","errors"]]]],[5,"domain_to_unicode","","The domain to Unicode algorithm.",N,N],[0,"punycode","","Punycode (RFC 3492) implementation.",N,N],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",N,[[["str"]],["option",["string"]]]],[5,"decode","","Convert Punycode to Unicode.",N,[[["str"]],["option",["vec"]]]],[5,"encode_str","","Convert an Unicode `str` to Punycode.",N,[[["str"]],["option",["string"]]]],[5,"encode","","Convert Unicode to Punycode.",N,N],[0,"uts46","idna","Unicode IDNA Compatibility Processing (Unicode Technical Standard #46)",N,N],[3,"Flags","idna::uts46","",N,N],[12,"use_std3_ascii_rules","","",0,N],[12,"transitional_processing","","",0,N],[12,"verify_dns_length","","",0,N],[3,"Errors","","Errors recorded during UTS #46 processing.",N,N],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",N,[[["str"],["flags"]],["result",["string","errors"]]]],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"clone","","",0,[[["self"]],["flags"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["itoa"]={"doc":"","items":[[5,"write","itoa","",N,[[["w"],["v"]],["result",["usize"]]]],[8,"Integer","","",N,N],[10,"write","","",0,[[["self"],["w"]],["result",["usize"]]]]],"paths":[[8,"Integer"]]};
searchIndex["language_tags"]={"doc":"Language tags can be used identify human languages, scripts e.g. Latin script, countries and other regions.","items":[[3,"LanguageTag","language_tags","A language tag as described in BCP47.",N,N],[12,"language","","Language subtags are used to indicate the language, ignoring all other aspects such as script, region or spefic invariants.",0,N],[12,"extlangs","","Extended language subtags are used to identify certain specially selected languages that, for various historical and compatibility reasons, are closely identified with or tagged using an existing primary language subtag.",0,N],[12,"script","","Script subtags are used to indicate the script or writing system variations that distinguish the written forms of a language or its dialects.",0,N],[12,"region","","Region subtags are used to indicate linguistic variations associated with or appropriate to a specific country, territory, or region. Typically, a region subtag is used to indicate variations such as regional dialects or usage, or region-specific spelling conventions. It can also be used to indicate that content is expressed in a way that is appropriate for use throughout a region, for instance, Spanish content tailored to be useful throughout Latin America.",0,N],[12,"variants","","Variant subtags are used to indicate additional, well-recognized variations that define a language or its dialects that are not covered by other available subtags.",0,N],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in various applications.  They are intended to identify information that is commonly used in association with languages or language tags but that is not part of language identification.",0,N],[12,"privateuse","","Private use subtags are used to indicate distinctions in language that are important in a given context by private agreement.",0,N],[4,"Error","","Defines an Error type for langtags.",N,N],[13,"DuplicateExtension","","The same extension subtag is only allowed once in a tag before the private use part.",1,N],[13,"EmptyExtension","","If an extension subtag is present, it must not be empty.",1,N],[13,"EmptyPrivateUse","","If the `x` subtag is present, it must not be empty.",1,N],[13,"ForbiddenChar","","The langtag contains a char that is not A-Z, a-z, 0-9 or the dash.",1,N],[13,"InvalidSubtag","","A subtag fails to parse, it does not match any other subtags.",1,N],[13,"InvalidLanguage","","The given language subtag is invalid.",1,N],[13,"SubtagTooLong","","A subtag may be eight characters in length at maximum.",1,N],[13,"TooManyExtlangs","","At maximum three extlangs are allowed, but zero to one extlangs are preferred.",1,N],[6,"Result","","Result type used for this library.",N,N],[17,"GRANDFATHERED","","Contains all grandfathered tags.",N,N],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used as a normal language tag. None fields in the language range are ignored. If the language tag has more extlangs than the range these extlangs are ignored. Matches are case-insensitive. `*` in language ranges are represented using `None` values. The language range `*` that matches language tags is created by the default language tag: `let wildcard: LanguageTag = Default::default();.`",0,[[["self"],["languagetag"]],["bool"]]],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,[[["self"]],["bool"]]],[11,"canonicalize","","Returns the canonical version of the language tag.",0,[[["self"]],["languagetag"]]],[14,"langtag","","Utility for creating simple language tags.",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"default","","",0,[[],["languagetag"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","","",0,[[["self"],["languagetag"]],["bool"]]],[11,"clone","","",0,[[["self"]],["languagetag"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[3,"LanguageTag"],[4,"Error"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"Crate docs","items":[[3,"group","libc","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",16,N],[12,"sa_data","","",16,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",17,N],[12,"sin_port","","",17,N],[12,"sin_addr","","",17,N],[12,"sin_zero","","",17,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",18,N],[12,"sin6_port","","",18,N],[12,"sin6_flowinfo","","",18,N],[12,"sin6_addr","","",18,N],[12,"sin6_scope_id","","",18,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",19,N],[12,"sun_path","","",19,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",20,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",21,N],[12,"ai_family","","",21,N],[12,"ai_socktype","","",21,N],[12,"ai_protocol","","",21,N],[12,"ai_addrlen","","",21,N],[12,"ai_addr","","",21,N],[12,"ai_canonname","","",21,N],[12,"ai_next","","",21,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",22,N],[12,"nl_pid","","",22,N],[12,"nl_groups","","",22,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",23,N],[12,"sll_protocol","","",23,N],[12,"sll_ifindex","","",23,N],[12,"sll_hatype","","",23,N],[12,"sll_pkttype","","",23,N],[12,"sll_halen","","",23,N],[12,"sll_addr","","",23,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",24,N],[12,"tm_min","","",24,N],[12,"tm_hour","","",24,N],[12,"tm_mday","","",24,N],[12,"tm_mon","","",24,N],[12,"tm_year","","",24,N],[12,"tm_wday","","",24,N],[12,"tm_yday","","",24,N],[12,"tm_isdst","","",24,N],[12,"tm_gmtoff","","",24,N],[12,"tm_zone","","",24,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",25,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",26,N],[12,"dli_fbase","","",26,N],[12,"dli_sname","","",26,N],[12,"dli_saddr","","",26,N],[3,"epoll_event","","",N,N],[12,"events","","",27,N],[12,"u64","","",27,N],[3,"utsname","","",N,N],[12,"sysname","","",28,N],[12,"nodename","","",28,N],[12,"release","","",28,N],[12,"version","","",28,N],[12,"machine","","",28,N],[12,"domainname","","",28,N],[3,"lconv","","",N,N],[12,"decimal_point","","",29,N],[12,"thousands_sep","","",29,N],[12,"grouping","","",29,N],[12,"int_curr_symbol","","",29,N],[12,"currency_symbol","","",29,N],[12,"mon_decimal_point","","",29,N],[12,"mon_thousands_sep","","",29,N],[12,"mon_grouping","","",29,N],[12,"positive_sign","","",29,N],[12,"negative_sign","","",29,N],[12,"int_frac_digits","","",29,N],[12,"frac_digits","","",29,N],[12,"p_cs_precedes","","",29,N],[12,"p_sep_by_space","","",29,N],[12,"n_cs_precedes","","",29,N],[12,"n_sep_by_space","","",29,N],[12,"p_sign_posn","","",29,N],[12,"n_sign_posn","","",29,N],[12,"int_p_cs_precedes","","",29,N],[12,"int_p_sep_by_space","","",29,N],[12,"int_n_cs_precedes","","",29,N],[12,"int_n_sep_by_space","","",29,N],[12,"int_p_sign_posn","","",29,N],[12,"int_n_sign_posn","","",29,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",30,N],[12,"sigev_signo","","",30,N],[12,"sigev_notify","","",30,N],[12,"sigev_notify_thread_id","","",30,N],[3,"dirent","","",N,N],[12,"d_ino","","",31,N],[12,"d_off","","",31,N],[12,"d_reclen","","",31,N],[12,"d_type","","",31,N],[12,"d_name","","",31,N],[3,"dirent64","","",N,N],[12,"d_ino","","",32,N],[12,"d_off","","",32,N],[12,"d_reclen","","",32,N],[12,"d_type","","",32,N],[12,"d_name","","",32,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",33,N],[12,"rlim_max","","",33,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",34,N],[12,"gl_pathv","","",34,N],[12,"gl_offs","","",34,N],[12,"gl_flags","","",34,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",35,N],[12,"ifa_name","","",35,N],[12,"ifa_flags","","",35,N],[12,"ifa_addr","","",35,N],[12,"ifa_netmask","","",35,N],[12,"ifa_ifu","","",35,N],[12,"ifa_data","","",35,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"passwd","","",N,N],[12,"pw_name","","",36,N],[12,"pw_passwd","","",36,N],[12,"pw_uid","","",36,N],[12,"pw_gid","","",36,N],[12,"pw_gecos","","",36,N],[12,"pw_dir","","",36,N],[12,"pw_shell","","",36,N],[3,"spwd","","",N,N],[12,"sp_namp","","",37,N],[12,"sp_pwdp","","",37,N],[12,"sp_lstchg","","",37,N],[12,"sp_min","","",37,N],[12,"sp_max","","",37,N],[12,"sp_warn","","",37,N],[12,"sp_inact","","",37,N],[12,"sp_expire","","",37,N],[12,"sp_flag","","",37,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",38,N],[12,"f_frsize","","",38,N],[12,"f_blocks","","",38,N],[12,"f_bfree","","",38,N],[12,"f_bavail","","",38,N],[12,"f_files","","",38,N],[12,"f_ffree","","",38,N],[12,"f_favail","","",38,N],[12,"f_fsid","","",38,N],[12,"f_flag","","",38,N],[12,"f_namemax","","",38,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",39,N],[12,"dqb_bsoftlimit","","",39,N],[12,"dqb_curspace","","",39,N],[12,"dqb_ihardlimit","","",39,N],[12,"dqb_isoftlimit","","",39,N],[12,"dqb_curinodes","","",39,N],[12,"dqb_btime","","",39,N],[12,"dqb_itime","","",39,N],[12,"dqb_valid","","",39,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",40,N],[12,"ssi_errno","","",40,N],[12,"ssi_code","","",40,N],[12,"ssi_pid","","",40,N],[12,"ssi_uid","","",40,N],[12,"ssi_fd","","",40,N],[12,"ssi_tid","","",40,N],[12,"ssi_band","","",40,N],[12,"ssi_overrun","","",40,N],[12,"ssi_trapno","","",40,N],[12,"ssi_status","","",40,N],[12,"ssi_int","","",40,N],[12,"ssi_ptr","","",40,N],[12,"ssi_utime","","",40,N],[12,"ssi_stime","","",40,N],[12,"ssi_addr","","",40,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",41,N],[12,"mq_maxmsg","","",41,N],[12,"mq_msgsize","","",41,N],[12,"mq_curmsgs","","",41,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",42,N],[12,"if_name","","",42,N],[3,"msginfo","","",N,N],[12,"msgpool","","",43,N],[12,"msgmap","","",43,N],[12,"msgmax","","",43,N],[12,"msgmnb","","",43,N],[12,"msgmni","","",43,N],[12,"msgssz","","",43,N],[12,"msgtql","","",43,N],[12,"msgseg","","",43,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",44,N],[12,"msg_len","","",44,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",45,N],[12,"aio_lio_opcode","","",45,N],[12,"aio_reqprio","","",45,N],[12,"aio_buf","","",45,N],[12,"aio_nbytes","","",45,N],[12,"aio_sigevent","","",45,N],[12,"aio_offset","","",45,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",46,N],[12,"e_exit","","",46,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",47,N],[12,"tv_usec","","",47,N],[3,"utmpx","","",N,N],[12,"ut_type","","",48,N],[12,"ut_pid","","",48,N],[12,"ut_line","","",48,N],[12,"ut_id","","",48,N],[12,"ut_user","","",48,N],[12,"ut_host","","",48,N],[12,"ut_exit","","",48,N],[12,"ut_session","","",48,N],[12,"ut_tv","","",48,N],[12,"ut_addr_v6","","",48,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",49,N],[12,"sa_mask","","",49,N],[12,"sa_flags","","",49,N],[12,"sa_restorer","","",49,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",50,N],[12,"ss_flags","","",50,N],[12,"ss_size","","",50,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",51,N],[12,"si_errno","","",51,N],[12,"si_code","","",51,N],[12,"_pad","","",51,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",52,N],[12,"gl_pathv","","",52,N],[12,"gl_offs","","",52,N],[12,"gl_flags","","",52,N],[3,"ucred","","",N,N],[12,"pid","","",53,N],[12,"uid","","",53,N],[12,"gid","","",53,N],[3,"statfs","","",N,N],[12,"f_type","","",54,N],[12,"f_bsize","","",54,N],[12,"f_blocks","","",54,N],[12,"f_bfree","","",54,N],[12,"f_bavail","","",54,N],[12,"f_files","","",54,N],[12,"f_ffree","","",54,N],[12,"f_fsid","","",54,N],[12,"f_namelen","","",54,N],[12,"f_frsize","","",54,N],[3,"msghdr","","",N,N],[12,"msg_name","","",55,N],[12,"msg_namelen","","",55,N],[12,"msg_iov","","",55,N],[12,"msg_iovlen","","",55,N],[12,"msg_control","","",55,N],[12,"msg_controllen","","",55,N],[12,"msg_flags","","",55,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",56,N],[12,"cmsg_level","","",56,N],[12,"cmsg_type","","",56,N],[3,"termios","","",N,N],[12,"c_iflag","","",57,N],[12,"c_oflag","","",57,N],[12,"c_cflag","","",57,N],[12,"c_lflag","","",57,N],[12,"c_line","","",57,N],[12,"c_cc","","",57,N],[12,"c_ispeed","","",57,N],[12,"c_ospeed","","",57,N],[3,"flock","","",N,N],[12,"l_type","","",58,N],[12,"l_whence","","",58,N],[12,"l_start","","",58,N],[12,"l_len","","",58,N],[12,"l_pid","","",58,N],[3,"sem_t","","",N,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",59,N],[12,"loads","","",59,N],[12,"totalram","","",59,N],[12,"freeram","","",59,N],[12,"sharedram","","",59,N],[12,"bufferram","","",59,N],[12,"totalswap","","",59,N],[12,"freeswap","","",59,N],[12,"procs","","",59,N],[12,"pad","","",59,N],[12,"totalhigh","","",59,N],[12,"freehigh","","",59,N],[12,"mem_unit","","",59,N],[12,"_f","","",59,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",60,N],[12,"msg_stime","","",60,N],[12,"msg_rtime","","",60,N],[12,"msg_ctime","","",60,N],[12,"msg_qnum","","",60,N],[12,"msg_qbytes","","",60,N],[12,"msg_lspid","","",60,N],[12,"msg_lrpid","","",60,N],[3,"stat","","",N,N],[12,"st_dev","","",61,N],[12,"st_ino","","",61,N],[12,"st_nlink","","",61,N],[12,"st_mode","","",61,N],[12,"st_uid","","",61,N],[12,"st_gid","","",61,N],[12,"st_rdev","","",61,N],[12,"st_size","","",61,N],[12,"st_blksize","","",61,N],[12,"st_blocks","","",61,N],[12,"st_atime","","",61,N],[12,"st_atime_nsec","","",61,N],[12,"st_mtime","","",61,N],[12,"st_mtime_nsec","","",61,N],[12,"st_ctime","","",61,N],[12,"st_ctime_nsec","","",61,N],[3,"stat64","","",N,N],[12,"st_dev","","",62,N],[12,"st_ino","","",62,N],[12,"st_nlink","","",62,N],[12,"st_mode","","",62,N],[12,"st_uid","","",62,N],[12,"st_gid","","",62,N],[12,"st_rdev","","",62,N],[12,"st_size","","",62,N],[12,"st_blksize","","",62,N],[12,"st_blocks","","",62,N],[12,"st_atime","","",62,N],[12,"st_atime_nsec","","",62,N],[12,"st_mtime","","",62,N],[12,"st_mtime_nsec","","",62,N],[12,"st_ctime","","",62,N],[12,"st_ctime_nsec","","",62,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",63,N],[12,"exponent","","",63,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",64,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",65,N],[12,"swd","","",65,N],[12,"ftw","","",65,N],[12,"fop","","",65,N],[12,"rip","","",65,N],[12,"rdp","","",65,N],[12,"mxcsr","","",65,N],[12,"mxcr_mask","","",65,N],[12,"_st","","",65,N],[12,"_xmm","","",65,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",66,N],[12,"fpregs","","",66,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",67,N],[12,"uc_link","","",67,N],[12,"uc_stack","","",67,N],[12,"uc_mcontext","","",67,N],[12,"uc_sigmask","","",67,N],[3,"ipc_perm","","",N,N],[12,"__key","","",68,N],[12,"uid","","",68,N],[12,"gid","","",68,N],[12,"cuid","","",68,N],[12,"cgid","","",68,N],[12,"mode","","",68,N],[12,"__seq","","",68,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",69,N],[12,"shm_segsz","","",69,N],[12,"shm_atime","","",69,N],[12,"shm_dtime","","",69,N],[12,"shm_ctime","","",69,N],[12,"shm_cpid","","",69,N],[12,"shm_lpid","","",69,N],[12,"shm_nattch","","",69,N],[4,"c_void","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getgrnam","","",N,N],[5,"getgrgid","","",N,N],[5,"endpwent","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"popen","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"faccessat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"getdtablesize","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_create","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_atfork","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"pthread_kill","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"sigaltstack","","",N,N],[5,"sigwait","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"localtime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"daemon","","",N,N],[5,"gethostname","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_open","","",N,N],[5,"sem_close","","",N,N],[5,"sem_unlink","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"clock_settime","","",N,N],[5,"prctl","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"initgroups","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_ctl","","",N,N],[5,"epoll_wait","","",N,N],[5,"pipe2","","",N,N],[5,"mount","","",N,N],[5,"umount","","",N,N],[5,"umount2","","",N,N],[5,"clone","","",N,N],[5,"statfs","","",N,N],[5,"fstatfs","","",N,N],[5,"memrchr","","",N,N],[5,"syscall","","",N,N],[5,"sendfile","","",N,N],[5,"splice","","",N,N],[5,"tee","","",N,N],[5,"vmsplice","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"pwrite64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"eventfd","","",N,N],[5,"sysinfo","","",N,N],[5,"fdopendir","","",N,N],[5,"mknodat","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"unshare","","",N,N],[5,"setns","","",N,N],[5,"sem_timedwait","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"posix_fallocate","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"sethostname","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"openpty","","",N,N],[5,"forkpty","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"sysctl","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"loff_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"mqd_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"__priority_which_t","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"IPPROTO_RAW","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"IUTF8","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"ENOATTR","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_ALG","","",N,N],[17,"SOL_NFC","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["sockaddr"]]],[11,"clone","","",17,[[["self"]],["sockaddr_in"]]],[11,"clone","","",18,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",19,[[["self"]],["sockaddr_un"]]],[11,"clone","","",20,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",21,[[["self"]],["addrinfo"]]],[11,"clone","","",22,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",23,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",70,[[["self"]],["fd_set"]]],[11,"clone","","",24,[[["self"]],["tm"]]],[11,"clone","","",25,[[["self"]],["sched_param"]]],[11,"clone","","",26,[[["self"]],["dl_info"]]],[11,"clone","","",27,[[["self"]],["epoll_event"]]],[11,"clone","","",28,[[["self"]],["utsname"]]],[11,"clone","","",29,[[["self"]],["lconv"]]],[11,"clone","","",30,[[["self"]],["sigevent"]]],[11,"clone","","",31,[[["self"]],["dirent"]]],[11,"clone","","",32,[[["self"]],["dirent64"]]],[11,"clone","","",33,[[["self"]],["rlimit64"]]],[11,"clone","","",34,[[["self"]],["glob_t"]]],[11,"clone","","",35,[[["self"]],["ifaddrs"]]],[11,"clone","","",71,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",72,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",73,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",74,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",75,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",36,[[["self"]],["passwd"]]],[11,"clone","","",37,[[["self"]],["spwd"]]],[11,"clone","","",38,[[["self"]],["statvfs"]]],[11,"clone","","",39,[[["self"]],["dqblk"]]],[11,"clone","","",40,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",76,[[["self"]],["fsid_t"]]],[11,"clone","","",41,[[["self"]],["mq_attr"]]],[11,"clone","","",77,[[["self"]],["cpu_set_t"]]],[11,"clone","","",42,[[["self"]],["if_nameindex"]]],[11,"clone","","",43,[[["self"]],["msginfo"]]],[11,"clone","","",44,[[["self"]],["mmsghdr"]]],[11,"clone","","",45,[[["self"]],["aiocb"]]],[11,"clone","","",46,[[["self"]],["__exit_status"]]],[11,"clone","","",47,[[["self"]],["__timeval"]]],[11,"clone","","",48,[[["self"]],["utmpx"]]],[11,"clone","","",49,[[["self"]],["sigaction"]]],[11,"clone","","",50,[[["self"]],["stack_t"]]],[11,"clone","","",51,[[["self"]],["siginfo_t"]]],[11,"clone","","",52,[[["self"]],["glob64_t"]]],[11,"clone","","",53,[[["self"]],["ucred"]]],[11,"clone","","",54,[[["self"]],["statfs"]]],[11,"clone","","",55,[[["self"]],["msghdr"]]],[11,"clone","","",56,[[["self"]],["cmsghdr"]]],[11,"clone","","",57,[[["self"]],["termios"]]],[11,"clone","","",58,[[["self"]],["flock"]]],[11,"clone","","",78,[[["self"]],["sem_t"]]],[11,"clone","","",79,[[["self"]],["sigset_t"]]],[11,"clone","","",59,[[["self"]],["sysinfo"]]],[11,"clone","","",60,[[["self"]],["msqid_ds"]]],[11,"clone","","",61,[[["self"]],["stat"]]],[11,"clone","","",62,[[["self"]],["stat64"]]],[11,"clone","","",80,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",63,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",64,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",65,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",66,[[["self"]],["mcontext_t"]]],[11,"clone","","",67,[[["self"]],["ucontext_t"]]],[11,"clone","","",68,[[["self"]],["ipc_perm"]]],[11,"clone","","",69,[[["self"]],["shmid_ds"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"fd_set"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"sem_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[4,"c_void"],[4,"FILE"],[4,"fpos_t"],[4,"DIR"],[4,"locale_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message.",N,N],[3,"LogMetadata","","Metadata about a log message.",N,N],[3,"LogLocation","","The location of a log message.",N,N],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level filter.",N,N],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",N,N],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has already been called or if `set_logger_raw` has not been called yet.",N,N],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging framework.",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"max_log_level","","Returns the current maximum log level.",N,[[],["loglevelfilter"]]],[5,"set_logger","","Sets the global logger.",N,[[["m"]],["result",["setloggererror"]]]],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",N,[[["m"]],["result",["setloggererror"]]]],[5,"shutdown_logger","","Shuts down the global logger.",N,[[],["result",["box","shutdownloggererror"]]]],[5,"shutdown_logger_raw","","Shuts down the global logger.",N,[[],["result",["shutdownloggererror"]]]],[8,"Log","","A trait encapsulating the operations required of a logger",N,N],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,[[["self"],["logmetadata"]],["bool"]]],[10,"log","","Logs the `LogRecord`.",2,[[["self"],["logrecord"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["loglevel"]]],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,[[["self"]],["loglevelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["loglevelfilter"]]],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,[[["self"]],["option",["loglevel"]]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["logmetadata"]]],[11,"location","","The location of the log directive.",3,[[["self"]],["loglocation"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"level","","The verbosity level of the message.",4,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",4,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",5,[[["self"]],["str"]]],[11,"file","","The source file containing the message.",5,[[["self"]],["str"]]],[11,"line","","The line containing the message.",5,[[["self"]],["u32"]]],[11,"get","","Gets the current maximum log level filter.",6,[[["self"]],["loglevelfilter"]]],[11,"set","","Sets the maximum log level.",6,[[["self"],["loglevelfilter"]]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",N,N],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"partial_cmp","","",0,[[["self"],["loglevel"]],["option",["ordering"]]]],[11,"partial_cmp","","",0,[[["self"],["loglevelfilter"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["loglevelfilter"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["loglevel"]],["option",["ordering"]]]],[11,"cmp","","",0,[[["self"],["loglevel"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["loglevelfilter"]],["ordering"]]],[11,"eq","","",0,[[["self"],["loglevel"]],["bool"]]],[11,"eq","","",0,[[["self"],["loglevelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["loglevelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["loglevel"]],["bool"]]],[11,"clone","","",0,[[["self"]],["loglevel"]]],[11,"clone","","",1,[[["self"]],["loglevelfilter"]]],[11,"clone","","",5,[[["self"]],["loglocation"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result",["loglevel"]]]],[11,"from_str","","",1,[[["str"]],["result",["loglevelfilter"]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["matches"]={"doc":"","items":[[14,"matches","matches","",N,N],[14,"_matches_tt_as_expr_hack","","Work around \"error: unexpected token: `an interpolated tt`\", whatever that means.",N,N],[14,"assert_matches","","",N,N],[14,"debug_assert_matches","","",N,N]],"paths":[]};
searchIndex["memchr"]={"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface to the corresponding functions in `libc`.","items":[[3,"Memchr","memchr","An iterator for memchr",N,N],[3,"Memchr2","","An iterator for Memchr2",N,N],[3,"Memchr3","","An iterator for Memchr3",N,N],[5,"memchr","","A safe interface to `memchr`.",N,N],[5,"memrchr","","A safe interface to `memrchr`.",N,N],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",N,N],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",N,N],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",0,N],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",1,N],[11,"new","","Create a new Memchr2 that's initalized to zero with a haystack",2,N],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",2,N]],"paths":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["mime"]={"doc":"Mime","items":[[3,"Mime","mime","Mime, or Media Type. Encapsulates common registers types.",N,N],[12,"0","","",0,N],[12,"1","","",0,N],[12,"2","","",0,N],[4,"TopLevel","","",N,N],[13,"Star","","",1,N],[13,"Text","","",1,N],[13,"Image","","",1,N],[13,"Audio","","",1,N],[13,"Video","","",1,N],[13,"Application","","",1,N],[13,"Multipart","","",1,N],[13,"Message","","",1,N],[13,"Model","","",1,N],[13,"Ext","","",1,N],[4,"SubLevel","","",N,N],[13,"Star","","",2,N],[13,"Plain","","",2,N],[13,"Html","","",2,N],[13,"Xml","","",2,N],[13,"Javascript","","",2,N],[13,"Css","","",2,N],[13,"EventStream","","",2,N],[13,"Json","","",2,N],[13,"WwwFormUrlEncoded","","",2,N],[13,"Msgpack","","",2,N],[13,"OctetStream","","",2,N],[13,"FormData","","",2,N],[13,"Png","","",2,N],[13,"Gif","","",2,N],[13,"Bmp","","",2,N],[13,"Jpeg","","",2,N],[13,"Mpeg","","",2,N],[13,"Mp4","","",2,N],[13,"Ogg","","",2,N],[13,"Ext","","",2,N],[4,"Attr","","",N,N],[13,"Charset","","",3,N],[13,"Boundary","","",3,N],[13,"Q","","",3,N],[13,"Ext","","",3,N],[4,"Value","","",N,N],[13,"Utf8","","",4,N],[13,"Ext","","",4,N],[6,"Param","","",N,N],[11,"as_str","","",1,[[["self"]],["str"]]],[11,"as_str","","",2,[[["self"]],["str"]]],[11,"as_str","","",3,[[["self"]],["str"]]],[11,"as_str","","",4,[[["self"]],["str"]]],[11,"get_param","","",0,[[["self"],["a"]],["option",["value"]]]],[14,"mime","","Easily create a Mime without having to import so many enums.",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"partial_cmp","","",0,[[["self"],["mime"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["mime"]],["bool"]]],[11,"le","","",0,[[["self"],["mime"]],["bool"]]],[11,"gt","","",0,[[["self"],["mime"]],["bool"]]],[11,"ge","","",0,[[["self"],["mime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["toplevel"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"le","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"gt","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"ge","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["sublevel"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"le","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"gt","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"ge","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["attr"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["attr"]],["bool"]]],[11,"le","","",3,[[["self"],["attr"]],["bool"]]],[11,"gt","","",3,[[["self"],["attr"]],["bool"]]],[11,"ge","","",3,[[["self"],["attr"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["value"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["value"]],["bool"]]],[11,"le","","",4,[[["self"],["value"]],["bool"]]],[11,"gt","","",4,[[["self"],["value"]],["bool"]]],[11,"ge","","",4,[[["self"],["value"]],["bool"]]],[11,"cmp","","",0,[[["self"],["mime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["toplevel"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["sublevel"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["attr"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["value"]],["ordering"]]],[11,"eq","","",0,[[["self"],["mime"]],["bool"]]],[11,"eq","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"eq","","",1,[[["self"],["string"]],["bool"]]],[11,"eq","","",1,[[["self"],["str"]],["bool"]]],[11,"eq","","",1,[[["self"],["str"]],["bool"]]],[11,"eq","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"eq","","",2,[[["self"],["string"]],["bool"]]],[11,"eq","","",2,[[["self"],["str"]],["bool"]]],[11,"eq","","",2,[[["self"],["str"]],["bool"]]],[11,"eq","","",3,[[["self"],["attr"]],["bool"]]],[11,"eq","","",3,[[["self"],["string"]],["bool"]]],[11,"eq","","",3,[[["self"],["str"]],["bool"]]],[11,"eq","","",3,[[["self"],["str"]],["bool"]]],[11,"eq","","",4,[[["self"],["value"]],["bool"]]],[11,"eq","","",4,[[["self"],["string"]],["bool"]]],[11,"eq","","",4,[[["self"],["str"]],["bool"]]],[11,"eq","","",4,[[["self"],["str"]],["bool"]]],[11,"clone","","",0,[[["self"]],["mime"]]],[11,"clone","","",1,[[["self"]],["toplevel"]]],[11,"clone","","",2,[[["self"]],["sublevel"]]],[11,"clone","","",3,[[["self"]],["attr"]]],[11,"clone","","",4,[[["self"]],["value"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"deref","","",1,[[["self"]],["str"]]],[11,"deref","","",2,[[["self"]],["str"]]],[11,"deref","","",3,[[["self"]],["str"]]],[11,"deref","","",4,[[["self"]],["str"]]],[11,"from_str","","",1,[[["str"]],["result",["toplevel"]]]],[11,"from_str","","",2,[[["str"]],["result",["sublevel"]]]],[11,"from_str","","",3,[[["str"]],["result",["attr"]]]],[11,"from_str","","",4,[[["str"]],["result",["value"]]]],[11,"from_str","","",0,[[["str"]],["result",["mime"]]]]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"]]};
searchIndex["miniz_sys"]={"doc":"","items":[[3,"mz_stream","miniz_sys","",N,N],[12,"next_in","","",0,N],[12,"avail_in","","",0,N],[12,"total_in","","",0,N],[12,"next_out","","",0,N],[12,"avail_out","","",0,N],[12,"total_out","","",0,N],[12,"msg","","",0,N],[12,"state","","",0,N],[12,"zalloc","","",0,N],[12,"zfree","","",0,N],[12,"opaque","","",0,N],[12,"data_type","","",0,N],[12,"adler","","",0,N],[12,"reserved","","",0,N],[4,"mz_internal_state","","",N,N],[5,"mz_deflateInit2","","",N,N],[5,"mz_deflate","","",N,N],[5,"mz_deflateEnd","","",N,N],[5,"mz_deflateReset","","",N,N],[5,"mz_inflateInit2","","",N,N],[5,"mz_inflate","","",N,N],[5,"mz_inflateEnd","","",N,N],[5,"mz_crc32","","",N,N],[6,"mz_alloc_func","","",N,N],[6,"mz_free_func","","",N,N],[17,"MZ_NO_FLUSH","","",N,N],[17,"MZ_PARTIAL_FLUSH","","",N,N],[17,"MZ_SYNC_FLUSH","","",N,N],[17,"MZ_FULL_FLUSH","","",N,N],[17,"MZ_FINISH","","",N,N],[17,"MZ_BLOCK","","",N,N],[17,"MZ_OK","","",N,N],[17,"MZ_STREAM_END","","",N,N],[17,"MZ_NEED_DICT","","",N,N],[17,"MZ_ERRNO","","",N,N],[17,"MZ_STREAM_ERROR","","",N,N],[17,"MZ_DATA_ERROR","","",N,N],[17,"MZ_MEM_ERROR","","",N,N],[17,"MZ_BUF_ERROR","","",N,N],[17,"MZ_VERSION_ERROR","","",N,N],[17,"MZ_PARAM_ERROR","","",N,N],[17,"MZ_DEFLATED","","",N,N],[17,"MZ_DEFAULT_WINDOW_BITS","","",N,N],[17,"MZ_DEFAULT_STRATEGY","","",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]]],"paths":[[3,"mz_stream"],[4,"mz_internal_state"]]};
searchIndex["native_tls"]={"doc":"An abstraction over platform-specific TLS implementations.","items":[[3,"Error","native_tls","An error returned from the TLS implementation.",N,N],[3,"Pkcs12","","A PKCS #12 archive.",N,N],[3,"Certificate","","An X509 certificate.",N,N],[3,"MidHandshakeTlsStream","","A TLS stream which has been interrupted midway through the handshake process.",N,N],[3,"TlsConnectorBuilder","","A builder for `TlsConnector`s.",N,N],[3,"TlsConnector","","A builder for client-side TLS connections.",N,N],[3,"TlsAcceptorBuilder","","A builder for `TlsAcceptor`s.",N,N],[3,"TlsAcceptor","","A builder for server-side TLS connections.",N,N],[3,"TlsStream","","A stream managing a TLS session.",N,N],[4,"HandshakeError","","An error returned from `ClientBuilder::handshake`.",N,N],[13,"Failure","","A fatal error.",0,N],[13,"Interrupted","","A stream interrupted midway through the handshake process due to a `WouldBlock` error.",0,N],[4,"Protocol","","SSL/TLS protocol versions.",N,N],[13,"Sslv3","","The SSL 3.0 protocol.",1,N],[13,"Tlsv10","","The TLS 1.0 protocol.",1,N],[13,"Tlsv11","","The TLS 1.1 protocol.",1,N],[13,"Tlsv12","","The TLS 1.2 protocol.",1,N],[0,"backend","","TLS backend-specific functionality.",N,N],[0,"openssl","native_tls::backend","OpenSSL-specific functionality.",N,N],[8,"TlsConnectorBuilderExt","native_tls::backend::openssl","OpenSSL-specific extensions to `TlsConnectorBuilder`.",N,N],[10,"builder","","Returns a shared reference to the inner `SslConnectorBuilder`.",2,[[["self"]],["sslconnectorbuilder"]]],[10,"builder_mut","","Returns a mutable reference to the inner `SslConnectorBuilder`.",2,[[["self"]],["sslconnectorbuilder"]]],[8,"TlsAcceptorBuilderExt","","OpenSSL-specific extensions to `TlsAcceptorBuilder`.",N,N],[10,"builder","","Returns a shared reference to the inner `SslAcceptorBuilder`.",3,[[["self"]],["sslacceptorbuilder"]]],[10,"builder_mut","","Returns a mutable reference to the inner `SslAcceptorBuilder`.",3,[[["self"]],["sslacceptorbuilder"]]],[8,"TlsStreamExt","","OpenSSL-specific extensions to `TlsStream`.",N,N],[10,"raw_stream","","Returns a shared reference to the OpenSSL `SslStream`.",4,[[["self"]],["sslstream"]]],[10,"raw_stream_mut","","Returns a mutable reference to the OpenSSL `SslStream`.",4,[[["self"]],["sslstream"]]],[8,"ErrorExt","","OpenSSL-specific extensions to `Error`",N,N],[10,"openssl_error","","Extract the underlying OpenSSL error for inspection.",5,[[["self"]],["error"]]],[6,"Result","native_tls","A typedef of the result type returned by many methods.",N,N],[11,"from_der","","Parses a DER-formatted PKCS #12 archive, using the specified password to decrypt the key.",6,N],[11,"from_der","","Parses a DER-formatted X509 certificate.",7,N],[11,"get_ref","","Returns a shared reference to the inner stream.",8,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",8,[[["self"]],["s"]]],[11,"handshake","","Restarts the handshake process.",8,[[["self"]],["result",["tlsstream","handshakeerror"]]]],[11,"identity","","Sets the identity to be used for client certificate authentication.",9,[[["self"],["pkcs12"]],["result",["tlsconnectorbuilder"]]]],[11,"supported_protocols","","Sets the protocols which the connector will support.",9,N],[11,"add_root_certificate","","Adds a certificate to the set of roots that the connector will trust.",9,[[["self"],["certificate"]],["result",["tlsconnectorbuilder"]]]],[11,"build","","Consumes the builder, returning a `TlsConnector`.",9,[[["self"]],["result",["tlsconnector"]]]],[11,"builder","","Returns a new builder for a `TlsConnector`.",10,[[],["result",["tlsconnectorbuilder"]]]],[11,"connect","","Initiates a TLS handshake.",10,[[["self"],["str"],["s"]],["result",["tlsstream","handshakeerror"]]]],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Like `connect`, but does not validate the server's domain name against its certificate.",10,[[["self"],["s"]],["result",["tlsstream","handshakeerror"]]]],[11,"supported_protocols","","Sets the protocols which the acceptor will support.",11,N],[11,"build","","Consumes the builder, returning a `TlsAcceptor`.",11,[[["self"]],["result",["tlsacceptor"]]]],[11,"builder","","Returns a new builder for a `TlsAcceptor`.",12,[[["pkcs12"]],["result",["tlsacceptorbuilder"]]]],[11,"accept","","Initiates a TLS handshake.",12,[[["self"],["s"]],["result",["tlsstream","handshakeerror"]]]],[11,"get_ref","","Returns a shared reference to the inner stream.",13,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",13,[[["self"]],["s"]]],[11,"buffered_read_size","","Returns the number of bytes that can be read without resulting in any network calls.",13,[[["self"]],["result",["usize"]]]],[11,"shutdown","","Shuts down the TLS session.",13,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"builder","","",9,[[["self"]],["sslconnectorbuilder"]]],[11,"builder_mut","","",9,[[["self"]],["sslconnectorbuilder"]]],[11,"builder","","",11,[[["self"]],["sslacceptorbuilder"]]],[11,"builder_mut","","",11,[[["self"]],["sslacceptorbuilder"]]],[11,"raw_stream","","",13,[[["self"]],["sslstream"]]],[11,"raw_stream_mut","","",13,[[["self"]],["sslstream"]]],[11,"openssl_error","","",14,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["protocol"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"write","","",13,N],[11,"flush","","",13,[[["self"]],["result"]]],[11,"read","","",13,N],[11,"description","","",14,[[["self"]],["str"]]],[11,"cause","","",14,[[["self"]],["option",["error"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[4,"HandshakeError"],[4,"Protocol"],[8,"TlsConnectorBuilderExt"],[8,"TlsAcceptorBuilderExt"],[8,"TlsStreamExt"],[8,"ErrorExt"],[3,"Pkcs12"],[3,"Certificate"],[3,"MidHandshakeTlsStream"],[3,"TlsConnectorBuilder"],[3,"TlsConnector"],[3,"TlsAcceptorBuilder"],[3,"TlsAcceptor"],[3,"TlsStream"],[3,"Error"]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",N,N],[10,"div_floor","","Floored integer division.",0,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",0,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",0,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[8,"Num","","The base trait for numeric types",N,N],[16,"FromStrRadixErr","","",1,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,[[["str"],["u32"]],["result"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,[[],["self"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",4,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",4,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",4,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Bounded","","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",5,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[],["self"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Saturating","","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",9,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,[[["self"],["self"]],["option"]]],[8,"PrimInt","","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,[[["self"],["u32"]],["self"]]],[8,"Float","","",N,N],[10,"nan","","Returns the `NaN` value.",12,[[],["self"]]],[10,"infinity","","Returns the infinite value.",12,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",12,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",12,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",12,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",12,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",12,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",12,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",12,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",12,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",12,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",12,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",12,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",12,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `Float::infinity()`.",12,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `Float::neg_infinity()`.",12,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",12,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",12,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",12,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",12,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",12,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",12,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",12,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",12,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",12,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",12,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",12,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",12,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",12,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",12,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",12,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",12,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",12,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",12,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",12,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",12,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",12,N],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i64"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u64"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,[[["t"]],["option"]]],[0,"cast","","",N,N],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i64"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u64"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,[[["t"]],["option"]]],[5,"cast","num","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[0,"pow","","",N,N],[5,"pow","num::pow","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"integer","","",N,N],[8,"Integer","num::integer","",N,N],[10,"div_floor","","Floored integer division.",0,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",0,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",0,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,N],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",N,[[["t"],["t"]],["t"]]],[3,"IterBinomial","","An iterator over binomial coefficients.",N,N],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[0,"iter","num","",N,N],[3,"Range","num::iter","An iterator over the range [start, stop)",N,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,N],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,N],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[0,"traits","num","",N,N],[0,"identities","num::traits","",N,N],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,[[],["self"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[0,"sign","num::traits","",N,N],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",4,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",4,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",4,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,[[["self"]],["bool"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[0,"ops","num::traits","",N,N],[0,"saturating","num::traits::ops","",N,N],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[0,"checked","num::traits::ops","",N,N],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",9,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,[[["self"],["self"]],["option"]]],[0,"wrapping","num::traits::ops","",N,N],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",16,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",17,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",18,[[["self"],["self"]],["self"]]],[0,"bounds","num::traits","",N,N],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",5,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[],["self"]]],[0,"float","num::traits","",N,N],[8,"Float","num::traits::float","",N,N],[10,"nan","","Returns the `NaN` value.",12,[[],["self"]]],[10,"infinity","","Returns the infinite value.",12,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",12,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",12,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",12,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",12,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",12,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",12,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",12,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",12,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",12,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",12,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",12,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",12,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `Float::infinity()`.",12,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `Float::neg_infinity()`.",12,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",12,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",12,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",12,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",12,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",12,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",12,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",12,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",12,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",12,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",12,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",12,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",12,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",12,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",12,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",12,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",12,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",12,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",12,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",12,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",12,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",12,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",19,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",19,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",19,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",19,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",19,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",19,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",19,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",19,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",19,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",19,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",19,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",19,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",19,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",19,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",19,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",19,[[],["self"]]],[0,"cast","num::traits","",N,N],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["i64"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["u64"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,[[["t"]],["option"]]],[0,"int","num::traits","",N,N],[8,"PrimInt","num::traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,[[["self"],["u32"]],["self"]]],[0,"pow","num::traits","",N,N],[5,"pow","num::traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[8,"Num","num::traits","The base trait for numeric types",N,N],[16,"FromStrRadixErr","","",1,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,[[["str"],["u32"]],["result"]]],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",20,N],[13,"Invalid","","",20,N],[3,"ParseFloatError","","",N,N],[12,"kind","","",21,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[11,"into","num::integer","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","num::iter","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"into","num::traits","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"next","num::integer","",22,[[["self"]],["option"]]],[11,"clone","num::iter","",25,[[["self"]],["rangestep"]]],[11,"clone","","",24,[[["self"]],["rangeinclusive"]]],[11,"clone","","",23,[[["self"]],["range"]]],[11,"clone","","",26,[[["self"]],["rangestepinclusive"]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,N],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,N],[11,"next","","",26,[[["self"]],["option"]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"next_back","","",23,[[["self"]],["option"]]],[11,"next_back","","",24,[[["self"]],["option"]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",22,[[["t"]],["iterbinomial"]]]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"FloatConst"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_cpus"]={"doc":"Replaces the deprecated functionality of std::os::num_cpus.","items":[[5,"get","num_cpus","Returns the number of CPUs of the current machine.",N,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current machine. If not possible on the particular architecture returns same as get() which is the logical CPUs.",N,[[],["usize"]]]],"paths":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",N,N],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",N,[[["t"],["t"]],["t"]]],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",0,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",0,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",0,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,N],[11,"new","","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",1,[[["t"]],["iterbinomial"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"next","","",1,[[["self"]],["option"]]]],"paths":[[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",N,N],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,N],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["range"]]],[11,"clone","","",1,[[["self"]],["rangeinclusive"]]],[11,"clone","","",2,[[["self"]],["rangestep"]]],[11,"clone","","",3,[[["self"]],["rangestepinclusive"]]]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",N,N],[12,"kind","","",0,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",1,N],[13,"Invalid","","",1,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"identities","","",N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,[[],["self"]]],[0,"sign","num_traits","",N,N],[5,"abs","num_traits::sign","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",4,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",4,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",4,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[0,"ops","num_traits","",N,N],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",5,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",5,[[["self"],["self"]],["self"]]],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",6,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",9,[[["self"],["self"]],["option"]]],[0,"wrapping","num_traits::ops","",N,N],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",10,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",11,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,[[["self"],["self"]],["self"]]],[0,"bounds","num_traits","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",13,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",13,[[],["self"]]],[0,"float","num_traits","",N,N],[8,"Float","num_traits::float","",N,N],[10,"nan","","Returns the `NaN` value.",14,[[],["self"]]],[10,"infinity","","Returns the infinite value.",14,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",14,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",14,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",14,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",14,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",14,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",14,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",14,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",14,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",14,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",14,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",14,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",14,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",14,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",14,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",14,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",14,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",14,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",14,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `Float::infinity()`.",14,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `Float::neg_infinity()`.",14,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",14,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",14,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",14,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",14,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",14,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",14,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",14,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",14,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",14,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",14,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",14,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",14,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",14,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",14,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",14,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",14,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",14,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",14,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",14,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",14,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",14,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",14,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",14,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",14,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",14,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",14,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",14,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",14,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",14,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",14,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",14,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",14,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",14,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",14,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",14,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",15,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",15,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",15,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",15,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",15,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",15,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",15,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",15,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",15,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",15,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",15,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",15,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",15,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",15,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",15,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",15,[[],["self"]]],[0,"cast","num_traits","",N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",16,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",16,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",16,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",16,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",16,[[["self"]],["option",["i64"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",16,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",16,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",16,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",16,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",16,[[["self"]],["option",["u64"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",16,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",16,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",17,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["i64"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["u64"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",18,[[["t"]],["option"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",19,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",19,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",19,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",19,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",19,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",19,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",19,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",19,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",19,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",19,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",19,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",19,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",19,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",19,[[["self"],["u32"]],["self"]]],[0,"pow","num_traits","",N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[8,"Num","num_traits","The base trait for numeric types",N,N],[16,"FromStrRadixErr","","",20,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",20,[[["str"],["u32"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["openssl"]={"doc":"","items":[[5,"init","openssl","",N,N],[0,"aes","","Low level AES functionality",N,N],[3,"KeyError","openssl::aes","",N,N],[3,"AesKey","","",N,N],[5,"aes_ige","","Performs AES IGE encryption or decryption",N,N],[11,"new_encrypt","","Prepares a key for encryption.",0,N],[11,"new_decrypt","","Prepares a key for decryption.",0,N],[0,"asn1","openssl","",N,N],[3,"Asn1GeneralizedTime","openssl::asn1","",N,N],[3,"Asn1GeneralizedTimeRef","","",N,N],[3,"Asn1Time","","",N,N],[3,"Asn1TimeRef","","",N,N],[3,"Asn1String","","",N,N],[3,"Asn1StringRef","","",N,N],[3,"Asn1Integer","","",N,N],[3,"Asn1IntegerRef","","",N,N],[3,"Asn1BitString","","",N,N],[3,"Asn1BitStringRef","","",N,N],[3,"Asn1Object","","",N,N],[3,"Asn1ObjectRef","","",N,N],[11,"days_from_now","","Creates a new time on specified interval in days from now",1,[[["u32"]],["result",["asn1time","errorstack"]]]],[11,"as_utf8","","",2,[[["self"]],["result",["opensslstring","errorstack"]]]],[11,"as_slice","","",2,N],[11,"len","","",2,[[["self"]],["usize"]]],[11,"get","","",3,[[["self"]],["i64"]]],[11,"set","","",3,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"as_slice","","",4,N],[11,"len","","",4,[[["self"]],["usize"]]],[11,"nid","","Returns the NID associated with this OID.",5,[[["self"]],["nid"]]],[0,"bn","openssl","",N,N],[3,"MsbOption","openssl::bn","Options for the most significant bits of a randomly generated `BigNum`.",N,N],[3,"BigNumContext","","",N,N],[3,"BigNumContextRef","","",N,N],[3,"BigNum","","",N,N],[3,"BigNumRef","","",N,N],[17,"MSB_MAYBE_ZERO","","The most significant bit of the number may be 0.",N,N],[17,"MSB_ONE","","The most significant bit of the number must be 1.",N,N],[17,"TWO_MSB_ONE","","The most significant two bits of the number must be 1.",N,N],[11,"new","","Returns a new `BigNumContext`.",6,[[],["result",["bignumcontext","errorstack"]]]],[11,"clear","","Erases the memory used by this `BigNum`, resetting its value to 0.",7,[[["self"]]]],[11,"add_word","","Adds a `u32` to `self`.",7,[[["self"],["u32"]],["result",["errorstack"]]]],[11,"sub_word","","Subtracts a `u32` from `self`.",7,[[["self"],["u32"]],["result",["errorstack"]]]],[11,"mul_word","","Multiplies a `u32` by `self`.",7,[[["self"],["u32"]],["result",["errorstack"]]]],[11,"div_word","","Divides `self` by a `u32`, returning the remainder.",7,[[["self"],["u32"]],["result",["u64","errorstack"]]]],[11,"mod_word","","Returns the result of `self` modulo `w`.",7,[[["self"],["u32"]],["result",["u64","errorstack"]]]],[11,"rand_range","","Places a cryptographically-secure pseudo-random number nonnegative number less than `self` in `rnd`.",7,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"pseudo_rand_range","","The cryptographically weak counterpart to `rand_in_range`.",7,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 << n)`.",7,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &= ~(1 << n)`.",7,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",7,[[["self"],["i32"]],["bool"]]],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",7,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"lshift1","","Places `a << 1` in `self`.",7,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"rshift1","","Places `a >> 1` in `self`.",7,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"checked_add","","Places `a + b` in `self`.",7,[[["self"],["bignumref"],["bignumref"]],["result",["errorstack"]]]],[11,"checked_sub","","Places `a - b` in `self`.",7,[[["self"],["bignumref"],["bignumref"]],["result",["errorstack"]]]],[11,"lshift","","Places `a << n` in `self`.",7,[[["self"],["bignumref"],["i32"]],["result",["errorstack"]]]],[11,"rshift","","Places `a >> n` in `self`.",7,[[["self"],["bignumref"],["i32"]],["result",["errorstack"]]]],[11,"to_owned","","",7,[[["self"]],["result",["bignum","errorstack"]]]],[11,"set_negative","","Sets the sign of `self`.",7,[[["self"],["bool"]]]],[11,"ucmp","","Compare the absolute values of `self` and `oth`.",7,[[["self"],["bignumref"]],["ordering"]]],[11,"is_negative","","",7,[[["self"]],["bool"]]],[11,"num_bits","","Returns the number of significant bits in `self`.",7,[[["self"]],["i32"]]],[11,"num_bytes","","Returns the size of `self` in bytes.",7,[[["self"]],["i32"]]],[11,"rand","","Generates a cryptographically strong pseudo-random `BigNum`, placing it in `self`.",7,[[["self"],["i32"],["msboption"],["bool"]],["result",["errorstack"]]]],[11,"pseudo_rand","","The cryptographically weak counterpart to `rand`.",7,[[["self"],["i32"],["msboption"],["bool"]],["result",["errorstack"]]]],[11,"generate_prime","","Generates a prime number, placing it in `self`.",7,[[["self"],["i32"],["bool"],["option",["bignumref"]],["option",["bignumref"]]],["result",["errorstack"]]]],[11,"checked_mul","","Places the result of `a * b` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"checked_div","","Places the result of `a / b` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"checked_rem","","Places the result of `a % b` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"div_rem","","Places the result of `a / b` in `self` and `a % b` in `rem`.",7,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"sqr","","Places the result of `a²` in `self`.",7,[[["self"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"nnmod","","Places the result of `a mod m` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_add","","Places the result of `(a + b) mod m` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_sub","","Places the result of `(a - b) mod m` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_mul","","Places the result of `(a * b) mod m` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_sqr","","Places the result of `a² mod m` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"exp","","Places the result of `a^p` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_exp","","Places the result of `a^p mod m` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_inverse","","Places the inverse of `a` modulo `n` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"gcd","","Places the greatest common denominator of `a` and `b` in `self`.",7,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"is_prime","","Checks whether `self` is prime.",7,[[["self"],["i32"],["bignumcontextref"]],["result",["bool","errorstack"]]]],[11,"is_prime_fasttest","","Checks whether `self` is prime with optional trial division.",7,[[["self"],["i32"],["bignumcontextref"],["bool"]],["result",["bool","errorstack"]]]],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",7,[[["self"]],["vec",["u8"]]]],[11,"to_dec_str","","Returns a decimal string representation of `self`.",7,[[["self"]],["result",["opensslstring","errorstack"]]]],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",7,[[["self"]],["result",["opensslstring","errorstack"]]]],[11,"to_asn1_integer","","Returns an `Asn1Integer` containing the value of `self`.",7,[[["self"]],["result",["asn1integer","errorstack"]]]],[11,"new","","Creates a new `BigNum` with the value 0.",8,[[],["result",["bignum","errorstack"]]]],[11,"from_u32","","Creates a new `BigNum` with the given value.",8,[[["u32"]],["result",["bignum","errorstack"]]]],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",8,[[["str"]],["result",["bignum","errorstack"]]]],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",8,[[["str"]],["result",["bignum","errorstack"]]]],[11,"get_rfc2409_prime_768","","",8,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc2409_prime_1024","","",8,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_1536","","",8,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_2048","","",8,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_3072","","",8,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_4096","","",8,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_6144","","",8,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_8192","","",8,[[],["result",["bignum","errorstack"]]]],[11,"from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",8,N],[0,"conf","openssl","",N,N],[3,"ConfMethod","openssl::conf","",N,N],[3,"Conf","","",N,N],[3,"ConfRef","","",N,N],[11,"default","","",9,[[],["confmethod"]]],[11,"from_ptr","","",9,N],[11,"as_ptr","","",9,N],[11,"new","","",10,[[["confmethod"]],["result",["conf","errorstack"]]]],[0,"crypto","openssl","",N,N],[6,"CryptoString","openssl::crypto","",N,N],[0,"dh","openssl","",N,N],[3,"Dh","openssl::dh","",N,N],[3,"DhRef","","",N,N],[11,"to_pem","","Serializes this value to PEM.",11,[[["self"]],["result",["vec","errorstack"]]]],[11,"to_der","","Serializes this value to DER.",11,[[["self"]],["result",["vec","errorstack"]]]],[11,"from_params","","",12,[[["bignum"],["bignum"],["bignum"]],["result",["dh","errorstack"]]]],[11,"from_pem","","Deserializes a value from PEM-formatted data.",12,N],[11,"from_der","","Deserializes a value from DER-formatted data.",12,N],[0,"dsa","openssl","",N,N],[3,"Dsa","openssl::dsa","",N,N],[3,"DsaRef","","",N,N],[11,"private_key_to_pem","","Serializes the private key to PEM.",13,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",13,N],[11,"public_key_to_pem","","Serializes a public key to PEM.",13,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_der","","Serializes the private key to DER.",13,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der","","Serializes the public key to DER.",13,[[["self"]],["result",["vec","errorstack"]]]],[11,"size","","",13,[[["self"]],["option",["u32"]]]],[11,"p","","",13,[[["self"]],["option",["bignumref"]]]],[11,"q","","",13,[[["self"]],["option",["bignumref"]]]],[11,"g","","",13,[[["self"]],["option",["bignumref"]]]],[11,"has_public_key","","",13,[[["self"]],["bool"]]],[11,"has_private_key","","",13,[[["self"]],["bool"]]],[11,"generate","","Generate a DSA key pair.",14,[[["u32"]],["result",["dsa","errorstack"]]]],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",14,N],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",14,N],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",14,N],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",14,N],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",14,N],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",14,N],[11,"private_key_from_pem_cb","","",14,N],[0,"ec","openssl","",N,N],[3,"PointConversionForm","openssl::ec","",N,N],[3,"Asn1Flag","","",N,N],[3,"EcGroup","","",N,N],[3,"EcGroupRef","","",N,N],[3,"EcPoint","","",N,N],[3,"EcPointRef","","",N,N],[3,"EcKey","","",N,N],[3,"EcKeyRef","","",N,N],[3,"EcKeyBuilder","","",N,N],[3,"EcKeyBuilderRef","","",N,N],[17,"POINT_CONVERSION_COMPRESSED","","",N,N],[17,"POINT_CONVERSION_UNCOMPRESSED","","",N,N],[17,"POINT_CONVERSION_HYBRID","","",N,N],[17,"EXPLICIT_CURVE","","",N,N],[17,"NAMED_CURVE","","",N,N],[11,"from_curve_name","","Returns the group of a standard named curve.",15,[[["nid"]],["result",["ecgroup","errorstack"]]]],[11,"components_gfp","","Places the components of a curve over a prime field in the provided `BigNum`s.",16,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"components_gf2m","","Places the components of a curve over a binary field in the provided `BigNum`s.",16,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"degree","","Returns the degree of the curve.",16,[[["self"]],["u32"]]],[11,"order","","Places the order of the curve in the provided `BigNum`.",16,[[["self"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"set_asn1_flag","","Sets the flag determining if the group corresponds to a named curve or must be explicitly parameterized.",16,[[["self"],["asn1flag"]]]],[11,"add","","Computes `a + b`, storing the result in `self`.",17,[[["self"],["ecgroupref"],["ecpointref"],["ecpointref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mul","","Computes `q * m`, storing the result in `self`.",17,[[["self"],["ecgroupref"],["ecpointref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mul_generator","","Computes `generator * n`, storing the result ing `self`.",17,[[["self"],["ecgroupref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mul_full","","Computes `generator * n + q * m`, storing the result in `self`.",17,[[["self"],["ecgroupref"],["bignumref"],["ecpointref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"invert","","Inverts `self`.",17,[[["self"],["ecgroupref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"to_bytes","","Serializes the point to a binary representation.",17,[[["self"],["ecgroupref"],["pointconversionform"],["bignumcontextref"]],["result",["vec","errorstack"]]]],[11,"eq","","Determines if this point is equal to another.",17,[[["self"],["ecgroupref"],["ecpointref"],["bignumcontextref"]],["result",["bool","errorstack"]]]],[11,"new","","Creates a new point on the specified curve.",18,[[["ecgroupref"]],["result",["ecpoint","errorstack"]]]],[11,"from_bytes","","",18,N],[11,"private_key_to_pem","","Serializes the private key to PEM.",19,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",19,N],[11,"private_key_to_der","","Serializes the private key to DER.",19,[[["self"]],["result",["vec","errorstack"]]]],[11,"group","","",19,[[["self"]],["option",["ecgroupref"]]]],[11,"public_key","","",19,[[["self"]],["option",["ecpointref"]]]],[11,"private_key","","",19,[[["self"]],["option",["bignumref"]]]],[11,"check_key","","Checks the key for validity.",19,[[["self"]],["result",["errorstack"]]]],[11,"to_owned","","",19,[[["self"]],["result",["eckey","errorstack"]]]],[11,"from_curve_name","","Constructs an `EcKey` corresponding to a known curve.",20,[[["nid"]],["result",["eckey","errorstack"]]]],[11,"from_public_key","","Constructs an `EcKey` from the specified group with the associated `EcPoint`, public_key.",20,[[["ecgroupref"],["ecpointref"]],["result",["eckey","errorstack"]]]],[11,"generate","","Generates a new public/private key pair on the specified curve.",20,[[["ecgroupref"]],["result",["eckey","errorstack"]]]],[11,"new_by_curve_name","","",20,[[["nid"]],["result",["eckey","errorstack"]]]],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",20,N],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",20,N],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",20,N],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",20,N],[11,"new","","",21,[[],["result",["eckeybuilder","errorstack"]]]],[11,"build","","",21,[[["self"]],["eckey"]]],[11,"set_group","","",22,[[["self"],["ecgroupref"]],["result",["eckeybuilderref","errorstack"]]]],[11,"set_public_key","","",22,[[["self"],["ecpointref"]],["result",["eckeybuilderref","errorstack"]]]],[11,"generate_key","","",22,[[["self"]],["result",["eckeybuilderref","errorstack"]]]],[0,"ec_key","openssl","",N,N],[0,"error","","",N,N],[3,"ErrorStack","openssl::error","",N,N],[3,"Error","","An error reported from OpenSSL.",N,N],[11,"get","","Returns the contents of the OpenSSL error stack.",23,[[],["errorstack"]]],[11,"errors","","Returns the errors in the stack.",23,N],[11,"get","","Returns the first error on the OpenSSL error stack.",24,[[],["option",["error"]]]],[11,"code","","Returns the raw OpenSSL error code for this error.",24,[[["self"]],["c_ulong"]]],[11,"library","","Returns the name of the library reporting the error, if available.",24,[[["self"]],["option",["str"]]]],[11,"function","","Returns the name of the function reporting the error.",24,[[["self"]],["option",["str"]]]],[11,"reason","","Returns the reason for the error.",24,[[["self"]],["option",["str"]]]],[11,"file","","Returns the name of the source file which encountered the error.",24,[[["self"]],["str"]]],[11,"line","","Returns the line in the source file which encountered the error.",24,[[["self"]],["c_int"]]],[11,"data","","Returns additional data describing the error.",24,[[["self"]],["option",["str"]]]],[0,"hash","openssl","",N,N],[3,"MessageDigest","openssl::hash","",N,N],[3,"Hasher","","Provides message digest (hash) computation.",N,N],[3,"DigestBytes","","The resulting bytes of a digest.",N,N],[5,"hash","","",N,N],[5,"hash2","","Computes the hash of the `data` with the hash `t`.",N,N],[11,"md5","","",25,[[],["messagedigest"]]],[11,"sha1","","",25,[[],["messagedigest"]]],[11,"sha224","","",25,[[],["messagedigest"]]],[11,"sha256","","",25,[[],["messagedigest"]]],[11,"sha384","","",25,[[],["messagedigest"]]],[11,"sha512","","",25,[[],["messagedigest"]]],[11,"ripemd160","","",25,[[],["messagedigest"]]],[11,"as_ptr","","",25,N],[11,"new","","Creates a new `Hasher` with the specified hash type.",26,[[["messagedigest"]],["result",["hasher","errorstack"]]]],[11,"update","","Feeds data into the hasher.",26,N],[11,"finish","","",26,[[["self"]],["result",["vec","errorstack"]]]],[11,"finish2","","Returns the hash of the data written and resets the hasher.",26,[[["self"]],["result",["digestbytes","errorstack"]]]],[0,"memcmp","openssl","",N,N],[5,"eq","openssl::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",N,N],[0,"nid","openssl","",N,N],[3,"Nid","openssl::nid","",N,N],[17,"UNDEF","","",N,N],[17,"ITU_T","","",N,N],[17,"CCITT","","",N,N],[17,"ISO","","",N,N],[17,"JOINT_ISO_ITU_T","","",N,N],[17,"JOINT_ISO_CCITT","","",N,N],[17,"MEMBER_BODY","","",N,N],[17,"IDENTIFIED_ORGANIZATION","","",N,N],[17,"HMAC_MD5","","",N,N],[17,"HMAC_SHA1","","",N,N],[17,"CERTICOM_ARC","","",N,N],[17,"INTERNATIONAL_ORGANIZATIONS","","",N,N],[17,"WAP","","",N,N],[17,"WAP_WSG","","",N,N],[17,"SELECTED_ATTRIBUTE_TYPES","","",N,N],[17,"CLEARANCE","","",N,N],[17,"ISO_US","","",N,N],[17,"X9_57","","",N,N],[17,"X9CM","","",N,N],[17,"DSA","","",N,N],[17,"DSAWITHSHA1","","",N,N],[17,"ANSI_X9_62","","",N,N],[17,"X9_62_PRIME_FIELD","","",N,N],[17,"X9_62_CHARACTERISTIC_TWO_FIELD","","",N,N],[17,"X9_62_ID_CHARACTERISTIC_TWO_BASIS","","",N,N],[17,"X9_62_ONBASIS","","",N,N],[17,"X9_62_TPBASIS","","",N,N],[17,"X9_62_PPBASIS","","",N,N],[17,"X9_62_ID_ECPUBLICKEY","","",N,N],[17,"X9_62_C2PNB163V1","","",N,N],[17,"X9_62_C2PNB163V2","","",N,N],[17,"X9_62_C2PNB163V3","","",N,N],[17,"X9_62_C2PNB176V1","","",N,N],[17,"X9_62_C2TNB191V1","","",N,N],[17,"X9_62_C2TNB191V2","","",N,N],[17,"X9_62_C2TNB191V3","","",N,N],[17,"X9_62_C2ONB191V4","","",N,N],[17,"X9_62_C2ONB191V5","","",N,N],[17,"X9_62_C2PNB208W1","","",N,N],[17,"X9_62_C2TNB239V1","","",N,N],[17,"X9_62_C2TNB239V2","","",N,N],[17,"X9_62_C2TNB239V3","","",N,N],[17,"X9_62_C2ONB239V4","","",N,N],[17,"X9_62_C2ONB239V5","","",N,N],[17,"X9_62_C2PNB272W1","","",N,N],[17,"X9_62_C2PNB304W1","","",N,N],[17,"X9_62_C2TNB359V1","","",N,N],[17,"X9_62_C2PNB368W1","","",N,N],[17,"X9_62_C2TNB431R1","","",N,N],[17,"X9_62_PRIME192V1","","",N,N],[17,"X9_62_PRIME192V2","","",N,N],[17,"X9_62_PRIME192V3","","",N,N],[17,"X9_62_PRIME239V1","","",N,N],[17,"X9_62_PRIME239V2","","",N,N],[17,"X9_62_PRIME239V3","","",N,N],[17,"X9_62_PRIME256V1","","",N,N],[17,"ECDSA_WITH_SHA1","","",N,N],[17,"ECDSA_WITH_RECOMMENDED","","",N,N],[17,"ECDSA_WITH_SPECIFIED","","",N,N],[17,"ECDSA_WITH_SHA224","","",N,N],[17,"ECDSA_WITH_SHA256","","",N,N],[17,"ECDSA_WITH_SHA384","","",N,N],[17,"ECDSA_WITH_SHA512","","",N,N],[17,"SECP112R1","","",N,N],[17,"SECP112R2","","",N,N],[17,"SECP128R1","","",N,N],[17,"SECP128R2","","",N,N],[17,"SECP160K1","","",N,N],[17,"SECP160R1","","",N,N],[17,"SECP160R2","","",N,N],[17,"SECP192K1","","",N,N],[17,"SECP224K1","","",N,N],[17,"SECP224R1","","",N,N],[17,"SECP256K1","","",N,N],[17,"SECP384R1","","",N,N],[17,"SECP521R1","","",N,N],[17,"SECT113R1","","",N,N],[17,"SECT113R2","","",N,N],[17,"SECT131R1","","",N,N],[17,"SECT131R2","","",N,N],[17,"SECT163K1","","",N,N],[17,"SECT163R1","","",N,N],[17,"SECT163R2","","",N,N],[17,"SECT193R1","","",N,N],[17,"SECT193R2","","",N,N],[17,"SECT233K1","","",N,N],[17,"SECT233R1","","",N,N],[17,"SECT239K1","","",N,N],[17,"SECT283K1","","",N,N],[17,"SECT283R1","","",N,N],[17,"SECT409K1","","",N,N],[17,"SECT409R1","","",N,N],[17,"SECT571K1","","",N,N],[17,"SECT571R1","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS1","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS3","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS4","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS5","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS6","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS7","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS8","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS9","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS10","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS11","","",N,N],[17,"WAP_WSG_IDM_ECID_WTLS12","","",N,N],[17,"CAST5_CBC","","",N,N],[17,"CAST5_ECB","","",N,N],[17,"CAST5_CFB64","","",N,N],[17,"CAST5_OFB64","","",N,N],[17,"PBEWITHMD5ANDCAST5_CBC","","",N,N],[17,"ID_PASSWORDBASEDMAC","","",N,N],[17,"ID_DHBASEDMAC","","",N,N],[17,"RSADSI","","",N,N],[17,"PKCS","","",N,N],[17,"PKCS1","","",N,N],[17,"RSAENCRYPTION","","",N,N],[17,"MD2WITHRSAENCRYPTION","","",N,N],[17,"MD4WITHRSAENCRYPTION","","",N,N],[17,"MD5WITHRSAENCRYPTION","","",N,N],[17,"SHA1WITHRSAENCRYPTION","","",N,N],[17,"RSAESOAEP","","",N,N],[17,"MGF1","","",N,N],[17,"RSASSAPSS","","",N,N],[17,"SHA256WITHRSAENCRYPTION","","",N,N],[17,"SHA384WITHRSAENCRYPTION","","",N,N],[17,"SHA512WITHRSAENCRYPTION","","",N,N],[17,"SHA224WITHRSAENCRYPTION","","",N,N],[17,"PKCS3","","",N,N],[17,"DHKEYAGREEMENT","","",N,N],[17,"PKCS5","","",N,N],[17,"PBEWITHMD2ANDDES_CBC","","",N,N],[17,"PBEWITHMD5ANDDES_CBC","","",N,N],[17,"PBEWITHMD2ANDRC2_CBC","","",N,N],[17,"PBEWITHMD5ANDRC2_CBC","","",N,N],[17,"PBEWITHSHA1ANDDES_CBC","","",N,N],[17,"PBEWITHSHA1ANDRC2_CBC","","",N,N],[17,"ID_PBKDF2","","",N,N],[17,"PBES2","","",N,N],[17,"PBMAC1","","",N,N],[17,"PKCS7","","",N,N],[17,"PKCS7_DATA","","",N,N],[17,"PKCS7_SIGNED","","",N,N],[17,"PKCS7_ENVELOPED","","",N,N],[17,"PKCS7_SIGNEDANDENVELOPED","","",N,N],[17,"PKCS7_DIGEST","","",N,N],[17,"PKCS7_ENCRYPTED","","",N,N],[17,"PKCS9","","",N,N],[17,"PKCS9_EMAILADDRESS","","",N,N],[17,"PKCS9_UNSTRUCTUREDNAME","","",N,N],[17,"PKCS9_CONTENTTYPE","","",N,N],[17,"PKCS9_MESSAGEDIGEST","","",N,N],[17,"PKCS9_SIGNINGTIME","","",N,N],[17,"PKCS9_COUNTERSIGNATURE","","",N,N],[17,"PKCS9_CHALLENGEPASSWORD","","",N,N],[17,"PKCS9_UNSTRUCTUREDADDRESS","","",N,N],[17,"PKCS9_EXTCERTATTRIBUTES","","",N,N],[17,"EXT_REQ","","",N,N],[17,"SMIMECAPABILITIES","","",N,N],[17,"SMIME","","",N,N],[17,"ID_SMIME_MOD","","",N,N],[17,"ID_SMIME_CT","","",N,N],[17,"ID_SMIME_AA","","",N,N],[17,"ID_SMIME_ALG","","",N,N],[17,"ID_SMIME_CD","","",N,N],[17,"ID_SMIME_SPQ","","",N,N],[17,"ID_SMIME_CTI","","",N,N],[17,"ID_SMIME_MOD_CMS","","",N,N],[17,"ID_SMIME_MOD_ESS","","",N,N],[17,"ID_SMIME_MOD_OID","","",N,N],[17,"ID_SMIME_MOD_MSG_V3","","",N,N],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_88","","",N,N],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_97","","",N,N],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_88","","",N,N],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_97","","",N,N],[17,"ID_SMIME_CT_RECEIPT","","",N,N],[17,"ID_SMIME_CT_AUTHDATA","","",N,N],[17,"ID_SMIME_CT_PUBLISHCERT","","",N,N],[17,"ID_SMIME_CT_TSTINFO","","",N,N],[17,"ID_SMIME_CT_TDTINFO","","",N,N],[17,"ID_SMIME_CT_CONTENTINFO","","",N,N],[17,"ID_SMIME_CT_DVCSREQUESTDATA","","",N,N],[17,"ID_SMIME_CT_DVCSRESPONSEDATA","","",N,N],[17,"ID_SMIME_CT_COMPRESSEDDATA","","",N,N],[17,"ID_CT_ASCIITEXTWITHCRLF","","",N,N],[17,"ID_SMIME_AA_RECEIPTREQUEST","","",N,N],[17,"ID_SMIME_AA_SECURITYLABEL","","",N,N],[17,"ID_SMIME_AA_MLEXPANDHISTORY","","",N,N],[17,"ID_SMIME_AA_CONTENTHINT","","",N,N],[17,"ID_SMIME_AA_MSGSIGDIGEST","","",N,N],[17,"ID_SMIME_AA_ENCAPCONTENTTYPE","","",N,N],[17,"ID_SMIME_AA_CONTENTIDENTIFIER","","",N,N],[17,"ID_SMIME_AA_MACVALUE","","",N,N],[17,"ID_SMIME_AA_EQUIVALENTLABELS","","",N,N],[17,"ID_SMIME_AA_CONTENTREFERENCE","","",N,N],[17,"ID_SMIME_AA_ENCRYPKEYPREF","","",N,N],[17,"ID_SMIME_AA_SIGNINGCERTIFICATE","","",N,N],[17,"ID_SMIME_AA_SMIMEENCRYPTCERTS","","",N,N],[17,"ID_SMIME_AA_TIMESTAMPTOKEN","","",N,N],[17,"ID_SMIME_AA_ETS_SIGPOLICYID","","",N,N],[17,"ID_SMIME_AA_ETS_COMMITMENTTYPE","","",N,N],[17,"ID_SMIME_AA_ETS_SIGNERLOCATION","","",N,N],[17,"ID_SMIME_AA_ETS_SIGNERATTR","","",N,N],[17,"ID_SMIME_AA_ETS_OTHERSIGCERT","","",N,N],[17,"ID_SMIME_AA_ETS_CONTENTTIMESTAMP","","",N,N],[17,"ID_SMIME_AA_ETS_CERTIFICATEREFS","","",N,N],[17,"ID_SMIME_AA_ETS_REVOCATIONREFS","","",N,N],[17,"ID_SMIME_AA_ETS_CERTVALUES","","",N,N],[17,"ID_SMIME_AA_ETS_REVOCATIONVALUES","","",N,N],[17,"ID_SMIME_AA_ETS_ESCTIMESTAMP","","",N,N],[17,"ID_SMIME_AA_ETS_CERTCRLTIMESTAMP","","",N,N],[17,"ID_SMIME_AA_ETS_ARCHIVETIMESTAMP","","",N,N],[17,"ID_SMIME_AA_SIGNATURETYPE","","",N,N],[17,"ID_SMIME_AA_DVCS_DVC","","",N,N],[17,"ID_SMIME_ALG_ESDHWITH3DES","","",N,N],[17,"ID_SMIME_ALG_ESDHWITHRC2","","",N,N],[17,"ID_SMIME_ALG_3DESWRAP","","",N,N],[17,"ID_SMIME_ALG_RC2WRAP","","",N,N],[17,"ID_SMIME_ALG_ESDH","","",N,N],[17,"ID_SMIME_ALG_CMS3DESWRAP","","",N,N],[17,"ID_SMIME_ALG_CMSRC2WRAP","","",N,N],[17,"ID_ALG_PWRI_KEK","","",N,N],[17,"ID_SMIME_CD_LDAP","","",N,N],[17,"ID_SMIME_SPQ_ETS_SQT_URI","","",N,N],[17,"ID_SMIME_SPQ_ETS_SQT_UNOTICE","","",N,N],[17,"ID_SMIME_CTI_ETS_PROOFOFORIGIN","","",N,N],[17,"ID_SMIME_CTI_ETS_PROOFOFRECEIPT","","",N,N],[17,"ID_SMIME_CTI_ETS_PROOFOFDELIVERY","","",N,N],[17,"ID_SMIME_CTI_ETS_PROOFOFSENDER","","",N,N],[17,"ID_SMIME_CTI_ETS_PROOFOFAPPROVAL","","",N,N],[17,"ID_SMIME_CTI_ETS_PROOFOFCREATION","","",N,N],[17,"FRIENDLYNAME","","",N,N],[17,"LOCALKEYID","","",N,N],[17,"MS_CSP_NAME","","",N,N],[17,"LOCALKEYSET","","",N,N],[17,"X509CERTIFICATE","","",N,N],[17,"SDSICERTIFICATE","","",N,N],[17,"X509CRL","","",N,N],[17,"PBE_WITHSHA1AND128BITRC4","","",N,N],[17,"PBE_WITHSHA1AND40BITRC4","","",N,N],[17,"PBE_WITHSHA1AND3_KEY_TRIPLEDES_CBC","","",N,N],[17,"PBE_WITHSHA1AND2_KEY_TRIPLEDES_CBC","","",N,N],[17,"PBE_WITHSHA1AND128BITRC2_CBC","","",N,N],[17,"PBE_WITHSHA1AND40BITRC2_CBC","","",N,N],[17,"KEYBAG","","",N,N],[17,"PKCS8SHROUDEDKEYBAG","","",N,N],[17,"CERTBAG","","",N,N],[17,"CRLBAG","","",N,N],[17,"SECRETBAG","","",N,N],[17,"SAFECONTENTSBAG","","",N,N],[17,"MD2","","",N,N],[17,"MD4","","",N,N],[17,"MD5","","",N,N],[17,"MD5_SHA1","","",N,N],[17,"HMACWITHMD5","","",N,N],[17,"HMACWITHSHA1","","",N,N],[17,"HMACWITHSHA224","","",N,N],[17,"HMACWITHSHA256","","",N,N],[17,"HMACWITHSHA384","","",N,N],[17,"HMACWITHSHA512","","",N,N],[17,"RC2_CBC","","",N,N],[17,"RC2_ECB","","",N,N],[17,"RC2_CFB64","","",N,N],[17,"RC2_OFB64","","",N,N],[17,"RC2_40_CBC","","",N,N],[17,"RC2_64_CBC","","",N,N],[17,"RC4","","",N,N],[17,"RC4_40","","",N,N],[17,"DES_EDE3_CBC","","",N,N],[17,"RC5_CBC","","",N,N],[17,"RC5_ECB","","",N,N],[17,"RC5_CFB64","","",N,N],[17,"RC5_OFB64","","",N,N],[17,"MS_EXT_REQ","","",N,N],[17,"MS_CODE_IND","","",N,N],[17,"MS_CODE_COM","","",N,N],[17,"MS_CTL_SIGN","","",N,N],[17,"MS_SGC","","",N,N],[17,"MS_EFS","","",N,N],[17,"MS_SMARTCARD_LOGIN","","",N,N],[17,"MS_UPN","","",N,N],[17,"IDEA_CBC","","",N,N],[17,"IDEA_ECB","","",N,N],[17,"IDEA_CFB64","","",N,N],[17,"IDEA_OFB64","","",N,N],[17,"BF_CBC","","",N,N],[17,"BF_ECB","","",N,N],[17,"BF_CFB64","","",N,N],[17,"BF_OFB64","","",N,N],[17,"ID_PKIX","","",N,N],[17,"ID_PKIX_MOD","","",N,N],[17,"ID_PE","","",N,N],[17,"ID_QT","","",N,N],[17,"ID_KP","","",N,N],[17,"ID_IT","","",N,N],[17,"ID_PKIP","","",N,N],[17,"ID_ALG","","",N,N],[17,"ID_CMC","","",N,N],[17,"ID_ON","","",N,N],[17,"ID_PDA","","",N,N],[17,"ID_ACA","","",N,N],[17,"ID_QCS","","",N,N],[17,"ID_CCT","","",N,N],[17,"ID_PPL","","",N,N],[17,"ID_AD","","",N,N],[17,"ID_PKIX1_EXPLICIT_88","","",N,N],[17,"ID_PKIX1_IMPLICIT_88","","",N,N],[17,"ID_PKIX1_EXPLICIT_93","","",N,N],[17,"ID_PKIX1_IMPLICIT_93","","",N,N],[17,"ID_MOD_CRMF","","",N,N],[17,"ID_MOD_CMC","","",N,N],[17,"ID_MOD_KEA_PROFILE_88","","",N,N],[17,"ID_MOD_KEA_PROFILE_93","","",N,N],[17,"ID_MOD_CMP","","",N,N],[17,"ID_MOD_QUALIFIED_CERT_88","","",N,N],[17,"ID_MOD_QUALIFIED_CERT_93","","",N,N],[17,"ID_MOD_ATTRIBUTE_CERT","","",N,N],[17,"ID_MOD_TIMESTAMP_PROTOCOL","","",N,N],[17,"ID_MOD_OCSP","","",N,N],[17,"ID_MOD_DVCS","","",N,N],[17,"ID_MOD_CMP2000","","",N,N],[17,"INFO_ACCESS","","",N,N],[17,"BIOMETRICINFO","","",N,N],[17,"QCSTATEMENTS","","",N,N],[17,"AC_AUDITENTITY","","",N,N],[17,"AC_TARGETING","","",N,N],[17,"AACONTROLS","","",N,N],[17,"SBGP_IPADDRBLOCK","","",N,N],[17,"SBGP_AUTONOMOUSSYSNUM","","",N,N],[17,"SBGP_ROUTERIDENTIFIER","","",N,N],[17,"AC_PROXYING","","",N,N],[17,"SINFO_ACCESS","","",N,N],[17,"PROXYCERTINFO","","",N,N],[17,"ID_QT_CPS","","",N,N],[17,"ID_QT_UNOTICE","","",N,N],[17,"TEXTNOTICE","","",N,N],[17,"SERVER_AUTH","","",N,N],[17,"CLIENT_AUTH","","",N,N],[17,"CODE_SIGN","","",N,N],[17,"EMAIL_PROTECT","","",N,N],[17,"IPSECENDSYSTEM","","",N,N],[17,"IPSECTUNNEL","","",N,N],[17,"IPSECUSER","","",N,N],[17,"TIME_STAMP","","",N,N],[17,"OCSP_SIGN","","",N,N],[17,"DVCS","","",N,N],[17,"ID_IT_CAPROTENCCERT","","",N,N],[17,"ID_IT_SIGNKEYPAIRTYPES","","",N,N],[17,"ID_IT_ENCKEYPAIRTYPES","","",N,N],[17,"ID_IT_PREFERREDSYMMALG","","",N,N],[17,"ID_IT_CAKEYUPDATEINFO","","",N,N],[17,"ID_IT_CURRENTCRL","","",N,N],[17,"ID_IT_UNSUPPORTEDOIDS","","",N,N],[17,"ID_IT_SUBSCRIPTIONREQUEST","","",N,N],[17,"ID_IT_SUBSCRIPTIONRESPONSE","","",N,N],[17,"ID_IT_KEYPAIRPARAMREQ","","",N,N],[17,"ID_IT_KEYPAIRPARAMREP","","",N,N],[17,"ID_IT_REVPASSPHRASE","","",N,N],[17,"ID_IT_IMPLICITCONFIRM","","",N,N],[17,"ID_IT_CONFIRMWAITTIME","","",N,N],[17,"ID_IT_ORIGPKIMESSAGE","","",N,N],[17,"ID_IT_SUPPLANGTAGS","","",N,N],[17,"ID_REGCTRL","","",N,N],[17,"ID_REGINFO","","",N,N],[17,"ID_REGCTRL_REGTOKEN","","",N,N],[17,"ID_REGCTRL_AUTHENTICATOR","","",N,N],[17,"ID_REGCTRL_PKIPUBLICATIONINFO","","",N,N],[17,"ID_REGCTRL_PKIARCHIVEOPTIONS","","",N,N],[17,"ID_REGCTRL_OLDCERTID","","",N,N],[17,"ID_REGCTRL_PROTOCOLENCRKEY","","",N,N],[17,"ID_REGINFO_UTF8PAIRS","","",N,N],[17,"ID_REGINFO_CERTREQ","","",N,N],[17,"ID_ALG_DES40","","",N,N],[17,"ID_ALG_NOSIGNATURE","","",N,N],[17,"ID_ALG_DH_SIG_HMAC_SHA1","","",N,N],[17,"ID_ALG_DH_POP","","",N,N],[17,"ID_CMC_STATUSINFO","","",N,N],[17,"ID_CMC_IDENTIFICATION","","",N,N],[17,"ID_CMC_IDENTITYPROOF","","",N,N],[17,"ID_CMC_DATARETURN","","",N,N],[17,"ID_CMC_TRANSACTIONID","","",N,N],[17,"ID_CMC_SENDERNONCE","","",N,N],[17,"ID_CMC_RECIPIENTNONCE","","",N,N],[17,"ID_CMC_ADDEXTENSIONS","","",N,N],[17,"ID_CMC_ENCRYPTEDPOP","","",N,N],[17,"ID_CMC_DECRYPTEDPOP","","",N,N],[17,"ID_CMC_LRAPOPWITNESS","","",N,N],[17,"ID_CMC_GETCERT","","",N,N],[17,"ID_CMC_GETCRL","","",N,N],[17,"ID_CMC_REVOKEREQUEST","","",N,N],[17,"ID_CMC_REGINFO","","",N,N],[17,"ID_CMC_RESPONSEINFO","","",N,N],[17,"ID_CMC_QUERYPENDING","","",N,N],[17,"ID_CMC_POPLINKRANDOM","","",N,N],[17,"ID_CMC_POPLINKWITNESS","","",N,N],[17,"ID_CMC_CONFIRMCERTACCEPTANCE","","",N,N],[17,"ID_ON_PERSONALDATA","","",N,N],[17,"ID_ON_PERMANENTIDENTIFIER","","",N,N],[17,"ID_PDA_DATEOFBIRTH","","",N,N],[17,"ID_PDA_PLACEOFBIRTH","","",N,N],[17,"ID_PDA_GENDER","","",N,N],[17,"ID_PDA_COUNTRYOFCITIZENSHIP","","",N,N],[17,"ID_PDA_COUNTRYOFRESIDENCE","","",N,N],[17,"ID_ACA_AUTHENTICATIONINFO","","",N,N],[17,"ID_ACA_ACCESSIDENTITY","","",N,N],[17,"ID_ACA_CHARGINGIDENTITY","","",N,N],[17,"ID_ACA_GROUP","","",N,N],[17,"ID_ACA_ROLE","","",N,N],[17,"ID_ACA_ENCATTRS","","",N,N],[17,"ID_QCS_PKIXQCSYNTAX_V1","","",N,N],[17,"ID_CCT_CRS","","",N,N],[17,"ID_CCT_PKIDATA","","",N,N],[17,"ID_CCT_PKIRESPONSE","","",N,N],[17,"ID_PPL_ANYLANGUAGE","","",N,N],[17,"ID_PPL_INHERITALL","","",N,N],[17,"INDEPENDENT","","",N,N],[17,"AD_OCSP","","",N,N],[17,"AD_CA_ISSUERS","","",N,N],[17,"AD_TIMESTAMPING","","",N,N],[17,"AD_DVCS","","",N,N],[17,"CAREPOSITORY","","",N,N],[17,"ID_PKIX_OCSP_BASIC","","",N,N],[17,"ID_PKIX_OCSP_NONCE","","",N,N],[17,"ID_PKIX_OCSP_CRLID","","",N,N],[17,"ID_PKIX_OCSP_ACCEPTABLERESPONSES","","",N,N],[17,"ID_PKIX_OCSP_NOCHECK","","",N,N],[17,"ID_PKIX_OCSP_ARCHIVECUTOFF","","",N,N],[17,"ID_PKIX_OCSP_SERVICELOCATOR","","",N,N],[17,"ID_PKIX_OCSP_EXTENDEDSTATUS","","",N,N],[17,"ID_PKIX_OCSP_VALID","","",N,N],[17,"ID_PKIX_OCSP_PATH","","",N,N],[17,"ID_PKIX_OCSP_TRUSTROOT","","",N,N],[17,"ALGORITHM","","",N,N],[17,"MD5WITHRSA","","",N,N],[17,"DES_ECB","","",N,N],[17,"DES_CBC","","",N,N],[17,"DES_OFB64","","",N,N],[17,"DES_CFB64","","",N,N],[17,"RSASIGNATURE","","",N,N],[17,"DSA_2","","",N,N],[17,"DSAWITHSHA","","",N,N],[17,"SHAWITHRSAENCRYPTION","","",N,N],[17,"DES_EDE_ECB","","",N,N],[17,"DES_EDE3_ECB","","",N,N],[17,"DES_EDE_CBC","","",N,N],[17,"DES_EDE_CFB64","","",N,N],[17,"DES_EDE3_CFB64","","",N,N],[17,"DES_EDE_OFB64","","",N,N],[17,"DES_EDE3_OFB64","","",N,N],[17,"DESX_CBC","","",N,N],[17,"SHA","","",N,N],[17,"SHA1","","",N,N],[17,"DSAWITHSHA1_2","","",N,N],[17,"SHA1WITHRSA","","",N,N],[17,"RIPEMD160","","",N,N],[17,"RIPEMD160WITHRSA","","",N,N],[17,"SXNET","","",N,N],[17,"X500","","",N,N],[17,"X509","","",N,N],[17,"COMMONNAME","","",N,N],[17,"SURNAME","","",N,N],[17,"SERIALNUMBER","","",N,N],[17,"COUNTRYNAME","","",N,N],[17,"LOCALITYNAME","","",N,N],[17,"STATEORPROVINCENAME","","",N,N],[17,"STREETADDRESS","","",N,N],[17,"ORGANIZATIONNAME","","",N,N],[17,"ORGANIZATIONALUNITNAME","","",N,N],[17,"TITLE","","",N,N],[17,"DESCRIPTION","","",N,N],[17,"SEARCHGUIDE","","",N,N],[17,"BUSINESSCATEGORY","","",N,N],[17,"POSTALADDRESS","","",N,N],[17,"POSTALCODE","","",N,N],[17,"POSTOFFICEBOX","","",N,N],[17,"PHYSICALDELIVERYOFFICENAME","","",N,N],[17,"TELEPHONENUMBER","","",N,N],[17,"TELEXNUMBER","","",N,N],[17,"TELETEXTERMINALIDENTIFIER","","",N,N],[17,"FACSIMILETELEPHONENUMBER","","",N,N],[17,"X121ADDRESS","","",N,N],[17,"INTERNATIONALISDNNUMBER","","",N,N],[17,"REGISTEREDADDRESS","","",N,N],[17,"DESTINATIONINDICATOR","","",N,N],[17,"PREFERREDDELIVERYMETHOD","","",N,N],[17,"PRESENTATIONADDRESS","","",N,N],[17,"SUPPORTEDAPPLICATIONCONTEXT","","",N,N],[17,"MEMBER","","",N,N],[17,"OWNER","","",N,N],[17,"ROLEOCCUPANT","","",N,N],[17,"SEEALSO","","",N,N],[17,"USERPASSWORD","","",N,N],[17,"USERCERTIFICATE","","",N,N],[17,"CACERTIFICATE","","",N,N],[17,"AUTHORITYREVOCATIONLIST","","",N,N],[17,"CERTIFICATEREVOCATIONLIST","","",N,N],[17,"CROSSCERTIFICATEPAIR","","",N,N],[17,"NAME","","",N,N],[17,"GIVENNAME","","",N,N],[17,"INITIALS","","",N,N],[17,"GENERATIONQUALIFIER","","",N,N],[17,"X500UNIQUEIDENTIFIER","","",N,N],[17,"DNQUALIFIER","","",N,N],[17,"ENHANCEDSEARCHGUIDE","","",N,N],[17,"PROTOCOLINFORMATION","","",N,N],[17,"DISTINGUISHEDNAME","","",N,N],[17,"UNIQUEMEMBER","","",N,N],[17,"HOUSEIDENTIFIER","","",N,N],[17,"SUPPORTEDALGORITHMS","","",N,N],[17,"DELTAREVOCATIONLIST","","",N,N],[17,"DMDNAME","","",N,N],[17,"PSEUDONYM","","",N,N],[17,"ROLE","","",N,N],[17,"X500ALGORITHMS","","",N,N],[17,"RSA","","",N,N],[17,"MDC2WITHRSA","","",N,N],[17,"MDC2","","",N,N],[17,"ID_CE","","",N,N],[17,"SUBJECT_DIRECTORY_ATTRIBUTES","","",N,N],[17,"SUBJECT_KEY_IDENTIFIER","","",N,N],[17,"KEY_USAGE","","",N,N],[17,"PRIVATE_KEY_USAGE_PERIOD","","",N,N],[17,"SUBJECT_ALT_NAME","","",N,N],[17,"ISSUER_ALT_NAME","","",N,N],[17,"BASIC_CONSTRAINTS","","",N,N],[17,"CRL_NUMBER","","",N,N],[17,"CRL_REASON","","",N,N],[17,"INVALIDITY_DATE","","",N,N],[17,"DELTA_CRL","","",N,N],[17,"ISSUING_DISTRIBUTION_POINT","","",N,N],[17,"CERTIFICATE_ISSUER","","",N,N],[17,"NAME_CONSTRAINTS","","",N,N],[17,"CRL_DISTRIBUTION_POINTS","","",N,N],[17,"CERTIFICATE_POLICIES","","",N,N],[17,"ANY_POLICY","","",N,N],[17,"POLICY_MAPPINGS","","",N,N],[17,"AUTHORITY_KEY_IDENTIFIER","","",N,N],[17,"POLICY_CONSTRAINTS","","",N,N],[17,"EXT_KEY_USAGE","","",N,N],[17,"FRESHEST_CRL","","",N,N],[17,"INHIBIT_ANY_POLICY","","",N,N],[17,"TARGET_INFORMATION","","",N,N],[17,"NO_REV_AVAIL","","",N,N],[17,"ANYEXTENDEDKEYUSAGE","","",N,N],[17,"NETSCAPE","","",N,N],[17,"NETSCAPE_CERT_EXTENSION","","",N,N],[17,"NETSCAPE_DATA_TYPE","","",N,N],[17,"NETSCAPE_CERT_TYPE","","",N,N],[17,"NETSCAPE_BASE_URL","","",N,N],[17,"NETSCAPE_REVOCATION_URL","","",N,N],[17,"NETSCAPE_CA_REVOCATION_URL","","",N,N],[17,"NETSCAPE_RENEWAL_URL","","",N,N],[17,"NETSCAPE_CA_POLICY_URL","","",N,N],[17,"NETSCAPE_SSL_SERVER_NAME","","",N,N],[17,"NETSCAPE_COMMENT","","",N,N],[17,"NETSCAPE_CERT_SEQUENCE","","",N,N],[17,"NS_SGC","","",N,N],[17,"ORG","","",N,N],[17,"DOD","","",N,N],[17,"IANA","","",N,N],[17,"DIRECTORY","","",N,N],[17,"MANAGEMENT","","",N,N],[17,"EXPERIMENTAL","","",N,N],[17,"PRIVATE","","",N,N],[17,"SECURITY","","",N,N],[17,"SNMPV2","","",N,N],[17,"MAIL","","",N,N],[17,"ENTERPRISES","","",N,N],[17,"DCOBJECT","","",N,N],[17,"MIME_MHS","","",N,N],[17,"MIME_MHS_HEADINGS","","",N,N],[17,"MIME_MHS_BODIES","","",N,N],[17,"ID_HEX_PARTIAL_MESSAGE","","",N,N],[17,"ID_HEX_MULTIPART_MESSAGE","","",N,N],[17,"ZLIB_COMPRESSION","","",N,N],[17,"AES_128_ECB","","",N,N],[17,"AES_128_CBC","","",N,N],[17,"AES_128_OFB128","","",N,N],[17,"AES_128_CFB128","","",N,N],[17,"ID_AES128_WRAP","","",N,N],[17,"AES_128_GCM","","",N,N],[17,"AES_128_CCM","","",N,N],[17,"ID_AES128_WRAP_PAD","","",N,N],[17,"AES_192_ECB","","",N,N],[17,"AES_192_CBC","","",N,N],[17,"AES_192_OFB128","","",N,N],[17,"AES_192_CFB128","","",N,N],[17,"ID_AES192_WRAP","","",N,N],[17,"AES_192_GCM","","",N,N],[17,"AES_192_CCM","","",N,N],[17,"ID_AES192_WRAP_PAD","","",N,N],[17,"AES_256_ECB","","",N,N],[17,"AES_256_CBC","","",N,N],[17,"AES_256_OFB128","","",N,N],[17,"AES_256_CFB128","","",N,N],[17,"ID_AES256_WRAP","","",N,N],[17,"AES_256_GCM","","",N,N],[17,"AES_256_CCM","","",N,N],[17,"ID_AES256_WRAP_PAD","","",N,N],[17,"AES_128_CFB1","","",N,N],[17,"AES_192_CFB1","","",N,N],[17,"AES_256_CFB1","","",N,N],[17,"AES_128_CFB8","","",N,N],[17,"AES_192_CFB8","","",N,N],[17,"AES_256_CFB8","","",N,N],[17,"AES_128_CTR","","",N,N],[17,"AES_192_CTR","","",N,N],[17,"AES_256_CTR","","",N,N],[17,"AES_128_XTS","","",N,N],[17,"AES_256_XTS","","",N,N],[17,"DES_CFB1","","",N,N],[17,"DES_CFB8","","",N,N],[17,"DES_EDE3_CFB1","","",N,N],[17,"DES_EDE3_CFB8","","",N,N],[17,"SHA256","","",N,N],[17,"SHA384","","",N,N],[17,"SHA512","","",N,N],[17,"SHA224","","",N,N],[17,"DSA_WITH_SHA224","","",N,N],[17,"DSA_WITH_SHA256","","",N,N],[17,"HOLD_INSTRUCTION_CODE","","",N,N],[17,"HOLD_INSTRUCTION_NONE","","",N,N],[17,"HOLD_INSTRUCTION_CALL_ISSUER","","",N,N],[17,"HOLD_INSTRUCTION_REJECT","","",N,N],[17,"DATA","","",N,N],[17,"PSS","","",N,N],[17,"UCL","","",N,N],[17,"PILOT","","",N,N],[17,"PILOTATTRIBUTETYPE","","",N,N],[17,"PILOTATTRIBUTESYNTAX","","",N,N],[17,"PILOTOBJECTCLASS","","",N,N],[17,"PILOTGROUPS","","",N,N],[17,"IA5STRINGSYNTAX","","",N,N],[17,"CASEIGNOREIA5STRINGSYNTAX","","",N,N],[17,"PILOTOBJECT","","",N,N],[17,"PILOTPERSON","","",N,N],[17,"ACCOUNT","","",N,N],[17,"DOCUMENT","","",N,N],[17,"ROOM","","",N,N],[17,"DOCUMENTSERIES","","",N,N],[17,"DOMAIN","","",N,N],[17,"RFC822LOCALPART","","",N,N],[17,"DNSDOMAIN","","",N,N],[17,"DOMAINRELATEDOBJECT","","",N,N],[17,"FRIENDLYCOUNTRY","","",N,N],[17,"SIMPLESECURITYOBJECT","","",N,N],[17,"PILOTORGANIZATION","","",N,N],[17,"PILOTDSA","","",N,N],[17,"QUALITYLABELLEDDATA","","",N,N],[17,"USERID","","",N,N],[17,"TEXTENCODEDORADDRESS","","",N,N],[17,"RFC822MAILBOX","","",N,N],[17,"INFO","","",N,N],[17,"FAVOURITEDRINK","","",N,N],[17,"ROOMNUMBER","","",N,N],[17,"PHOTO","","",N,N],[17,"USERCLASS","","",N,N],[17,"HOST","","",N,N],[17,"MANAGER","","",N,N],[17,"DOCUMENTIDENTIFIER","","",N,N],[17,"DOCUMENTTITLE","","",N,N],[17,"DOCUMENTVERSION","","",N,N],[17,"DOCUMENTAUTHOR","","",N,N],[17,"DOCUMENTLOCATION","","",N,N],[17,"HOMETELEPHONENUMBER","","",N,N],[17,"SECRETARY","","",N,N],[17,"OTHERMAILBOX","","",N,N],[17,"LASTMODIFIEDTIME","","",N,N],[17,"LASTMODIFIEDBY","","",N,N],[17,"DOMAINCOMPONENT","","",N,N],[17,"ARECORD","","",N,N],[17,"PILOTATTRIBUTETYPE27","","",N,N],[17,"MXRECORD","","",N,N],[17,"NSRECORD","","",N,N],[17,"SOARECORD","","",N,N],[17,"CNAMERECORD","","",N,N],[17,"ASSOCIATEDDOMAIN","","",N,N],[17,"ASSOCIATEDNAME","","",N,N],[17,"HOMEPOSTALADDRESS","","",N,N],[17,"PERSONALTITLE","","",N,N],[17,"MOBILETELEPHONENUMBER","","",N,N],[17,"PAGERTELEPHONENUMBER","","",N,N],[17,"FRIENDLYCOUNTRYNAME","","",N,N],[17,"ORGANIZATIONALSTATUS","","",N,N],[17,"JANETMAILBOX","","",N,N],[17,"MAILPREFERENCEOPTION","","",N,N],[17,"BUILDINGNAME","","",N,N],[17,"DSAQUALITY","","",N,N],[17,"SINGLELEVELQUALITY","","",N,N],[17,"SUBTREEMINIMUMQUALITY","","",N,N],[17,"SUBTREEMAXIMUMQUALITY","","",N,N],[17,"PERSONALSIGNATURE","","",N,N],[17,"DITREDIRECT","","",N,N],[17,"AUDIO","","",N,N],[17,"DOCUMENTPUBLISHER","","",N,N],[17,"ID_SET","","",N,N],[17,"SET_CTYPE","","",N,N],[17,"SET_MSGEXT","","",N,N],[17,"SET_ATTR","","",N,N],[17,"SET_POLICY","","",N,N],[17,"SET_CERTEXT","","",N,N],[17,"SET_BRAND","","",N,N],[17,"SETCT_PANDATA","","",N,N],[17,"SETCT_PANTOKEN","","",N,N],[17,"SETCT_PANONLY","","",N,N],[17,"SETCT_OIDATA","","",N,N],[17,"SETCT_PI","","",N,N],[17,"SETCT_PIDATA","","",N,N],[17,"SETCT_PIDATAUNSIGNED","","",N,N],[17,"SETCT_HODINPUT","","",N,N],[17,"SETCT_AUTHRESBAGGAGE","","",N,N],[17,"SETCT_AUTHREVREQBAGGAGE","","",N,N],[17,"SETCT_AUTHREVRESBAGGAGE","","",N,N],[17,"SETCT_CAPTOKENSEQ","","",N,N],[17,"SETCT_PINITRESDATA","","",N,N],[17,"SETCT_PI_TBS","","",N,N],[17,"SETCT_PRESDATA","","",N,N],[17,"SETCT_AUTHREQTBS","","",N,N],[17,"SETCT_AUTHRESTBS","","",N,N],[17,"SETCT_AUTHRESTBSX","","",N,N],[17,"SETCT_AUTHTOKENTBS","","",N,N],[17,"SETCT_CAPTOKENDATA","","",N,N],[17,"SETCT_CAPTOKENTBS","","",N,N],[17,"SETCT_ACQCARDCODEMSG","","",N,N],[17,"SETCT_AUTHREVREQTBS","","",N,N],[17,"SETCT_AUTHREVRESDATA","","",N,N],[17,"SETCT_AUTHREVRESTBS","","",N,N],[17,"SETCT_CAPREQTBS","","",N,N],[17,"SETCT_CAPREQTBSX","","",N,N],[17,"SETCT_CAPRESDATA","","",N,N],[17,"SETCT_CAPREVREQTBS","","",N,N],[17,"SETCT_CAPREVREQTBSX","","",N,N],[17,"SETCT_CAPREVRESDATA","","",N,N],[17,"SETCT_CREDREQTBS","","",N,N],[17,"SETCT_CREDREQTBSX","","",N,N],[17,"SETCT_CREDRESDATA","","",N,N],[17,"SETCT_CREDREVREQTBS","","",N,N],[17,"SETCT_CREDREVREQTBSX","","",N,N],[17,"SETCT_CREDREVRESDATA","","",N,N],[17,"SETCT_PCERTREQDATA","","",N,N],[17,"SETCT_PCERTRESTBS","","",N,N],[17,"SETCT_BATCHADMINREQDATA","","",N,N],[17,"SETCT_BATCHADMINRESDATA","","",N,N],[17,"SETCT_CARDCINITRESTBS","","",N,N],[17,"SETCT_MEAQCINITRESTBS","","",N,N],[17,"SETCT_REGFORMRESTBS","","",N,N],[17,"SETCT_CERTREQDATA","","",N,N],[17,"SETCT_CERTREQTBS","","",N,N],[17,"SETCT_CERTRESDATA","","",N,N],[17,"SETCT_CERTINQREQTBS","","",N,N],[17,"SETCT_ERRORTBS","","",N,N],[17,"SETCT_PIDUALSIGNEDTBE","","",N,N],[17,"SETCT_PIUNSIGNEDTBE","","",N,N],[17,"SETCT_AUTHREQTBE","","",N,N],[17,"SETCT_AUTHRESTBE","","",N,N],[17,"SETCT_AUTHRESTBEX","","",N,N],[17,"SETCT_AUTHTOKENTBE","","",N,N],[17,"SETCT_CAPTOKENTBE","","",N,N],[17,"SETCT_CAPTOKENTBEX","","",N,N],[17,"SETCT_ACQCARDCODEMSGTBE","","",N,N],[17,"SETCT_AUTHREVREQTBE","","",N,N],[17,"SETCT_AUTHREVRESTBE","","",N,N],[17,"SETCT_AUTHREVRESTBEB","","",N,N],[17,"SETCT_CAPREQTBE","","",N,N],[17,"SETCT_CAPREQTBEX","","",N,N],[17,"SETCT_CAPRESTBE","","",N,N],[17,"SETCT_CAPREVREQTBE","","",N,N],[17,"SETCT_CAPREVREQTBEX","","",N,N],[17,"SETCT_CAPREVRESTBE","","",N,N],[17,"SETCT_CREDREQTBE","","",N,N],[17,"SETCT_CREDREQTBEX","","",N,N],[17,"SETCT_CREDRESTBE","","",N,N],[17,"SETCT_CREDREVREQTBE","","",N,N],[17,"SETCT_CREDREVREQTBEX","","",N,N],[17,"SETCT_CREDREVRESTBE","","",N,N],[17,"SETCT_BATCHADMINREQTBE","","",N,N],[17,"SETCT_BATCHADMINRESTBE","","",N,N],[17,"SETCT_REGFORMREQTBE","","",N,N],[17,"SETCT_CERTREQTBE","","",N,N],[17,"SETCT_CERTREQTBEX","","",N,N],[17,"SETCT_CERTRESTBE","","",N,N],[17,"SETCT_CRLNOTIFICATIONTBS","","",N,N],[17,"SETCT_CRLNOTIFICATIONRESTBS","","",N,N],[17,"SETCT_BCIDISTRIBUTIONTBS","","",N,N],[17,"SETEXT_GENCRYPT","","",N,N],[17,"SETEXT_MIAUTH","","",N,N],[17,"SETEXT_PINSECURE","","",N,N],[17,"SETEXT_PINANY","","",N,N],[17,"SETEXT_TRACK2","","",N,N],[17,"SETEXT_CV","","",N,N],[17,"SET_POLICY_ROOT","","",N,N],[17,"SETCEXT_HASHEDROOT","","",N,N],[17,"SETCEXT_CERTTYPE","","",N,N],[17,"SETCEXT_MERCHDATA","","",N,N],[17,"SETCEXT_CCERTREQUIRED","","",N,N],[17,"SETCEXT_TUNNELING","","",N,N],[17,"SETCEXT_SETEXT","","",N,N],[17,"SETCEXT_SETQUALF","","",N,N],[17,"SETCEXT_PGWYCAPABILITIES","","",N,N],[17,"SETCEXT_TOKENIDENTIFIER","","",N,N],[17,"SETCEXT_TRACK2DATA","","",N,N],[17,"SETCEXT_TOKENTYPE","","",N,N],[17,"SETCEXT_ISSUERCAPABILITIES","","",N,N],[17,"SETATTR_CERT","","",N,N],[17,"SETATTR_PGWYCAP","","",N,N],[17,"SETATTR_TOKENTYPE","","",N,N],[17,"SETATTR_ISSCAP","","",N,N],[17,"SET_ROOTKEYTHUMB","","",N,N],[17,"SET_ADDPOLICY","","",N,N],[17,"SETATTR_TOKEN_EMV","","",N,N],[17,"SETATTR_TOKEN_B0PRIME","","",N,N],[17,"SETATTR_ISSCAP_CVM","","",N,N],[17,"SETATTR_ISSCAP_T2","","",N,N],[17,"SETATTR_ISSCAP_SIG","","",N,N],[17,"SETATTR_GENCRYPTGRM","","",N,N],[17,"SETATTR_T2ENC","","",N,N],[17,"SETATTR_T2CLEARTXT","","",N,N],[17,"SETATTR_TOKICCSIG","","",N,N],[17,"SETATTR_SECDEVSIG","","",N,N],[17,"SET_BRAND_IATA_ATA","","",N,N],[17,"SET_BRAND_DINERS","","",N,N],[17,"SET_BRAND_AMERICANEXPRESS","","",N,N],[17,"SET_BRAND_JCB","","",N,N],[17,"SET_BRAND_VISA","","",N,N],[17,"SET_BRAND_MASTERCARD","","",N,N],[17,"SET_BRAND_NOVUS","","",N,N],[17,"DES_CDMF","","",N,N],[17,"RSAOAEPENCRYPTIONSET","","",N,N],[17,"IPSEC3","","",N,N],[17,"IPSEC4","","",N,N],[17,"WHIRLPOOL","","",N,N],[17,"CRYPTOPRO","","",N,N],[17,"CRYPTOCOM","","",N,N],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001","","",N,N],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94","","",N,N],[17,"ID_GOSTR3411_94","","",N,N],[17,"ID_HMACGOSTR3411_94","","",N,N],[17,"ID_GOSTR3410_2001","","",N,N],[17,"ID_GOSTR3410_94","","",N,N],[17,"ID_GOST28147_89","","",N,N],[17,"GOST89_CNT","","",N,N],[17,"ID_GOST28147_89_MAC","","",N,N],[17,"ID_GOSTR3411_94_PRF","","",N,N],[17,"ID_GOSTR3410_2001DH","","",N,N],[17,"ID_GOSTR3410_94DH","","",N,N],[17,"ID_GOST28147_89_CRYPTOPRO_KEYMESHING","","",N,N],[17,"ID_GOST28147_89_NONE_KEYMESHING","","",N,N],[17,"ID_GOSTR3411_94_TESTPARAMSET","","",N,N],[17,"ID_GOSTR3411_94_CRYPTOPROPARAMSET","","",N,N],[17,"ID_GOST28147_89_TESTPARAMSET","","",N,N],[17,"ID_GOST28147_89_CRYPTOPRO_A_PARAMSET","","",N,N],[17,"ID_GOST28147_89_CRYPTOPRO_B_PARAMSET","","",N,N],[17,"ID_GOST28147_89_CRYPTOPRO_C_PARAMSET","","",N,N],[17,"ID_GOST28147_89_CRYPTOPRO_D_PARAMSET","","",N,N],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_1_PARAMSET","","",N,N],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_0_PARAMSET","","",N,N],[17,"ID_GOST28147_89_CRYPTOPRO_RIC_1_PARAMSET","","",N,N],[17,"ID_GOSTR3410_94_TESTPARAMSET","","",N,N],[17,"ID_GOSTR3410_94_CRYPTOPRO_A_PARAMSET","","",N,N],[17,"ID_GOSTR3410_94_CRYPTOPRO_B_PARAMSET","","",N,N],[17,"ID_GOSTR3410_94_CRYPTOPRO_C_PARAMSET","","",N,N],[17,"ID_GOSTR3410_94_CRYPTOPRO_D_PARAMSET","","",N,N],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHA_PARAMSET","","",N,N],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHB_PARAMSET","","",N,N],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHC_PARAMSET","","",N,N],[17,"ID_GOSTR3410_2001_TESTPARAMSET","","",N,N],[17,"ID_GOSTR3410_2001_CRYPTOPRO_A_PARAMSET","","",N,N],[17,"ID_GOSTR3410_2001_CRYPTOPRO_B_PARAMSET","","",N,N],[17,"ID_GOSTR3410_2001_CRYPTOPRO_C_PARAMSET","","",N,N],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHA_PARAMSET","","",N,N],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHB_PARAMSET","","",N,N],[17,"ID_GOSTR3410_94_A","","",N,N],[17,"ID_GOSTR3410_94_ABIS","","",N,N],[17,"ID_GOSTR3410_94_B","","",N,N],[17,"ID_GOSTR3410_94_BBIS","","",N,N],[17,"ID_GOST28147_89_CC","","",N,N],[17,"ID_GOSTR3410_94_CC","","",N,N],[17,"ID_GOSTR3410_2001_CC","","",N,N],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94_CC","","",N,N],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001_CC","","",N,N],[17,"ID_GOSTR3410_2001_PARAMSET_CC","","",N,N],[17,"CAMELLIA_128_CBC","","",N,N],[17,"CAMELLIA_192_CBC","","",N,N],[17,"CAMELLIA_256_CBC","","",N,N],[17,"ID_CAMELLIA128_WRAP","","",N,N],[17,"ID_CAMELLIA192_WRAP","","",N,N],[17,"ID_CAMELLIA256_WRAP","","",N,N],[17,"CAMELLIA_128_ECB","","",N,N],[17,"CAMELLIA_128_OFB128","","",N,N],[17,"CAMELLIA_128_CFB128","","",N,N],[17,"CAMELLIA_192_ECB","","",N,N],[17,"CAMELLIA_192_OFB128","","",N,N],[17,"CAMELLIA_192_CFB128","","",N,N],[17,"CAMELLIA_256_ECB","","",N,N],[17,"CAMELLIA_256_OFB128","","",N,N],[17,"CAMELLIA_256_CFB128","","",N,N],[17,"CAMELLIA_128_CFB1","","",N,N],[17,"CAMELLIA_192_CFB1","","",N,N],[17,"CAMELLIA_256_CFB1","","",N,N],[17,"CAMELLIA_128_CFB8","","",N,N],[17,"CAMELLIA_192_CFB8","","",N,N],[17,"CAMELLIA_256_CFB8","","",N,N],[17,"KISA","","",N,N],[17,"SEED_ECB","","",N,N],[17,"SEED_CBC","","",N,N],[17,"SEED_CFB128","","",N,N],[17,"SEED_OFB128","","",N,N],[17,"HMAC","","",N,N],[17,"CMAC","","",N,N],[17,"RC4_HMAC_MD5","","",N,N],[17,"AES_128_CBC_HMAC_SHA1","","",N,N],[17,"AES_192_CBC_HMAC_SHA1","","",N,N],[17,"AES_256_CBC_HMAC_SHA1","","",N,N],[11,"from_raw","","",27,[[["c_int"]],["nid"]]],[11,"as_raw","","",27,[[["self"]],["c_int"]]],[0,"ocsp","openssl","",N,N],[3,"Flag","openssl::ocsp","",N,N],[3,"OcspResponseStatus","","",N,N],[3,"OcspCertStatus","","",N,N],[3,"OcspRevokedStatus","","",N,N],[3,"Status","","",N,N],[12,"status","","The overall status of the response.",28,N],[12,"reason","","If `status` is `CERT_STATUS_REVOKED`, the reason for the revocation.",28,N],[12,"revocation_time","","If `status` is `CERT_STATUS_REVOKED`, the time at which the certificate was revoked.",28,N],[12,"this_update","","The time that this revocation check was performed.",28,N],[12,"next_update","","The time at which this revocation check expires.",28,N],[3,"OcspBasicResponse","","",N,N],[3,"OcspBasicResponseRef","","",N,N],[3,"OcspCertId","","",N,N],[3,"OcspCertIdRef","","",N,N],[3,"OcspResponse","","",N,N],[3,"OcspResponseRef","","",N,N],[3,"OcspRequest","","",N,N],[3,"OcspRequestRef","","",N,N],[3,"OcspOneReq","","",N,N],[3,"OcspOneReqRef","","",N,N],[17,"FLAG_NO_CERTS","","",N,N],[17,"FLAG_NO_INTERN","","",N,N],[17,"FLAG_NO_CHAIN","","",N,N],[17,"FLAG_NO_VERIFY","","",N,N],[17,"FLAG_NO_EXPLICIT","","",N,N],[17,"FLAG_NO_CA_SIGN","","",N,N],[17,"FLAG_NO_DELEGATED","","",N,N],[17,"FLAG_NO_CHECKS","","",N,N],[17,"FLAG_TRUST_OTHER","","",N,N],[17,"FLAG_RESPID_KEY","","",N,N],[17,"FLAG_NO_TIME","","",N,N],[17,"RESPONSE_STATUS_SUCCESSFUL","","",N,N],[17,"RESPONSE_STATUS_MALFORMED_REQUEST","","",N,N],[17,"RESPONSE_STATUS_INTERNAL_ERROR","","",N,N],[17,"RESPONSE_STATUS_TRY_LATER","","",N,N],[17,"RESPONSE_STATUS_SIG_REQUIRED","","",N,N],[17,"RESPONSE_STATUS_UNAUTHORIZED","","",N,N],[17,"CERT_STATUS_GOOD","","",N,N],[17,"CERT_STATUS_REVOKED","","",N,N],[17,"CERT_STATUS_UNKNOWN","","",N,N],[17,"REVOKED_STATUS_NO_STATUS","","",N,N],[17,"REVOKED_STATUS_UNSPECIFIED","","",N,N],[17,"REVOKED_STATUS_KEY_COMPROMISE","","",N,N],[17,"REVOKED_STATUS_CA_COMPROMISE","","",N,N],[17,"REVOKED_STATUS_AFFILIATION_CHANGED","","",N,N],[17,"REVOKED_STATUS_SUPERSEDED","","",N,N],[17,"REVOKED_STATUS_CESSATION_OF_OPERATION","","",N,N],[17,"REVOKED_STATUS_CERTIFICATE_HOLD","","",N,N],[17,"REVOKED_STATUS_REMOVE_FROM_CRL","","",N,N],[11,"empty","","Returns an empty set of flags.",29,[[],["flag"]]],[11,"all","","Returns the set containing all flags.",29,[[],["flag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",29,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",29,[[["c_ulong"]],["option",["flag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",29,[[["c_ulong"]],["flag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",29,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,[[["self"],["flag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,[[["self"],["flag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",29,[[["self"],["flag"]]]],[11,"remove","","Removes the specified flags in-place.",29,[[["self"],["flag"]]]],[11,"toggle","","Toggles the specified flags in-place.",29,[[["self"],["flag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",29,[[["self"],["flag"],["bool"]]]],[11,"from_raw","","",30,[[["c_int"]],["ocspresponsestatus"]]],[11,"as_raw","","",30,[[["self"]],["c_int"]]],[11,"from_raw","","",31,[[["c_int"]],["ocspcertstatus"]]],[11,"as_raw","","",31,[[["self"]],["c_int"]]],[11,"from_raw","","",32,[[["c_int"]],["ocsprevokedstatus"]]],[11,"as_raw","","",32,[[["self"]],["c_int"]]],[11,"check_validity","","Checks validity of the `this_update` and `next_update` fields.",28,[[["self"],["u32"],["option",["u32"]]],["result",["errorstack"]]]],[11,"verify","","Verifies the validity of the response.",33,[[["self"],["stackref"],["x509storeref"],["flag"]],["result",["errorstack"]]]],[11,"find_status","","Looks up the status for the specified certificate ID.",33,[[["self"],["ocspcertidref"]],["option",["status"]]]],[11,"from_cert","","Constructs a certificate ID for certificate `subject`.",34,[[["messagedigest"],["x509ref"],["x509ref"]],["result",["ocspcertid","errorstack"]]]],[11,"create","","Creates an OCSP response from the status and optional body.",35,[[["ocspresponsestatus"],["option",["ocspbasicresponseref"]]],["result",["ocspresponse","errorstack"]]]],[11,"from_der","","Deserializes a value from DER-formatted data.",35,N],[11,"to_der","","Serializes this value to DER.",36,[[["self"]],["result",["vec","errorstack"]]]],[11,"status","","Returns the status of the response.",36,[[["self"]],["ocspresponsestatus"]]],[11,"basic","","Returns the basic response.",36,[[["self"]],["result",["ocspbasicresponse","errorstack"]]]],[11,"new","","",37,[[],["result",["ocsprequest","errorstack"]]]],[11,"from_der","","Deserializes a value from DER-formatted data.",37,N],[11,"to_der","","Serializes this value to DER.",38,[[["self"]],["result",["vec","errorstack"]]]],[11,"add_id","","",38,[[["self"],["ocspcertid"]],["result",["ocsponereqref","errorstack"]]]],[0,"pkcs12","openssl","PKCS #12 archives.",N,N],[3,"Pkcs12","openssl::pkcs12","",N,N],[3,"Pkcs12Ref","","",N,N],[3,"ParsedPkcs12","","",N,N],[12,"pkey","","",39,N],[12,"cert","","",39,N],[12,"chain","","",39,N],[3,"Pkcs12Builder","","",N,N],[11,"to_der","","Serializes this value to DER.",40,[[["self"]],["result",["vec","errorstack"]]]],[11,"parse","","Extracts the contents of the `Pkcs12`.",40,[[["self"],["str"]],["result",["parsedpkcs12","errorstack"]]]],[11,"from_der","","Deserializes a value from DER-formatted data.",41,N],[11,"builder","","Creates a new builder for a protected pkcs12 certificate.",41,[[],["pkcs12builder"]]],[11,"key_algorithm","","The encryption algorithm that should be used for the key",42,[[["self"],["nid"]],["self"]]],[11,"cert_algorithm","","The encryption algorithm that should be used for the cert",42,[[["self"],["nid"]],["self"]]],[11,"key_iter","","Key iteration count, default is 2048 as of this writing",42,[[["self"],["u32"]],["self"]]],[11,"mac_iter","","MAC iteration count, default is the same as key_iter.",42,[[["self"],["u32"]],["self"]]],[11,"ca","","An additional set of certificates to include in the archive beyond the one provided to `build`.",42,[[["self"],["stack",["x509"]]],["self"]]],[11,"build","","Builds the PKCS #12 object",42,[[["self"],["str"],["str"],["pkeyref"],["x509"]],["result",["pkcs12","errorstack"]]]],[0,"pkcs5","openssl","",N,N],[3,"KeyIvPair","openssl::pkcs5","",N,N],[12,"key","","",43,N],[12,"iv","","",43,N],[5,"bytes_to_key","","Derives a key and an IV from various parameters.",N,N],[5,"pbkdf2_hmac","","Derives a key from a password and salt using the PBKDF2-HMAC algorithm with a digest function.",N,N],[0,"pkey","openssl","",N,N],[3,"PKey","openssl::pkey","",N,N],[3,"PKeyRef","","",N,N],[3,"PKeyCtx","","",N,N],[3,"PKeyCtxRef","","",N,N],[11,"rsa","","Returns a copy of the internal RSA key.",44,[[["self"]],["result",["rsa","errorstack"]]]],[11,"dsa","","Returns a copy of the internal DSA key.",44,[[["self"]],["result",["dsa","errorstack"]]]],[11,"dh","","Returns a copy of the internal DH key.",44,[[["self"]],["result",["dh","errorstack"]]]],[11,"ec_key","","Returns a copy of the internal elliptic curve key.",44,[[["self"]],["result",["eckey","errorstack"]]]],[11,"public_key_to_pem","","Serializes a public key to PEM.",44,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem","","Serializes the private key to PEM.",44,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",44,N],[11,"private_key_to_der","","Serializes the private key to DER.",44,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der","","Serializes the public key to DER.",44,[[["self"]],["result",["vec","errorstack"]]]],[11,"bits","","Returns the size of the key.",44,[[["self"]],["u32"]]],[11,"public_eq","","Compares the public component of this key with another.",44,[[["self"],["pkeyref"]],["bool"]]],[11,"from_rsa","","Creates a new `PKey` containing an RSA key.",45,[[["rsa"]],["result",["pkey","errorstack"]]]],[11,"from_dsa","","Creates a new `PKey` containing a DSA key.",45,[[["dsa"]],["result",["pkey","errorstack"]]]],[11,"from_dh","","Creates a new `PKey` containing a Diffie-Hellman key.",45,[[["dh"]],["result",["pkey","errorstack"]]]],[11,"from_ec_key","","Creates a new `PKey` containing an elliptic curve key.",45,[[["eckey"]],["result",["pkey","errorstack"]]]],[11,"hmac","","Creates a new `PKey` containing an HMAC key.",45,N],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",45,N],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",45,N],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",45,N],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",45,N],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",45,N],[11,"private_key_from_pkcs8_callback","","Deserializes a DER-formatted PKCS#8 private key, using a callback to retrieve the password if the key is encrpyted.",45,N],[11,"private_key_from_pkcs8_passphrase","","Deserializes a DER-formatted PKCS#8 private key, using the supplied password if the key is encrypted.",45,N],[11,"private_key_from_pem_cb","","",45,N],[11,"from_pkey","","",46,[[["pkeyref"]],["result",["pkeyctx","errorstack"]]]],[11,"set_rsa_padding","","",47,[[["self"],["padding"]],["result",["errorstack"]]]],[11,"rsa_padding","","",47,[[["self"]],["result",["padding","errorstack"]]]],[11,"derive_init","","",47,[[["self"]],["result",["errorstack"]]]],[11,"derive_set_peer","","",47,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"derive","","",47,[[["self"]],["result",["vec","errorstack"]]]],[0,"rand","openssl","",N,N],[5,"rand_bytes","openssl::rand","",N,N],[0,"rsa","openssl","",N,N],[3,"Padding","openssl::rsa","Type of encryption padding to use.",N,N],[3,"Rsa","","",N,N],[3,"RsaRef","","",N,N],[17,"NO_PADDING","","",N,N],[17,"PKCS1_PADDING","","",N,N],[17,"PKCS1_OAEP_PADDING","","",N,N],[11,"from_raw","","",48,[[["c_int"]],["padding"]]],[11,"as_raw","","",48,[[["self"]],["c_int"]]],[11,"private_key_to_pem","","Serializes the private key to PEM.",49,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",49,N],[11,"public_key_to_pem","","Serializes a public key to PEM.",49,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_der","","Serializes the private key to DER.",49,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der","","Serializes the public key to DER.",49,[[["self"]],["result",["vec","errorstack"]]]],[11,"size","","",49,[[["self"]],["usize"]]],[11,"private_decrypt","","Decrypts data using the private key, returning the number of decrypted bytes.",49,N],[11,"private_encrypt","","Encrypts data using the private key, returning the number of encrypted bytes.",49,N],[11,"public_decrypt","","Decrypts data using the public key, returning the number of decrypted bytes.",49,N],[11,"public_encrypt","","Encrypts data using the private key, returning the number of encrypted bytes.",49,N],[11,"n","","",49,[[["self"]],["option",["bignumref"]]]],[11,"d","","",49,[[["self"]],["option",["bignumref"]]]],[11,"e","","",49,[[["self"]],["option",["bignumref"]]]],[11,"p","","",49,[[["self"]],["option",["bignumref"]]]],[11,"q","","",49,[[["self"]],["option",["bignumref"]]]],[11,"from_public_components","","only useful for associating the key material directly with the key, it's safer to use the supplied load and save methods for DER formatted keys.",50,[[["bignum"],["bignum"]],["result",["rsa","errorstack"]]]],[11,"from_private_components","","",50,[[["bignum"],["bignum"],["bignum"],["bignum"],["bignum"],["bignum"],["bignum"],["bignum"]],["result",["rsa","errorstack"]]]],[11,"generate","","Generates a public/private key pair with the specified size.",50,[[["u32"]],["result",["rsa","errorstack"]]]],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",50,N],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",50,N],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",50,N],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",50,N],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",50,N],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",50,N],[11,"private_key_from_pem_cb","","",50,N],[0,"sign","openssl","Message signatures.",N,N],[3,"Signer","openssl::sign","",N,N],[3,"Verifier","","",N,N],[11,"new","","",51,[[["messagedigest"],["pkeyref"]],["result",["signer","errorstack"]]]],[11,"pkey_ctx","","",51,[[["self"]],["pkeyctxref"]]],[11,"pkey_ctx_mut","","",51,[[["self"]],["pkeyctxref"]]],[11,"update","","",51,N],[11,"finish","","",51,[[["self"]],["result",["vec","errorstack"]]]],[11,"new","","",52,[[["messagedigest"],["pkeyref"]],["result",["verifier","errorstack"]]]],[11,"pkey_ctx","","",52,[[["self"]],["pkeyctxref"]]],[11,"pkey_ctx_mut","","",52,[[["self"]],["pkeyctxref"]]],[11,"update","","",52,N],[11,"finish","","",52,N],[0,"sha","openssl","The SHA family of hashes.",N,N],[5,"sha1","openssl::sha","Computes the SHA1 hash of some data.",N,N],[5,"sha224","","Computes the SHA224 hash of some data.",N,N],[5,"sha256","","Computes the SHA256 hash of some data.",N,N],[5,"sha384","","Computes the SHA384 hash of some data.",N,N],[5,"sha512","","Computes the SHA512 hash of some data.",N,N],[0,"ssl","openssl","SSL/TLS support.",N,N],[3,"SslConnectorBuilder","openssl::ssl","A builder for `SslConnector`s.",N,N],[3,"SslConnector","","A type which wraps client-side streams in a TLS session.",N,N],[3,"SslAcceptorBuilder","","A builder for `SslAcceptor`s.",N,N],[3,"SslAcceptor","","A type which wraps server-side streams in a TLS session.",N,N],[3,"SslOption","","",N,N],[3,"SslMode","","",N,N],[3,"SslMethod","","",N,N],[3,"SslVerifyMode","","",N,N],[3,"StatusType","","",N,N],[3,"SslContextBuilder","","A builder for `SslContext`s.",N,N],[3,"SslContext","","",N,N],[3,"SslContextRef","","",N,N],[3,"CipherBits","","",N,N],[12,"secret","","The number of secret bits used for the cipher.",53,N],[12,"algorithm","","The number of bits processed by the chosen algorithm.",53,N],[3,"SslCipher","","",N,N],[3,"SslCipherRef","","",N,N],[3,"SslSession","","",N,N],[3,"SslSessionRef","","",N,N],[3,"Ssl","","",N,N],[3,"SslRef","","",N,N],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",N,N],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",N,N],[4,"Error","","An SSL error.",N,N],[13,"ZeroReturn","","The SSL session has been closed by the other end",54,N],[13,"WantRead","","An attempt to read data from the underlying socket returned `WouldBlock`. Wait for read readiness and reattempt the operation.",54,N],[13,"WantWrite","","An attempt to write data from the underlying socket returned `WouldBlock`. Wait for write readiness and reattempt the operation.",54,N],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",54,N],[13,"Stream","","An error reported by the underlying stream.",54,N],[13,"Ssl","","An error in the OpenSSL library.",54,N],[4,"HandshakeError","","An error or intermediate state after a TLS handshake attempt.",N,N],[13,"SetupFailure","","Setup failed.",55,N],[13,"Failure","","The handshake failed.",55,N],[13,"Interrupted","","The handshake was interrupted midway through. This error will never be returned for blocking streams.",55,N],[4,"SniError","","An error returned from an SNI callback.",N,N],[13,"Fatal","","",56,N],[13,"Warning","","",56,N],[13,"NoAck","","",56,N],[4,"ShutdownResult","","The result of a shutdown request.",N,N],[13,"Sent","","A close notify message has been sent to the peer.",57,N],[13,"Received","","A close notify response message has been received from the peer.",57,N],[11,"new","","Creates a new builder for TLS connections.",58,[[["sslmethod"]],["result",["sslconnectorbuilder","errorstack"]]]],[11,"builder","","Returns a shared reference to the inner `SslContextBuilder`.",58,[[["self"]],["sslcontextbuilder"]]],[11,"builder_mut","","Returns a mutable reference to the inner `SslContextBuilder`.",58,[[["self"]],["sslcontextbuilder"]]],[11,"build","","Consumes the builder, returning a `SslConnector`.",58,[[["self"]],["sslconnector"]]],[11,"connect","","Initiates a client-side TLS session on a stream.",59,[[["self"],["str"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Initiates a client-side TLS session on a stream without performing hostname verification.",59,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"configure","","Returns a structure allowing for configuration of a single TLS session before connection.",59,[[["self"]],["result",["connectconfiguration","errorstack"]]]],[11,"mozilla_intermediate","","Creates a new builder configured to connect to non-legacy clients. This should generally be considered a reasonable default choice.",60,[[["sslmethod"],["pkeyref"],["x509ref"],["i"]],["result",["sslacceptorbuilder","errorstack"]]]],[11,"mozilla_modern","","Creates a new builder configured to connect to modern clients.",60,[[["sslmethod"],["pkeyref"],["x509ref"],["i"]],["result",["sslacceptorbuilder","errorstack"]]]],[11,"mozilla_intermediate_raw","","Like `mozilla_intermediate`, but does not load the certificate chain and private key.",60,[[["sslmethod"]],["result",["sslacceptorbuilder","errorstack"]]]],[11,"mozilla_modern_raw","","Like `mozilla_modern`, but does not load the certificate chain and private key.",60,[[["sslmethod"]],["result",["sslacceptorbuilder","errorstack"]]]],[11,"builder","","Returns a shared reference to the inner `SslContextBuilder`.",60,[[["self"]],["sslcontextbuilder"]]],[11,"builder_mut","","Returns a mutable reference to the inner `SslContextBuilder`.",60,[[["self"]],["sslcontextbuilder"]]],[11,"build","","Consumes the builder, returning a `SslAcceptor`.",60,[[["self"]],["sslacceptor"]]],[11,"accept","","Initiates a server-side TLS session on a stream.",61,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",N,N],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",N,N],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",N,N],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",N,N],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",N,N],[17,"SSL_OP_TLS_D5_BUG","","",N,N],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",N,N],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",N,N],[17,"SSL_OP_ALL","","",N,N],[17,"SSL_OP_NO_QUERY_MTU","","",N,N],[17,"SSL_OP_COOKIE_EXCHANGE","","",N,N],[17,"SSL_OP_NO_TICKET","","",N,N],[17,"SSL_OP_CISCO_ANYCONNECT","","",N,N],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",N,N],[17,"SSL_OP_NO_COMPRESSION","","",N,N],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",N,N],[17,"SSL_OP_SINGLE_ECDH_USE","","",N,N],[17,"SSL_OP_SINGLE_DH_USE","","",N,N],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",N,N],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",N,N],[17,"SSL_OP_NO_SSLV2","","",N,N],[17,"SSL_OP_NO_SSLV3","","",N,N],[17,"SSL_OP_NO_TLSV1","","",N,N],[17,"SSL_OP_NO_TLSV1_2","","",N,N],[17,"SSL_OP_NO_TLSV1_1","","",N,N],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",N,N],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",N,N],[17,"SSL_MODE_AUTO_RETRY","","",N,N],[17,"SSL_MODE_NO_AUTO_CHAIN","","",N,N],[17,"SSL_MODE_RELEASE_BUFFERS","","",N,N],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",N,N],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",N,N],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",N,N],[17,"SSL_VERIFY_PEER","","Verify that the server's certificate is trusted",N,N],[17,"SSL_VERIFY_NONE","","Do not verify the server's certificate",N,N],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","Terminate handshake if client did not return a certificate. Use together with SSL_VERIFY_PEER.",N,N],[17,"STATUS_TYPE_OCSP","","An OSCP status.",N,N],[11,"empty","","Returns an empty set of flags.",62,[[],["ssloption"]]],[11,"all","","Returns the set containing all flags.",62,[[],["ssloption"]]],[11,"bits","","Returns the raw value of the flags currently stored.",62,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",62,[[["c_ulong"]],["option",["ssloption"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",62,[[["c_ulong"]],["ssloption"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",62,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",62,[[["self"],["ssloption"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",62,[[["self"],["ssloption"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",62,[[["self"],["ssloption"]]]],[11,"remove","","Removes the specified flags in-place.",62,[[["self"],["ssloption"]]]],[11,"toggle","","Toggles the specified flags in-place.",62,[[["self"],["ssloption"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",62,[[["self"],["ssloption"],["bool"]]]],[11,"empty","","Returns an empty set of flags.",63,[[],["sslmode"]]],[11,"all","","Returns the set containing all flags.",63,[[],["sslmode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",63,[[["self"]],["c_long"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",63,[[["c_long"]],["option",["sslmode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",63,[[["c_long"]],["sslmode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",63,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",63,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",63,[[["self"],["sslmode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",63,[[["self"],["sslmode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",63,[[["self"],["sslmode"]]]],[11,"remove","","Removes the specified flags in-place.",63,[[["self"],["sslmode"]]]],[11,"toggle","","Toggles the specified flags in-place.",63,[[["self"],["sslmode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",63,[[["self"],["sslmode"],["bool"]]]],[11,"tls","","Support all versions of the TLS protocol.",64,[[],["sslmethod"]]],[11,"dtls","","Support all versions of the DTLS protocol.",64,[[],["sslmethod"]]],[11,"from_ptr","","",64,N],[11,"as_ptr","","",64,N],[11,"empty","","Returns an empty set of flags.",65,[[],["sslverifymode"]]],[11,"all","","Returns the set containing all flags.",65,[[],["sslverifymode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",65,[[["self"]],["i32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",65,[[["i32"]],["option",["sslverifymode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",65,[[["i32"]],["sslverifymode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",65,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",65,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",65,[[["self"],["sslverifymode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",65,[[["self"],["sslverifymode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",65,[[["self"],["sslverifymode"]]]],[11,"remove","","Removes the specified flags in-place.",65,[[["self"],["sslverifymode"]]]],[11,"toggle","","Toggles the specified flags in-place.",65,[[["self"],["sslverifymode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",65,[[["self"],["sslverifymode"],["bool"]]]],[11,"from_raw","","",66,[[["c_int"]],["statustype"]]],[11,"as_raw","","",66,[[["self"]],["c_int"]]],[11,"new","","",67,[[["sslmethod"]],["result",["sslcontextbuilder","errorstack"]]]],[11,"from_ptr","","",67,N],[11,"as_ptr","","",67,N],[11,"set_verify","","Configures the certificate verification method for new connections.",67,[[["self"],["sslverifymode"]]]],[11,"set_verify_callback","","Configures the certificate verification method for new connections and registers a verification callback.",67,[[["self"],["sslverifymode"],["f"]]]],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections",67,[[["self"],["f"]]]],[11,"set_verify_depth","","Sets verification depth",67,[[["self"],["u32"]]]],[11,"set_read_ahead","","",67,[[["self"],["bool"]]]],[11,"set_mode","","",67,[[["self"],["sslmode"]],["sslmode"]]],[11,"set_tmp_dh","","",67,[[["self"],["dhref"]],["result",["errorstack"]]]],[11,"set_tmp_dh_callback","","",67,[[["self"],["f"]]]],[11,"set_tmp_ecdh","","",67,[[["self"],["eckeyref"]],["result",["errorstack"]]]],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",67,[[["self"]],["result",["errorstack"]]]],[11,"set_ca_file","","Specifies the file that contains trusted CA certificates.",67,[[["self"],["p"]],["result",["errorstack"]]]],[11,"set_client_ca_list","","Sets the list of CAs sent to the client.",67,[[["self"],["stack",["x509name"]]]]],[11,"set_session_id_context","","Set the context identifier for sessions",67,N],[11,"set_certificate_file","","Loads a certificate from a file.",67,[[["self"],["p"],["x509filetype"]],["result",["errorstack"]]]],[11,"set_certificate_chain_file","","Loads a certificate chain from a file.",67,[[["self"],["p"]],["result",["errorstack"]]]],[11,"set_certificate","","Sets the certificate.",67,[[["self"],["x509ref"]],["result",["errorstack"]]]],[11,"add_extra_chain_cert","","Appends a certificate to the certificate chain.",67,[[["self"],["x509"]],["result",["errorstack"]]]],[11,"set_private_key_file","","Loads the private key from a file.",67,[[["self"],["p"],["x509filetype"]],["result",["errorstack"]]]],[11,"set_private_key","","Sets the private key.",67,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"set_cipher_list","","Sets the cipher configuration.",67,[[["self"],["str"]],["result",["errorstack"]]]],[11,"set_options","","",67,[[["self"],["ssloption"]],["ssloption"]]],[11,"options","","",67,[[["self"]],["ssloption"]]],[11,"clear_options","","",67,[[["self"],["ssloption"]],["ssloption"]]],[11,"set_npn_protocols","","Set the protocols to be used during Next Protocol Negotiation (the protocols supported by the application).",67,N],[11,"check_private_key","","Checks consistency between the private key and certificate.",67,[[["self"]],["result",["errorstack"]]]],[11,"cert_store","","Returns a shared reference to the context's certificate store.",67,[[["self"]],["x509storebuilderref"]]],[11,"cert_store_mut","","Returns a mutable reference to the context's certificate store.",67,[[["self"]],["x509storebuilderref"]]],[11,"set_status_callback","","Sets the callback dealing with OCSP stapling.",67,[[["self"],["f"]],["result",["errorstack"]]]],[11,"build","","",67,[[["self"]],["sslcontext"]]],[11,"builder","","",68,[[["sslmethod"]],["result",["sslcontextbuilder","errorstack"]]]],[11,"cert_store","","Returns the certificate store used for verification.",69,[[["self"]],["x509storeref"]]],[11,"extra_chain_certs","","",69,[[["self"]],["stackref"]]],[11,"name","","Returns the name of cipher.",70,[[["self"]],["str"]]],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",70,[[["self"]],["str"]]],[11,"bits","","Returns the number of bits used for the cipher.",70,[[["self"]],["cipherbits"]]],[11,"description","","Returns a textual description of the cipher used",70,[[["self"]],["string"]]],[11,"id","","Returns the SSL session ID.",71,N],[11,"master_key_len","","Returns the length of the master key.",71,[[["self"]],["usize"]]],[11,"master_key","","Copies the master key into the provided buffer.",71,N],[11,"set_verify","","Sets the verification mode to be used during the handshake process.",72,[[["self"],["sslverifymode"]]]],[11,"set_verify_callback","","Sets the certificate verification callback to be used during the handshake process.",72,[[["self"],["sslverifymode"],["f"]]]],[11,"set_tmp_dh","","",72,[[["self"],["dhref"]],["result",["errorstack"]]]],[11,"set_tmp_dh_callback","","",72,[[["self"],["f"]]]],[11,"set_tmp_ecdh","","",72,[[["self"],["eckeyref"]],["result",["errorstack"]]]],[11,"current_cipher","","",72,[[["self"]],["option",["sslcipherref"]]]],[11,"state_string","","",72,[[["self"]],["str"]]],[11,"state_string_long","","",72,[[["self"]],["str"]]],[11,"set_hostname","","Sets the host name to be used with SNI (Server Name Indication).",72,[[["self"],["str"]],["result",["errorstack"]]]],[11,"peer_certificate","","Returns the certificate of the peer, if present.",72,[[["self"]],["option",["x509"]]]],[11,"certificate","","Returns the certificate associated with this `Ssl`, if present.",72,[[["self"]],["option",["x509ref"]]]],[11,"private_key","","Returns the private key associated with this `Ssl`, if present.",72,[[["self"]],["option",["pkeyref"]]]],[11,"version","","Returns the name of the protocol used for the connection, e.g. \"TLSv1.2\", \"SSLv3\", etc.",72,[[["self"]],["str"]]],[11,"selected_npn_protocol","","Returns the protocol selected by performing Next Protocol Negotiation, if any.",72,[[["self"]],["option"]]],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS record.",72,[[["self"]],["usize"]]],[11,"compression","","Returns the compression currently in use.",72,[[["self"]],["option",["str"]]]],[11,"servername","","Returns the server's name for the current connection",72,[[["self"]],["option",["str"]]]],[11,"set_ssl_context","","Changes the context corresponding to the current connection.",72,[[["self"],["sslcontextref"]],["result",["errorstack"]]]],[11,"ssl_context","","Returns the context corresponding to the current connection",72,[[["self"]],["sslcontextref"]]],[11,"verify_result","","Returns the result of X509 certificate verification.",72,[[["self"]],["option",["x509verifyerror"]]]],[11,"session","","Returns the SSL session.",72,[[["self"]],["option",["sslsessionref"]]]],[11,"set_session","","Sets the session to be used.",72,[[["self"],["sslsessionref"]],["result",["errorstack"]]]],[11,"session_reused","","Determines if the session provided to `set_session` was successfully reused.",72,[[["self"]],["bool"]]],[11,"set_status_type","","Sets the status response a client wishes the server to reply with.",72,[[["self"],["statustype"]],["result",["errorstack"]]]],[11,"ocsp_status","","Returns the server's OCSP response, if present.",72,[[["self"]],["option"]]],[11,"set_ocsp_status","","Sets the OCSP response to be returned to the client.",72,N],[11,"is_server","","Determines if this `Ssl` is configured for server-side or client-side use.",72,[[["self"]],["bool"]]],[11,"new","","",73,[[["sslcontext"]],["result",["ssl","errorstack"]]]],[11,"connect","","Creates an SSL/TLS client operating over the provided stream.",73,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"accept","","Creates an SSL/TLS server operating over the provided stream.",73,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"get_ref","","Returns a shared reference to the inner stream.",74,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",74,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` of the stream.",74,[[["self"]],["sslref"]]],[11,"error","","Returns the underlying error which interrupted this handshake.",74,[[["self"]],["error"]]],[11,"into_error","","Consumes `self`, returning its error.",74,[[["self"]],["error"]]],[11,"handshake","","Restarts the handshake process.",74,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",75,N],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",75,N],[11,"shutdown","","Shuts down the session.",75,[[["self"]],["result",["shutdownresult","error"]]]],[11,"get_ref","","Returns a reference to the underlying stream.",75,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the underlying stream.",75,[[["self"]],["s"]]],[11,"ssl","","Returns the OpenSSL `Ssl` object associated with this stream.",75,[[["self"]],["sslref"]]],[0,"stack","openssl","",N,N],[3,"Stack","openssl::stack","An owned stack of `T`.",N,N],[3,"IntoIter","","",N,N],[3,"StackRef","","",N,N],[3,"Iter","","An iterator over the stack's contents.",N,N],[3,"IterMut","","A mutable iterator over the stack's contents.",N,N],[8,"Stackable","","Trait implemented by types which can be placed in a stack.",N,N],[16,"StackType","","The C stack type for this element.",76,N],[11,"new","","",77,[[],["result",["stack","errorstack"]]]],[11,"len","","Returns the number of items in the stack",78,[[["self"]],["usize"]]],[11,"iter","","",78,[[["self"]],["iter"]]],[11,"iter_mut","","",78,[[["self"]],["itermut"]]],[11,"get","","Returns a reference to the element at the given index in the stack or `None` if the index is out of bounds",78,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the element at the given index in the stack or `None` if the index is out of bounds",78,[[["self"],["usize"]],["option"]]],[11,"push","","Pushes a value onto the top of the stack.",78,[[["self"],["t"]],["result",["errorstack"]]]],[11,"pop","","Removes the last element from the stack and returns it.",78,[[["self"]],["option"]]],[0,"string","openssl","",N,N],[3,"OpensslString","openssl::string","",N,N],[3,"OpensslStringRef","","",N,N],[11,"from_raw_parts","","",79,N],[11,"from_null_terminated","","",79,N],[0,"symm","openssl","",N,N],[3,"Cipher","openssl::symm","",N,N],[3,"Crypter","","Represents a symmetric cipher context.",N,N],[4,"Mode","","",N,N],[13,"Encrypt","","",80,N],[13,"Decrypt","","",80,N],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the specified key and iv; returns the resulting (encrypted) data.",N,N],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the specified key and iv; returns the resulting (decrypted) data.",N,N],[5,"encrypt_aead","","Like `encrypt`, but for AEAD ciphers such as AES GCM.",N,N],[5,"decrypt_aead","","Like `decrypt`, but for AEAD ciphers such as AES GCM.",N,N],[11,"aes_128_ecb","","",81,[[],["cipher"]]],[11,"aes_128_cbc","","",81,[[],["cipher"]]],[11,"aes_128_xts","","",81,[[],["cipher"]]],[11,"aes_128_ctr","","",81,[[],["cipher"]]],[11,"aes_128_cfb1","","",81,[[],["cipher"]]],[11,"aes_128_cfb128","","",81,[[],["cipher"]]],[11,"aes_128_cfb8","","",81,[[],["cipher"]]],[11,"aes_128_gcm","","",81,[[],["cipher"]]],[11,"aes_256_ecb","","",81,[[],["cipher"]]],[11,"aes_256_cbc","","",81,[[],["cipher"]]],[11,"aes_256_xts","","",81,[[],["cipher"]]],[11,"aes_256_ctr","","",81,[[],["cipher"]]],[11,"aes_256_cfb1","","",81,[[],["cipher"]]],[11,"aes_256_cfb128","","",81,[[],["cipher"]]],[11,"aes_256_cfb8","","",81,[[],["cipher"]]],[11,"aes_256_gcm","","",81,[[],["cipher"]]],[11,"bf_cbc","","",81,[[],["cipher"]]],[11,"bf_ecb","","",81,[[],["cipher"]]],[11,"bf_cfb64","","",81,[[],["cipher"]]],[11,"bf_ofb","","",81,[[],["cipher"]]],[11,"des_cbc","","",81,[[],["cipher"]]],[11,"des_ecb","","",81,[[],["cipher"]]],[11,"rc4","","",81,[[],["cipher"]]],[11,"from_ptr","","",81,N],[11,"as_ptr","","",81,N],[11,"key_len","","Returns the length of keys used with this cipher.",81,[[["self"]],["usize"]]],[11,"iv_len","","Returns the length of the IV used with this cipher, or `None` if the cipher does not use an IV.",81,[[["self"]],["option",["usize"]]]],[11,"block_size","","Returns the block size of the cipher.",81,[[["self"]],["usize"]]],[11,"new","","Creates a new `Crypter`.",82,N],[11,"pad","","Enables or disables padding.",82,[[["self"],["bool"]]]],[11,"set_tag","","Sets the tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",82,N],[11,"aad_update","","Feeds Additional Authenticated Data (AAD) through the cipher.",82,N],[11,"update","","Feeds data from `input` through the cipher, writing encrypted/decrypted bytes into `output`.",82,N],[11,"finalize","","Finishes the encryption/decryption process, writing any remaining data to `output`.",82,N],[11,"get_tag","","Retrieves the authentication tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",82,N],[0,"types","openssl","",N,N],[8,"OpenSslType","openssl::types","A type implemented by wrappers over foreign types.",N,N],[16,"CType","","The raw C type.",83,N],[16,"Ref","","The type representing a reference to this type.",83,N],[10,"from_ptr","","Constructs an instance of this type from its raw type.",83,N],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",83,N],[8,"OpenSslTypeRef","","A trait implemented by types which reference borrowed foreign types.",N,N],[16,"CType","","The raw C type.",84,N],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",84,N],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",84,N],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",84,N],[0,"version","openssl","",N,N],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",N,[[],["i64"]]],[5,"version","","The text variant of the version number and the release date. For example, \"OpenSSL 0.9.5a 1 Apr 2000\".",N,[[],["str"]]],[5,"c_flags","","The compiler flags set for the compilation process in the form \"compiler: ...\" if available or \"compiler: information not available\" otherwise.",N,[[],["str"]]],[5,"built_on","","The date of the build process in the form \"built on: ...\" if available or \"built on: date not available\" otherwise.",N,[[],["str"]]],[5,"platform","","The \"Configure\" target of the library build in the form \"platform: ...\" if available or \"platform: information not available\" otherwise.",N,[[],["str"]]],[5,"dir","","The \"OPENSSLDIR\" setting of the library build in the form \"OPENSSLDIR: \"...\"\" if available or \"OPENSSLDIR: N/A\" otherwise.",N,[[],["str"]]],[0,"x509","openssl","",N,N],[3,"X509FileType","openssl::x509","",N,N],[3,"X509StoreContext","","",N,N],[3,"X509StoreContextRef","","",N,N],[3,"X509Generator","","",N,N],[3,"X509Builder","","A builder type which can create `X509` objects.",N,N],[3,"X509","","",N,N],[3,"X509Ref","","",N,N],[3,"X509v3Context","","A context object required to construct certain X509 extension values.",N,N],[3,"X509Extension","","",N,N],[3,"X509ExtensionRef","","",N,N],[3,"X509NameBuilder","","",N,N],[3,"X509Name","","",N,N],[3,"X509NameRef","","",N,N],[3,"X509NameEntries","","",N,N],[3,"X509NameEntry","","",N,N],[3,"X509NameEntryRef","","",N,N],[3,"X509ReqBuilder","","",N,N],[3,"X509Req","","",N,N],[3,"X509ReqRef","","",N,N],[3,"X509VerifyError","","",N,N],[3,"GeneralName","","",N,N],[3,"GeneralNameRef","","",N,N],[3,"X509Algorithm","","",N,N],[3,"X509AlgorithmRef","","",N,N],[0,"extension","","",N,N],[3,"BasicConstraints","openssl::x509::extension","",N,N],[3,"KeyUsage","","",N,N],[3,"ExtendedKeyUsage","","",N,N],[3,"SubjectKeyIdentifier","","",N,N],[3,"AuthorityKeyIdentifier","","",N,N],[3,"SubjectAlternativeName","","",N,N],[4,"ExtensionType","","Type-only version of the `Extension` enum.",N,N],[13,"KeyUsage","","",85,N],[13,"ExtKeyUsage","","",85,N],[13,"SubjectAltName","","",85,N],[13,"IssuerAltName","","",85,N],[13,"OtherNid","","",85,N],[13,"OtherStr","","",85,N],[4,"Extension","","A X.509 v3 certificate extension.",N,N],[13,"KeyUsage","","The purposes of the key contained in the certificate",86,N],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",86,N],[13,"SubjectAltName","","Subject Alternative Names",86,N],[13,"IssuerAltName","","Issuer Alternative Names",86,N],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",86,N],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",86,N],[4,"KeyUsageOption","","",N,N],[13,"DigitalSignature","","",87,N],[13,"NonRepudiation","","",87,N],[13,"KeyEncipherment","","",87,N],[13,"DataEncipherment","","",87,N],[13,"KeyAgreement","","",87,N],[13,"KeyCertSign","","",87,N],[13,"CRLSign","","",87,N],[13,"EncipherOnly","","",87,N],[13,"DecipherOnly","","",87,N],[4,"ExtKeyUsageOption","","",N,N],[13,"ServerAuth","","",88,N],[13,"ClientAuth","","",88,N],[13,"CodeSigning","","",88,N],[13,"EmailProtection","","",88,N],[13,"TimeStamping","","",88,N],[13,"MsCodeInd","","",88,N],[13,"MsCodeCom","","",88,N],[13,"MsCtlSign","","",88,N],[13,"MsSgc","","",88,N],[13,"MsEfs","","",88,N],[13,"NsSgc","","",88,N],[13,"Other","","An arbitrary key usage by OID.",88,N],[4,"AltNameOption","","",N,N],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",89,N],[13,"Email","","",89,N],[13,"DNS","","",89,N],[13,"Directory","","",89,N],[13,"URI","","",89,N],[13,"IPAddress","","",89,N],[13,"RegisteredID","","",89,N],[11,"get_type","","",86,[[["self"]],["extensiontype"]]],[11,"get_nid","","",85,[[["self"]],["option",["nid"]]]],[11,"get_name","","",85,[[["self"]],["option",["str"]]]],[11,"new","","",90,[[],["basicconstraints"]]],[11,"critical","","",90,[[["self"]],["basicconstraints"]]],[11,"ca","","",90,[[["self"]],["basicconstraints"]]],[11,"pathlen","","",90,[[["self"],["u32"]],["basicconstraints"]]],[11,"build","","",90,[[["self"]],["result",["x509extension","errorstack"]]]],[11,"new","","",91,[[],["keyusage"]]],[11,"critical","","",91,[[["self"]],["keyusage"]]],[11,"digital_signature","","",91,[[["self"]],["keyusage"]]],[11,"non_repudiation","","",91,[[["self"]],["keyusage"]]],[11,"key_encipherment","","",91,[[["self"]],["keyusage"]]],[11,"data_encipherment","","",91,[[["self"]],["keyusage"]]],[11,"key_agreement","","",91,[[["self"]],["keyusage"]]],[11,"key_cert_sign","","",91,[[["self"]],["keyusage"]]],[11,"crl_sign","","",91,[[["self"]],["keyusage"]]],[11,"encipher_only","","",91,[[["self"]],["keyusage"]]],[11,"decipher_only","","",91,[[["self"]],["keyusage"]]],[11,"build","","",91,[[["self"]],["result",["x509extension","errorstack"]]]],[11,"new","","",92,[[],["extendedkeyusage"]]],[11,"critical","","",92,[[["self"]],["extendedkeyusage"]]],[11,"server_auth","","",92,[[["self"]],["extendedkeyusage"]]],[11,"client_auth","","",92,[[["self"]],["extendedkeyusage"]]],[11,"code_signing","","",92,[[["self"]],["extendedkeyusage"]]],[11,"time_stamping","","",92,[[["self"]],["extendedkeyusage"]]],[11,"ms_code_ind","","",92,[[["self"]],["extendedkeyusage"]]],[11,"ms_code_com","","",92,[[["self"]],["extendedkeyusage"]]],[11,"ms_ctl_sign","","",92,[[["self"]],["extendedkeyusage"]]],[11,"ms_sgc","","",92,[[["self"]],["extendedkeyusage"]]],[11,"ms_efs","","",92,[[["self"]],["extendedkeyusage"]]],[11,"ns_sgc","","",92,[[["self"]],["extendedkeyusage"]]],[11,"other","","",92,[[["self"],["str"]],["extendedkeyusage"]]],[11,"build","","",92,[[["self"]],["result",["x509extension","errorstack"]]]],[11,"new","","",93,[[],["subjectkeyidentifier"]]],[11,"critical","","",93,[[["self"]],["subjectkeyidentifier"]]],[11,"build","","",93,[[["self"],["x509v3context"]],["result",["x509extension","errorstack"]]]],[11,"new","","",94,[[],["authoritykeyidentifier"]]],[11,"critical","","",94,[[["self"]],["authoritykeyidentifier"]]],[11,"keyid","","",94,[[["self"],["bool"]],["authoritykeyidentifier"]]],[11,"issuer","","",94,[[["self"],["bool"]],["authoritykeyidentifier"]]],[11,"build","","",94,[[["self"],["x509v3context"]],["result",["x509extension","errorstack"]]]],[11,"new","","",95,[[],["subjectalternativename"]]],[11,"critical","","",95,[[["self"]],["subjectalternativename"]]],[11,"email","","",95,[[["self"],["str"]],["subjectalternativename"]]],[11,"uri","","",95,[[["self"],["str"]],["subjectalternativename"]]],[11,"dns","","",95,[[["self"],["str"]],["subjectalternativename"]]],[11,"rid","","",95,[[["self"],["str"]],["subjectalternativename"]]],[11,"ip","","",95,[[["self"],["str"]],["subjectalternativename"]]],[11,"dir_name","","",95,[[["self"],["str"]],["subjectalternativename"]]],[11,"other_name","","",95,[[["self"],["str"]],["subjectalternativename"]]],[11,"build","","",95,[[["self"],["x509v3context"]],["result",["x509extension","errorstack"]]]],[0,"store","openssl::x509","",N,N],[3,"X509StoreBuilder","openssl::x509::store","",N,N],[3,"X509StoreBuilderRef","","",N,N],[3,"X509Store","","",N,N],[3,"X509StoreRef","","",N,N],[11,"new","","Returns a builder for a certificate store.",96,[[],["result",["x509storebuilder","errorstack"]]]],[11,"build","","Constructs the `X509Store`.",96,[[["self"]],["x509store"]]],[11,"add_cert","","Adds a certificate to the certificate store.",97,[[["self"],["x509"]],["result",["errorstack"]]]],[11,"set_default_paths","","Load certificates from their default locations.",97,[[["self"]],["result",["errorstack"]]]],[17,"X509_FILETYPE_PEM","openssl::x509","",N,N],[17,"X509_FILETYPE_ASN1","","",N,N],[17,"X509_FILETYPE_DEFAULT","","",N,N],[11,"as_raw","","",98,[[["self"]],["c_int"]]],[11,"error","","",99,[[["self"]],["option",["x509verifyerror"]]]],[11,"current_cert","","",99,[[["self"]],["option",["x509ref"]]]],[11,"error_depth","","",99,[[["self"]],["u32"]]],[11,"chain","","",99,[[["self"]],["option",["stackref"]]]],[11,"new","","Creates a new generator with the following defaults:",100,[[],["x509generator"]]],[11,"set_valid_period","","Sets certificate validity period in days since today",100,[[["self"],["u32"]],["x509generator"]]],[11,"add_name","","Add attribute to the name of the certificate",100,[[["self"],["string"],["string"]],["x509generator"]]],[11,"add_names","","Add multiple attributes to the name of the certificate",100,[[["self"],["i"]],["x509generator"]]],[11,"add_extension","","Add an extension to a certificate",100,[[["self"],["extension"]],["x509generator"]]],[11,"add_extensions","","Add multiple extensions to a certificate",100,[[["self"],["i"]],["x509generator"]]],[11,"set_sign_hash","","",100,[[["self"],["messagedigest"]],["x509generator"]]],[11,"sign","","Sets the certificate public-key, then self-sign and return it",100,[[["self"],["pkeyref"]],["result",["x509","errorstack"]]]],[11,"request","","Obtain a certificate signing request (CSR)",100,[[["self"],["pkeyref"]],["result",["x509req","errorstack"]]]],[11,"new","","Creates a new builder.",101,[[],["result",["x509builder","errorstack"]]]],[11,"set_not_after","","Sets the notAfter constraint on the certificate.",101,[[["self"],["asn1timeref"]],["result",["errorstack"]]]],[11,"set_not_before","","Sets the notBefore constraint on the certificate.",101,[[["self"],["asn1timeref"]],["result",["errorstack"]]]],[11,"set_version","","Sets the version of the certificate.",101,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"set_serial_number","","Sets the serial number of the certificate.",101,[[["self"],["asn1integerref"]],["result",["errorstack"]]]],[11,"set_issuer_name","","Sets the issuer name of the certificate.",101,[[["self"],["x509nameref"]],["result",["errorstack"]]]],[11,"set_subject_name","","Sets the subject name of the certificate.",101,[[["self"],["x509nameref"]],["result",["errorstack"]]]],[11,"set_pubkey","","Sets the public key associated with the certificate.",101,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"x509v3_context","","Returns a context object which is needed to create certain X509 extension values.",101,[[["self"],["option",["x509ref"]],["option",["confref"]]],["x509v3context"]]],[11,"append_extension","","Adds an X509 extension value to the certificate.",101,[[["self"],["x509extension"]],["result",["errorstack"]]]],[11,"sign","","Signs the certificate with a private key.",101,[[["self"],["pkeyref"],["messagedigest"]],["result",["errorstack"]]]],[11,"build","","Consumes the builder, returning the certificate.",101,[[["self"]],["x509"]]],[11,"subject_name","","",102,[[["self"]],["x509nameref"]]],[11,"subject_alt_names","","Returns this certificate's SAN entries, if they exist.",102,[[["self"]],["option",["stack"]]]],[11,"public_key","","",102,[[["self"]],["result",["pkey","errorstack"]]]],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",102,[[["self"],["messagedigest"]],["result",["vec","errorstack"]]]],[11,"not_after","","Returns the certificate's Not After validity period.",102,[[["self"]],["asn1timeref"]]],[11,"not_before","","Returns the certificate's Not Before validity period.",102,[[["self"]],["asn1timeref"]]],[11,"signature","","Returns the certificate's signature",102,[[["self"]],["asn1bitstringref"]]],[11,"signature_algorithm","","Returns the certificate's signature algorithm.",102,[[["self"]],["x509algorithmref"]]],[11,"ocsp_responders","","Returns the list of OCSP responder URLs specified in the certificate's Authority Information Access field.",102,[[["self"]],["result",["stack","errorstack"]]]],[11,"issued","","Checks that this certificate issued `subject`.",102,[[["self"],["x509ref"]],["result",["x509verifyerror"]]]],[11,"to_pem","","Serializes this value to PEM.",102,[[["self"]],["result",["vec","errorstack"]]]],[11,"to_der","","Serializes this value to DER.",102,[[["self"]],["result",["vec","errorstack"]]]],[11,"builder","","Returns a new builder.",103,[[],["result",["x509builder","errorstack"]]]],[11,"from_pem","","Deserializes a value from PEM-formatted data.",103,N],[11,"from_der","","Deserializes a value from DER-formatted data.",103,N],[11,"stack_from_pem","","Deserializes a list of PEM-formatted certificates.",103,N],[11,"as_ptr","","",104,N],[11,"new","","Constructs an X509 extension value. See `man x509v3_config` for information on supported names and their value formats.",105,[[["option",["confref"]],["option",["x509v3context"]],["str"],["str"]],["result",["x509extension","errorstack"]]]],[11,"new_nid","","Constructs an X509 extension value. See `man x509v3_config` for information on supported extensions and their value formats.",105,[[["option",["confref"]],["option",["x509v3context"]],["nid"],["str"]],["result",["x509extension","errorstack"]]]],[11,"new","","",106,[[],["result",["x509namebuilder","errorstack"]]]],[11,"append_entry_by_text","","",106,[[["self"],["str"],["str"]],["result",["errorstack"]]]],[11,"append_entry_by_nid","","",106,[[["self"],["nid"],["str"]],["result",["errorstack"]]]],[11,"build","","",106,[[["self"]],["x509name"]]],[11,"builder","","Returns a new builder.",107,[[],["result",["x509namebuilder","errorstack"]]]],[11,"load_client_ca_file","","Loads subject names from a file containing PEM-formatted certificates.",107,[[["p"]],["result",["stack","errorstack"]]]],[11,"entries_by_nid","","",108,[[["self"],["nid"]],["x509nameentries"]]],[11,"data","","",109,[[["self"]],["asn1stringref"]]],[11,"new","","",110,[[],["result",["x509reqbuilder","errorstack"]]]],[11,"set_version","","",110,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"set_subject_name","","",110,[[["self"],["x509nameref"]],["result",["errorstack"]]]],[11,"set_pubkey","","",110,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"x509v3_context","","",110,[[["self"],["option",["confref"]]],["x509v3context"]]],[11,"add_extensions","","",110,[[["self"],["stackref"]],["result",["errorstack"]]]],[11,"sign","","",110,[[["self"],["pkeyref"],["messagedigest"]],["result",["errorstack"]]]],[11,"build","","",110,[[["self"]],["x509req"]]],[11,"builder","","",111,[[],["result",["x509reqbuilder","errorstack"]]]],[11,"from_pem","","Reads CSR from PEM",111,N],[11,"from_der","","Deserializes a value from DER-formatted data.",111,N],[11,"to_pem","","Serializes this value to PEM.",112,[[["self"]],["result",["vec","errorstack"]]]],[11,"to_der","","Serializes this value to DER.",112,[[["self"]],["result",["vec","errorstack"]]]],[11,"version","","",112,[[["self"]],["i32"]]],[11,"subject_name","","",112,[[["self"]],["x509nameref"]]],[11,"from_raw","","Creates an `X509VerifyError` from a raw error number.",113,[[["c_long"]],["option",["x509verifyerror"]]]],[11,"as_raw","","",113,[[["self"]],["c_long"]]],[11,"error_string","","",113,[[["self"]],["str"]]],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",114,[[["self"]],["option",["str"]]]],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",114,[[["self"]],["option"]]],[11,"object","","Returns the ASN.1 OID of this algorithm.",115,[[["self"]],["asn1objectref"]]],[11,"into","openssl::aes","",116,[[["self"]],["u"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","openssl::asn1","",117,[[["self"]],["u"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_string","","",118,[[["self"]],["string"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_string","","",119,[[["self"]],["string"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","openssl::bn","",124,[[["self"]],["u"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","openssl::conf","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"into","openssl::dh","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","openssl::dsa","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","openssl::ec","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","openssl::error","",23,[[["self"]],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","openssl::hash","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"into","openssl::nid","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"into","openssl::ocsp","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"into","openssl::pkcs12","",41,[[["self"]],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"into","openssl::pkcs5","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"into","openssl::pkey","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"into","openssl::rsa","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"into","openssl::sign","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"into","openssl::ssl","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"into","openssl::stack","",77,[[["self"]],["u"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into_iter","","",77,[[["self"]],["i"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into_iter","","",136,[[["self"]],["i"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into_iter","","",137,[[["self"]],["i"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into_iter","","",138,[[["self"]],["i"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"into","openssl::string","",79,[[["self"]],["u"]]],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_string","","",139,[[["self"]],["string"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"into","openssl::symm","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"into","openssl::x509","",98,[[["self"]],["u"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into_iter","","",142,[[["self"]],["i"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_string","","",113,[[["self"]],["string"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"into","openssl::x509::extension","",90,[[["self"]],["u"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_string","","",86,[[["self"]],["string"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_string","","",87,[[["self"]],["string"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_string","","",88,[[["self"]],["string"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_string","","",89,[[["self"]],["string"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"into","openssl::x509::store","",96,[[["self"]],["u"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"next","openssl::stack","",136,[[["self"]],["option"]]],[11,"size_hint","","",136,N],[11,"next","","",137,[[["self"]],["option"]]],[11,"size_hint","","",137,N],[11,"next","","",138,[[["self"]],["option"]]],[11,"size_hint","","",138,N],[11,"next","openssl::x509","",142,[[["self"]],["option",["x509nameentryref"]]]],[11,"to_string","openssl::x509::extension","",86,[[["self"]],["string"]]],[11,"to_owned","openssl::ssl","",71,[[["self"]],["sslsession"]]],[11,"to_owned","openssl::x509","",102,[[["self"]],["x509"]]],[11,"partial_cmp","openssl::bn","",7,[[["self"],["bignumref"]],["option",["ordering"]]]],[11,"partial_cmp","","",7,[[["self"],["bignum"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["bignum"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["bignumref"]],["option",["ordering"]]]],[11,"partial_cmp","openssl::ocsp","",29,[[["self"],["flag"]],["option",["ordering"]]]],[11,"lt","","",29,[[["self"],["flag"]],["bool"]]],[11,"le","","",29,[[["self"],["flag"]],["bool"]]],[11,"gt","","",29,[[["self"],["flag"]],["bool"]]],[11,"ge","","",29,[[["self"],["flag"]],["bool"]]],[11,"partial_cmp","openssl::ssl","",62,[[["self"],["ssloption"]],["option",["ordering"]]]],[11,"lt","","",62,[[["self"],["ssloption"]],["bool"]]],[11,"le","","",62,[[["self"],["ssloption"]],["bool"]]],[11,"gt","","",62,[[["self"],["ssloption"]],["bool"]]],[11,"ge","","",62,[[["self"],["ssloption"]],["bool"]]],[11,"partial_cmp","","",63,[[["self"],["sslmode"]],["option",["ordering"]]]],[11,"lt","","",63,[[["self"],["sslmode"]],["bool"]]],[11,"le","","",63,[[["self"],["sslmode"]],["bool"]]],[11,"gt","","",63,[[["self"],["sslmode"]],["bool"]]],[11,"ge","","",63,[[["self"],["sslmode"]],["bool"]]],[11,"partial_cmp","","",65,[[["self"],["sslverifymode"]],["option",["ordering"]]]],[11,"lt","","",65,[[["self"],["sslverifymode"]],["bool"]]],[11,"le","","",65,[[["self"],["sslverifymode"]],["bool"]]],[11,"gt","","",65,[[["self"],["sslverifymode"]],["bool"]]],[11,"ge","","",65,[[["self"],["sslverifymode"]],["bool"]]],[11,"cmp","openssl::bn","",7,[[["self"],["bignumref"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["bignum"]],["ordering"]]],[11,"cmp","openssl::ocsp","",29,[[["self"],["flag"]],["ordering"]]],[11,"cmp","openssl::ssl","",62,[[["self"],["ssloption"]],["ordering"]]],[11,"cmp","","",63,[[["self"],["sslmode"]],["ordering"]]],[11,"cmp","","",65,[[["self"],["sslverifymode"]],["ordering"]]],[11,"eq","openssl::bn","",7,[[["self"],["bignumref"]],["bool"]]],[11,"eq","","",7,[[["self"],["bignum"]],["bool"]]],[11,"eq","","",8,[[["self"],["bignum"]],["bool"]]],[11,"eq","","",8,[[["self"],["bignumref"]],["bool"]]],[11,"eq","openssl::nid","",27,[[["self"],["nid"]],["bool"]]],[11,"ne","","",27,[[["self"],["nid"]],["bool"]]],[11,"eq","openssl::ocsp","",29,[[["self"],["flag"]],["bool"]]],[11,"ne","","",29,[[["self"],["flag"]],["bool"]]],[11,"eq","","",30,[[["self"],["ocspresponsestatus"]],["bool"]]],[11,"ne","","",30,[[["self"],["ocspresponsestatus"]],["bool"]]],[11,"eq","","",31,[[["self"],["ocspcertstatus"]],["bool"]]],[11,"ne","","",31,[[["self"],["ocspcertstatus"]],["bool"]]],[11,"eq","","",32,[[["self"],["ocsprevokedstatus"]],["bool"]]],[11,"ne","","",32,[[["self"],["ocsprevokedstatus"]],["bool"]]],[11,"eq","openssl::pkcs5","",43,[[["self"],["keyivpair"]],["bool"]]],[11,"ne","","",43,[[["self"],["keyivpair"]],["bool"]]],[11,"eq","openssl::rsa","",48,[[["self"],["padding"]],["bool"]]],[11,"ne","","",48,[[["self"],["padding"]],["bool"]]],[11,"eq","openssl::ssl","",62,[[["self"],["ssloption"]],["bool"]]],[11,"ne","","",62,[[["self"],["ssloption"]],["bool"]]],[11,"eq","","",63,[[["self"],["sslmode"]],["bool"]]],[11,"ne","","",63,[[["self"],["sslmode"]],["bool"]]],[11,"eq","","",65,[[["self"],["sslverifymode"]],["bool"]]],[11,"ne","","",65,[[["self"],["sslverifymode"]],["bool"]]],[11,"eq","","",57,[[["self"],["shutdownresult"]],["bool"]]],[11,"eq","openssl::x509::extension","",85,[[["self"],["extensiontype"]],["bool"]]],[11,"ne","","",85,[[["self"],["extensiontype"]],["bool"]]],[11,"from","openssl::ssl","",54,[[["errorstack"]],["error"]]],[11,"from","","",55,[[["errorstack"]],["handshakeerror"]]],[11,"as_ref","openssl::bn","",8,[[["self"]],["bignumref"]]],[11,"as_ref","openssl::hash","",129,N],[11,"as_ref","openssl::stack","",77,[[["self"]],["stackref"]]],[11,"as_ref","openssl::x509","",103,[[["self"]],["x509ref"]]],[11,"as_ref","","",102,[[["self"]],["x509ref"]]],[11,"clone","openssl::ec","",127,[[["self"]],["pointconversionform"]]],[11,"clone","","",128,[[["self"]],["asn1flag"]]],[11,"clone","openssl::error","",23,[[["self"]],["errorstack"]]],[11,"clone","","",24,[[["self"]],["error"]]],[11,"clone","openssl::hash","",25,[[["self"]],["messagedigest"]]],[11,"clone","","",26,[[["self"]],["hasher"]]],[11,"clone","","",129,[[["self"]],["digestbytes"]]],[11,"clone","openssl::nid","",27,[[["self"]],["nid"]]],[11,"clone","openssl::ocsp","",29,[[["self"]],["flag"]]],[11,"clone","","",30,[[["self"]],["ocspresponsestatus"]]],[11,"clone","","",31,[[["self"]],["ocspcertstatus"]]],[11,"clone","","",32,[[["self"]],["ocsprevokedstatus"]]],[11,"clone","openssl::pkcs5","",43,[[["self"]],["keyivpair"]]],[11,"clone","openssl::rsa","",48,[[["self"]],["padding"]]],[11,"clone","openssl::ssl","",59,[[["self"]],["sslconnector"]]],[11,"clone","","",61,[[["self"]],["sslacceptor"]]],[11,"clone","","",62,[[["self"]],["ssloption"]]],[11,"clone","","",63,[[["self"]],["sslmode"]]],[11,"clone","","",64,[[["self"]],["sslmethod"]]],[11,"clone","","",65,[[["self"]],["sslverifymode"]]],[11,"clone","","",66,[[["self"]],["statustype"]]],[11,"clone","","",68,[[["self"]],["self"]]],[11,"clone","","",135,[[["self"]],["sslsession"]]],[11,"clone","","",57,[[["self"]],["shutdownresult"]]],[11,"clone","openssl::symm","",80,[[["self"]],["mode"]]],[11,"clone","","",81,[[["self"]],["cipher"]]],[11,"clone","openssl::x509::extension","",85,[[["self"]],["extensiontype"]]],[11,"clone","","",86,[[["self"]],["extension"]]],[11,"clone","","",87,[[["self"]],["keyusageoption"]]],[11,"clone","","",88,[[["self"]],["extkeyusageoption"]]],[11,"clone","","",89,[[["self"]],["altnameoption"]]],[11,"clone","openssl::x509","",103,[[["self"]],["x509"]]],[11,"into_iter","openssl::stack","",77,[[["self"]],["intoiter"]]],[11,"extend","openssl::ocsp","",29,[[["self"],["t"]]]],[11,"extend","openssl::ssl","",62,[[["self"],["t"]]]],[11,"extend","","",63,[[["self"],["t"]]]],[11,"extend","","",65,[[["self"],["t"]]]],[11,"drop","openssl::asn1","",117,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",120,[[["self"]]]],[11,"drop","","",121,[[["self"]]]],[11,"drop","","",122,[[["self"]]]],[11,"drop","","",123,[[["self"]]]],[11,"drop","openssl::bn","",6,[[["self"]]]],[11,"drop","","",8,[[["self"]]]],[11,"drop","openssl::conf","",10,[[["self"]]]],[11,"drop","openssl::dh","",12,[[["self"]]]],[11,"drop","openssl::dsa","",14,[[["self"]]]],[11,"drop","openssl::ec","",15,[[["self"]]]],[11,"drop","","",18,[[["self"]]]],[11,"drop","","",20,[[["self"]]]],[11,"drop","","",21,[[["self"]]]],[11,"drop","openssl::hash","",26,[[["self"]]]],[11,"drop","openssl::ocsp","",130,[[["self"]]]],[11,"drop","","",34,[[["self"]]]],[11,"drop","","",35,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"drop","","",132,[[["self"]]]],[11,"drop","openssl::pkcs12","",41,[[["self"]]]],[11,"drop","openssl::pkey","",45,[[["self"]]]],[11,"drop","","",46,[[["self"]]]],[11,"drop","openssl::rsa","",50,[[["self"]]]],[11,"drop","openssl::sign","",51,[[["self"]]]],[11,"drop","","",52,[[["self"]]]],[11,"drop","openssl::ssl","",67,[[["self"]]]],[11,"drop","","",68,[[["self"]]]],[11,"drop","","",135,[[["self"]]]],[11,"drop","","",73,[[["self"]]]],[11,"drop","openssl::stack","",77,[[["self"]]]],[11,"drop","","",136,[[["self"]]]],[11,"drop","openssl::string","",79,[[["self"]]]],[11,"drop","openssl::symm","",82,[[["self"]]]],[11,"drop","openssl::x509::store","",96,[[["self"]]]],[11,"drop","","",146,[[["self"]]]],[11,"drop","openssl::x509","",140,[[["self"]]]],[11,"drop","","",103,[[["self"]]]],[11,"drop","","",105,[[["self"]]]],[11,"drop","","",107,[[["self"]]]],[11,"drop","","",143,[[["self"]]]],[11,"drop","","",111,[[["self"]]]],[11,"drop","","",144,[[["self"]]]],[11,"drop","","",145,[[["self"]]]],[11,"fmt","openssl::asn1","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::bn","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::error","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::string","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::x509::extension","",87,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","openssl::x509","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::aes","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::bn","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::dsa","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::error","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::hash","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::nid","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs5","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::rsa","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::string","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::x509","",113,[[["self"],["formatter"]],["result"]]],[11,"hash","openssl::nid","",27,N],[11,"hash","openssl::ocsp","",29,N],[11,"hash","openssl::pkcs5","",43,N],[11,"hash","openssl::ssl","",62,N],[11,"hash","","",63,N],[11,"hash","","",65,N],[11,"hash","openssl::x509::extension","",85,N],[11,"sub","openssl::ocsp","Returns the set difference of the two sets of flags.",29,[[["self"],["flag"]],["flag"]]],[11,"sub","openssl::ssl","Returns the set difference of the two sets of flags.",62,[[["self"],["ssloption"]],["ssloption"]]],[11,"sub","","Returns the set difference of the two sets of flags.",63,[[["self"],["sslmode"]],["sslmode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",65,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"neg","openssl::bn","",8,[[["self"]],["bignum"]]],[11,"sub_assign","openssl::ocsp","Disables all flags enabled in the set.",29,[[["self"],["flag"]]]],[11,"sub_assign","openssl::ssl","Disables all flags enabled in the set.",62,[[["self"],["ssloption"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",63,[[["self"],["sslmode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",65,[[["self"],["sslverifymode"]]]],[11,"not","openssl::ocsp","Returns the complement of this set of flags.",29,[[["self"]],["flag"]]],[11,"not","openssl::ssl","Returns the complement of this set of flags.",62,[[["self"]],["ssloption"]]],[11,"not","","Returns the complement of this set of flags.",63,[[["self"]],["sslmode"]]],[11,"not","","Returns the complement of this set of flags.",65,[[["self"]],["sslverifymode"]]],[11,"bitand","openssl::ocsp","Returns the intersection between the two sets of flags.",29,[[["self"],["flag"]],["flag"]]],[11,"bitand","openssl::ssl","Returns the intersection between the two sets of flags.",62,[[["self"],["ssloption"]],["ssloption"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",63,[[["self"],["sslmode"]],["sslmode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",65,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"bitor","openssl::ocsp","Returns the union of the two sets of flags.",29,[[["self"],["flag"]],["flag"]]],[11,"bitor","openssl::ssl","Returns the union of the two sets of flags.",62,[[["self"],["ssloption"]],["ssloption"]]],[11,"bitor","","Returns the union of the two sets of flags.",63,[[["self"],["sslmode"]],["sslmode"]]],[11,"bitor","","Returns the union of the two sets of flags.",65,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"bitxor","openssl::ocsp","Returns the left flags, but with all the right flags toggled.",29,[[["self"],["flag"]],["flag"]]],[11,"bitxor","openssl::ssl","Returns the left flags, but with all the right flags toggled.",62,[[["self"],["ssloption"]],["ssloption"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",63,[[["self"],["sslmode"]],["sslmode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",65,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"bitand_assign","openssl::ocsp","Disables all flags disabled in the set.",29,[[["self"],["flag"]]]],[11,"bitand_assign","openssl::ssl","Disables all flags disabled in the set.",62,[[["self"],["ssloption"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",63,[[["self"],["sslmode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",65,[[["self"],["sslverifymode"]]]],[11,"bitor_assign","openssl::ocsp","Adds the set of flags.",29,[[["self"],["flag"]]]],[11,"bitor_assign","openssl::ssl","Adds the set of flags.",62,[[["self"],["ssloption"]]]],[11,"bitor_assign","","Adds the set of flags.",63,[[["self"],["sslmode"]]]],[11,"bitor_assign","","Adds the set of flags.",65,[[["self"],["sslverifymode"]]]],[11,"bitxor_assign","openssl::ocsp","Toggles the set of flags.",29,[[["self"],["flag"]]]],[11,"bitxor_assign","openssl::ssl","Toggles the set of flags.",62,[[["self"],["ssloption"]]]],[11,"bitxor_assign","","Toggles the set of flags.",63,[[["self"],["sslmode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",65,[[["self"],["sslverifymode"]]]],[11,"deref","openssl::asn1","",117,[[["self"]],["asn1generalizedtimeref"]]],[11,"deref","","",1,[[["self"]],["asn1timeref"]]],[11,"deref","","",120,[[["self"]],["asn1stringref"]]],[11,"deref","","",121,[[["self"]],["asn1integerref"]]],[11,"deref","","",122,[[["self"]],["asn1bitstringref"]]],[11,"deref","","",123,[[["self"]],["asn1objectref"]]],[11,"deref","openssl::bn","",6,[[["self"]],["bignumcontextref"]]],[11,"deref","","",8,[[["self"]],["bignumref"]]],[11,"deref","openssl::conf","",10,[[["self"]],["confref"]]],[11,"deref","openssl::dh","",12,[[["self"]],["dhref"]]],[11,"deref","openssl::dsa","",14,[[["self"]],["dsaref"]]],[11,"deref","openssl::ec","",15,[[["self"]],["ecgroupref"]]],[11,"deref","","",18,[[["self"]],["ecpointref"]]],[11,"deref","","",20,[[["self"]],["eckeyref"]]],[11,"deref","","",21,[[["self"]],["eckeybuilderref"]]],[11,"deref","openssl::hash","",129,N],[11,"deref","openssl::ocsp","",130,[[["self"]],["ocspbasicresponseref"]]],[11,"deref","","",34,[[["self"]],["ocspcertidref"]]],[11,"deref","","",35,[[["self"]],["ocspresponseref"]]],[11,"deref","","",37,[[["self"]],["ocsprequestref"]]],[11,"deref","","",132,[[["self"]],["ocsponereqref"]]],[11,"deref","openssl::pkcs12","",41,[[["self"]],["pkcs12ref"]]],[11,"deref","openssl::pkey","",45,[[["self"]],["pkeyref"]]],[11,"deref","","",46,[[["self"]],["pkeyctxref"]]],[11,"deref","openssl::rsa","",50,[[["self"]],["rsaref"]]],[11,"deref","openssl::ssl","",68,[[["self"]],["sslcontextref"]]],[11,"deref","","",134,[[["self"]],["sslcipherref"]]],[11,"deref","","",135,[[["self"]],["sslsessionref"]]],[11,"deref","","",73,[[["self"]],["sslref"]]],[11,"deref","openssl::stack","",77,[[["self"]],["stackref"]]],[11,"deref","openssl::string","",79,[[["self"]],["opensslstringref"]]],[11,"deref","","",139,[[["self"]],["str"]]],[11,"deref","openssl::x509::store","",96,[[["self"]],["x509storebuilderref"]]],[11,"deref","","",146,[[["self"]],["x509storeref"]]],[11,"deref","openssl::x509","",140,[[["self"]],["x509storecontextref"]]],[11,"deref","","",103,[[["self"]],["x509ref"]]],[11,"deref","","",105,[[["self"]],["x509extensionref"]]],[11,"deref","","",107,[[["self"]],["x509nameref"]]],[11,"deref","","",143,[[["self"]],["x509nameentryref"]]],[11,"deref","","",111,[[["self"]],["x509reqref"]]],[11,"deref","","",144,[[["self"]],["generalnameref"]]],[11,"deref","","",145,[[["self"]],["x509algorithmref"]]],[11,"deref_mut","openssl::asn1","",117,[[["self"]],["asn1generalizedtimeref"]]],[11,"deref_mut","","",1,[[["self"]],["asn1timeref"]]],[11,"deref_mut","","",120,[[["self"]],["asn1stringref"]]],[11,"deref_mut","","",121,[[["self"]],["asn1integerref"]]],[11,"deref_mut","","",122,[[["self"]],["asn1bitstringref"]]],[11,"deref_mut","","",123,[[["self"]],["asn1objectref"]]],[11,"deref_mut","openssl::bn","",6,[[["self"]],["bignumcontextref"]]],[11,"deref_mut","","",8,[[["self"]],["bignumref"]]],[11,"deref_mut","openssl::conf","",10,[[["self"]],["confref"]]],[11,"deref_mut","openssl::dh","",12,[[["self"]],["dhref"]]],[11,"deref_mut","openssl::dsa","",14,[[["self"]],["dsaref"]]],[11,"deref_mut","openssl::ec","",15,[[["self"]],["ecgroupref"]]],[11,"deref_mut","","",18,[[["self"]],["ecpointref"]]],[11,"deref_mut","","",20,[[["self"]],["eckeyref"]]],[11,"deref_mut","","",21,[[["self"]],["eckeybuilderref"]]],[11,"deref_mut","openssl::hash","",129,N],[11,"deref_mut","openssl::ocsp","",130,[[["self"]],["ocspbasicresponseref"]]],[11,"deref_mut","","",34,[[["self"]],["ocspcertidref"]]],[11,"deref_mut","","",35,[[["self"]],["ocspresponseref"]]],[11,"deref_mut","","",37,[[["self"]],["ocsprequestref"]]],[11,"deref_mut","","",132,[[["self"]],["ocsponereqref"]]],[11,"deref_mut","openssl::pkcs12","",41,[[["self"]],["pkcs12ref"]]],[11,"deref_mut","openssl::pkey","",45,[[["self"]],["pkeyref"]]],[11,"deref_mut","","",46,[[["self"]],["pkeyctxref"]]],[11,"deref_mut","openssl::rsa","",50,[[["self"]],["rsaref"]]],[11,"deref_mut","openssl::ssl","",68,[[["self"]],["sslcontextref"]]],[11,"deref_mut","","",134,[[["self"]],["sslcipherref"]]],[11,"deref_mut","","",135,[[["self"]],["sslsessionref"]]],[11,"deref_mut","","",73,[[["self"]],["sslref"]]],[11,"deref_mut","openssl::stack","",77,[[["self"]],["stackref"]]],[11,"deref_mut","openssl::string","",79,[[["self"]],["opensslstringref"]]],[11,"deref_mut","openssl::x509::store","",96,[[["self"]],["x509storebuilderref"]]],[11,"deref_mut","","",146,[[["self"]],["x509storeref"]]],[11,"deref_mut","openssl::x509","",140,[[["self"]],["x509storecontextref"]]],[11,"deref_mut","","",103,[[["self"]],["x509ref"]]],[11,"deref_mut","","",105,[[["self"]],["x509extensionref"]]],[11,"deref_mut","","",107,[[["self"]],["x509nameref"]]],[11,"deref_mut","","",143,[[["self"]],["x509nameentryref"]]],[11,"deref_mut","","",111,[[["self"]],["x509reqref"]]],[11,"deref_mut","","",144,[[["self"]],["generalnameref"]]],[11,"deref_mut","","",145,[[["self"]],["x509algorithmref"]]],[11,"index","openssl::stack","",78,N],[11,"index_mut","","",78,N],[11,"from_iter","openssl::ocsp","",29,[[["t"]],["flag"]]],[11,"from_iter","openssl::ssl","",62,[[["t"]],["ssloption"]]],[11,"from_iter","","",63,[[["t"]],["sslmode"]]],[11,"from_iter","","",65,[[["t"]],["sslverifymode"]]],[11,"borrow","","",135,[[["self"]],["sslsessionref"]]],[11,"borrow","openssl::stack","",77,[[["self"]],["stackref"]]],[11,"borrow","openssl::x509","",103,[[["self"]],["x509ref"]]],[11,"write","openssl::hash","",26,N],[11,"flush","","",26,[[["self"]],["result"]]],[11,"write","openssl::sign","",51,N],[11,"flush","","",51,[[["self"]],["result"]]],[11,"write","","",52,N],[11,"flush","","",52,[[["self"]],["result"]]],[11,"write","openssl::ssl","",75,N],[11,"flush","","",75,[[["self"]],["result"]]],[11,"read","","",75,N],[11,"description","openssl::error","",23,[[["self"]],["str"]]],[11,"description","","",24,[[["self"]],["str"]]],[11,"description","openssl::ssl","",54,[[["self"]],["str"]]],[11,"cause","","",54,[[["self"]],["option",["error"]]]],[11,"description","","",55,[[["self"]],["str"]]],[11,"cause","","",55,[[["self"]],["option",["stderror"]]]],[11,"description","openssl::x509","",113,[[["self"]],["str"]]],[11,"from_ptr","openssl::asn1","",117,N],[11,"as_ptr","","",117,N],[11,"from_ptr","","",1,N],[11,"as_ptr","","",1,N],[11,"from_ptr","","",120,N],[11,"as_ptr","","",120,N],[11,"from_ptr","","",121,N],[11,"as_ptr","","",121,N],[11,"from_ptr","","",122,N],[11,"as_ptr","","",122,N],[11,"from_ptr","","",123,N],[11,"as_ptr","","",123,N],[11,"from_ptr","openssl::bn","",6,N],[11,"as_ptr","","",6,N],[11,"from_ptr","","",8,N],[11,"as_ptr","","",8,N],[11,"from_ptr","openssl::conf","",10,N],[11,"as_ptr","","",10,N],[11,"from_ptr","openssl::dh","",12,N],[11,"as_ptr","","",12,N],[11,"from_ptr","openssl::dsa","",14,N],[11,"as_ptr","","",14,N],[11,"from_ptr","openssl::ec","",15,N],[11,"as_ptr","","",15,N],[11,"from_ptr","","",18,N],[11,"as_ptr","","",18,N],[11,"from_ptr","","",20,N],[11,"as_ptr","","",20,N],[11,"from_ptr","","",21,N],[11,"as_ptr","","",21,N],[11,"from_ptr","openssl::ocsp","",130,N],[11,"as_ptr","","",130,N],[11,"from_ptr","","",34,N],[11,"as_ptr","","",34,N],[11,"from_ptr","","",35,N],[11,"as_ptr","","",35,N],[11,"from_ptr","","",37,N],[11,"as_ptr","","",37,N],[11,"from_ptr","","",132,N],[11,"as_ptr","","",132,N],[11,"from_ptr","openssl::pkcs12","",41,N],[11,"as_ptr","","",41,N],[11,"from_ptr","openssl::pkey","",45,N],[11,"as_ptr","","",45,N],[11,"from_ptr","","",46,N],[11,"as_ptr","","",46,N],[11,"from_ptr","openssl::rsa","",50,N],[11,"as_ptr","","",50,N],[11,"from_ptr","openssl::ssl","",68,N],[11,"as_ptr","","",68,N],[11,"from_ptr","","",134,N],[11,"as_ptr","","",134,N],[11,"from_ptr","","",135,N],[11,"as_ptr","","",135,N],[11,"from_ptr","","",73,N],[11,"as_ptr","","",73,N],[11,"from_ptr","openssl::stack","",77,N],[11,"as_ptr","","",77,N],[11,"from_ptr","openssl::string","",79,N],[11,"as_ptr","","",79,N],[11,"from_ptr","openssl::x509::store","",96,N],[11,"as_ptr","","",96,N],[11,"from_ptr","","",146,N],[11,"as_ptr","","",146,N],[11,"from_ptr","openssl::x509","",140,N],[11,"as_ptr","","",140,N],[11,"from_ptr","","",103,N],[11,"as_ptr","","",103,N],[11,"from_ptr","","",105,N],[11,"as_ptr","","",105,N],[11,"from_ptr","","",107,N],[11,"as_ptr","","",107,N],[11,"from_ptr","","",143,N],[11,"as_ptr","","",143,N],[11,"from_ptr","","",111,N],[11,"as_ptr","","",111,N],[11,"from_ptr","","",144,N],[11,"as_ptr","","",144,N],[11,"from_ptr","","",145,N],[11,"as_ptr","","",145,N]],"paths":[[3,"AesKey"],[3,"Asn1Time"],[3,"Asn1StringRef"],[3,"Asn1IntegerRef"],[3,"Asn1BitStringRef"],[3,"Asn1ObjectRef"],[3,"BigNumContext"],[3,"BigNumRef"],[3,"BigNum"],[3,"ConfMethod"],[3,"Conf"],[3,"DhRef"],[3,"Dh"],[3,"DsaRef"],[3,"Dsa"],[3,"EcGroup"],[3,"EcGroupRef"],[3,"EcPointRef"],[3,"EcPoint"],[3,"EcKeyRef"],[3,"EcKey"],[3,"EcKeyBuilder"],[3,"EcKeyBuilderRef"],[3,"ErrorStack"],[3,"Error"],[3,"MessageDigest"],[3,"Hasher"],[3,"Nid"],[3,"Status"],[3,"Flag"],[3,"OcspResponseStatus"],[3,"OcspCertStatus"],[3,"OcspRevokedStatus"],[3,"OcspBasicResponseRef"],[3,"OcspCertId"],[3,"OcspResponse"],[3,"OcspResponseRef"],[3,"OcspRequest"],[3,"OcspRequestRef"],[3,"ParsedPkcs12"],[3,"Pkcs12Ref"],[3,"Pkcs12"],[3,"Pkcs12Builder"],[3,"KeyIvPair"],[3,"PKeyRef"],[3,"PKey"],[3,"PKeyCtx"],[3,"PKeyCtxRef"],[3,"Padding"],[3,"RsaRef"],[3,"Rsa"],[3,"Signer"],[3,"Verifier"],[3,"CipherBits"],[4,"Error"],[4,"HandshakeError"],[4,"SniError"],[4,"ShutdownResult"],[3,"SslConnectorBuilder"],[3,"SslConnector"],[3,"SslAcceptorBuilder"],[3,"SslAcceptor"],[3,"SslOption"],[3,"SslMode"],[3,"SslMethod"],[3,"SslVerifyMode"],[3,"StatusType"],[3,"SslContextBuilder"],[3,"SslContext"],[3,"SslContextRef"],[3,"SslCipherRef"],[3,"SslSessionRef"],[3,"SslRef"],[3,"Ssl"],[3,"MidHandshakeSslStream"],[3,"SslStream"],[8,"Stackable"],[3,"Stack"],[3,"StackRef"],[3,"OpensslString"],[4,"Mode"],[3,"Cipher"],[3,"Crypter"],[8,"OpenSslType"],[8,"OpenSslTypeRef"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"BasicConstraints"],[3,"KeyUsage"],[3,"ExtendedKeyUsage"],[3,"SubjectKeyIdentifier"],[3,"AuthorityKeyIdentifier"],[3,"SubjectAlternativeName"],[3,"X509StoreBuilder"],[3,"X509StoreBuilderRef"],[3,"X509FileType"],[3,"X509StoreContextRef"],[3,"X509Generator"],[3,"X509Builder"],[3,"X509Ref"],[3,"X509"],[3,"X509v3Context"],[3,"X509Extension"],[3,"X509NameBuilder"],[3,"X509Name"],[3,"X509NameRef"],[3,"X509NameEntryRef"],[3,"X509ReqBuilder"],[3,"X509Req"],[3,"X509ReqRef"],[3,"X509VerifyError"],[3,"GeneralNameRef"],[3,"X509AlgorithmRef"],[3,"KeyError"],[3,"Asn1GeneralizedTime"],[3,"Asn1GeneralizedTimeRef"],[3,"Asn1TimeRef"],[3,"Asn1String"],[3,"Asn1Integer"],[3,"Asn1BitString"],[3,"Asn1Object"],[3,"MsbOption"],[3,"BigNumContextRef"],[3,"ConfRef"],[3,"PointConversionForm"],[3,"Asn1Flag"],[3,"DigestBytes"],[3,"OcspBasicResponse"],[3,"OcspCertIdRef"],[3,"OcspOneReq"],[3,"OcspOneReqRef"],[3,"SslCipher"],[3,"SslSession"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"OpensslStringRef"],[3,"X509StoreContext"],[3,"X509ExtensionRef"],[3,"X509NameEntries"],[3,"X509NameEntry"],[3,"GeneralName"],[3,"X509Algorithm"],[3,"X509Store"],[3,"X509StoreRef"]]};
searchIndex["openssl_sys"]={"doc":"","items":[[3,"stack_st_ASN1_OBJECT","openssl_sys","",N,N],[12,"stack","","",0,N],[3,"stack_st_X509","","",N,N],[12,"stack","","",1,N],[3,"stack_st_X509_NAME","","",N,N],[12,"stack","","",2,N],[3,"stack_st_X509_ATTRIBUTE","","",N,N],[12,"stack","","",3,N],[3,"stack_st_X509_EXTENSION","","",N,N],[12,"stack","","",4,N],[3,"stack_st_GENERAL_NAME","","",N,N],[12,"stack","","",5,N],[3,"stack_st_void","","",N,N],[12,"stack","","",6,N],[3,"stack_st_SSL_CIPHER","","",N,N],[12,"stack","","",7,N],[3,"stack_st_OPENSSL_STRING","","",N,N],[12,"stack","","",8,N],[3,"_STACK","","",N,N],[12,"num","","",9,N],[12,"data","","",9,N],[12,"sorted","","",9,N],[12,"num_alloc","","",9,N],[12,"comp","","",9,N],[3,"BIO_METHOD","","",N,N],[12,"type_","","",10,N],[12,"name","","",10,N],[12,"bwrite","","",10,N],[12,"bread","","",10,N],[12,"bputs","","",10,N],[12,"bgets","","",10,N],[12,"ctrl","","",10,N],[12,"create","","",10,N],[12,"destroy","","",10,N],[12,"callback_ctrl","","",10,N],[3,"RSA","","",N,N],[12,"pad","","",11,N],[12,"version","","",11,N],[12,"meth","","",11,N],[12,"engine","","",11,N],[12,"n","","",11,N],[12,"e","","",11,N],[12,"d","","",11,N],[12,"p","","",11,N],[12,"q","","",11,N],[12,"dmp1","","",11,N],[12,"dmq1","","",11,N],[12,"iqmp","","",11,N],[12,"ex_data","","",11,N],[12,"references","","",11,N],[12,"flags","","",11,N],[12,"_method_mod_n","","",11,N],[12,"_method_mod_p","","",11,N],[12,"_method_mod_q","","",11,N],[12,"bignum_data","","",11,N],[12,"blinding","","",11,N],[12,"mt_blinding","","",11,N],[3,"DSA","","",N,N],[12,"pad","","",12,N],[12,"version","","",12,N],[12,"write_params","","",12,N],[12,"p","","",12,N],[12,"q","","",12,N],[12,"g","","",12,N],[12,"pub_key","","",12,N],[12,"priv_key","","",12,N],[12,"kinv","","",12,N],[12,"r","","",12,N],[12,"flags","","",12,N],[12,"method_mont_p","","",12,N],[12,"references","","",12,N],[12,"ex_data","","",12,N],[12,"meth","","",12,N],[12,"engine","","",12,N],[3,"EVP_PKEY","","",N,N],[12,"type_","","",13,N],[12,"save_type","","",13,N],[12,"references","","",13,N],[12,"ameth","","",13,N],[12,"engine","","",13,N],[12,"pkey","","",13,N],[12,"save_parameters","","",13,N],[12,"attributes","","",13,N],[3,"BIO","","",N,N],[12,"method","","",14,N],[12,"callback","","",14,N],[12,"cb_arg","","",14,N],[12,"init","","",14,N],[12,"shutdown","","",14,N],[12,"flags","","",14,N],[12,"retry_reason","","",14,N],[12,"num","","",14,N],[12,"ptr","","",14,N],[12,"next_bio","","",14,N],[12,"prev_bio","","",14,N],[12,"references","","",14,N],[12,"num_read","","",14,N],[12,"num_write","","",14,N],[12,"ex_data","","",14,N],[3,"CRYPTO_EX_DATA","","",N,N],[12,"sk","","",15,N],[12,"dummy","","",15,N],[3,"EVP_MD_CTX","","",N,N],[3,"EVP_CIPHER","","",N,N],[12,"nid","","",16,N],[12,"block_size","","",16,N],[12,"key_len","","",16,N],[12,"iv_len","","",16,N],[12,"flags","","",16,N],[12,"init","","",16,N],[12,"do_cipher","","",16,N],[12,"cleanup","","",16,N],[12,"ctx_size","","",16,N],[12,"set_asn1_parameters","","",16,N],[12,"get_asn1_parameters","","",16,N],[12,"ctrl","","",16,N],[12,"app_data","","",16,N],[3,"HMAC_CTX","","",N,N],[3,"BIGNUM","","",N,N],[12,"d","","",17,N],[12,"top","","",17,N],[12,"dmax","","",17,N],[12,"neg","","",17,N],[12,"flags","","",17,N],[3,"DH","","",N,N],[12,"pad","","",18,N],[12,"version","","",18,N],[12,"p","","",18,N],[12,"g","","",18,N],[12,"length","","",18,N],[12,"pub_key","","",18,N],[12,"priv_key","","",18,N],[12,"flags","","",18,N],[12,"method_mont_p","","",18,N],[12,"q","","",18,N],[12,"j","","",18,N],[12,"seed","","",18,N],[12,"seedlen","","",18,N],[12,"counter","","",18,N],[12,"references","","",18,N],[12,"ex_data","","",18,N],[12,"meth","","",18,N],[12,"engine","","",18,N],[3,"X509","","",N,N],[12,"cert_info","","",19,N],[12,"sig_alg","","",19,N],[12,"signature","","",19,N],[12,"valid","","",19,N],[12,"references","","",19,N],[12,"name","","",19,N],[12,"ex_data","","",19,N],[12,"ex_pathlen","","",19,N],[12,"ex_pcpathlen","","",19,N],[12,"ex_flags","","",19,N],[12,"ex_kusage","","",19,N],[12,"ex_xkusage","","",19,N],[12,"ex_nscert","","",19,N],[3,"X509_CINF","","",N,N],[12,"validity","","",20,N],[12,"extensions","","",20,N],[3,"X509_ALGOR","","",N,N],[12,"algorithm","","",21,N],[3,"ASN1_ENCODING","","",N,N],[12,"enc","","",22,N],[12,"len","","",22,N],[12,"modified","","",22,N],[3,"X509_VAL","","",N,N],[12,"notBefore","","",23,N],[12,"notAfter","","",23,N],[3,"X509_REQ_INFO","","",N,N],[12,"enc","","",24,N],[12,"version","","",24,N],[12,"subject","","",24,N],[12,"attributes","","",24,N],[3,"X509_REQ","","",N,N],[12,"req_info","","",25,N],[3,"SSL","","",N,N],[12,"server","","",26,N],[3,"SSL_CTX","","",N,N],[12,"references","","",27,N],[3,"SSL_SESSION","","",N,N],[12,"master_key_length","","",28,N],[12,"master_key","","",28,N],[12,"references","","",28,N],[3,"SRP_CTX","","",N,N],[3,"AES_KEY","","",N,N],[3,"GENERAL_NAME","","",N,N],[12,"type_","","",29,N],[12,"d","","",29,N],[3,"X509V3_CTX","","",N,N],[4,"PKCS12","","",N,N],[4,"ASN1_INTEGER","","",N,N],[4,"ASN1_GENERALIZEDTIME","","",N,N],[4,"ASN1_STRING","","",N,N],[4,"ASN1_BIT_STRING","","",N,N],[4,"ASN1_TIME","","",N,N],[4,"ASN1_TYPE","","",N,N],[4,"ASN1_OBJECT","","",N,N],[4,"BN_CTX","","",N,N],[4,"BN_GENCB","","",N,N],[4,"CONF","","",N,N],[4,"CONF_METHOD","","",N,N],[4,"COMP_METHOD","","",N,N],[4,"EC_KEY","","",N,N],[4,"EC_GROUP","","",N,N],[4,"EC_METHOD","","",N,N],[4,"EC_POINT","","",N,N],[4,"ENGINE","","",N,N],[4,"EVP_CIPHER_CTX","","",N,N],[4,"EVP_MD","","",N,N],[4,"EVP_PKEY_CTX","","",N,N],[4,"OCSP_BASICRESP","","",N,N],[4,"OCSP_CERTID","","",N,N],[4,"OCSP_RESPONSE","","",N,N],[4,"OCSP_REQUEST","","",N,N],[4,"OCSP_ONEREQ","","",N,N],[4,"SSL_CIPHER","","",N,N],[4,"SSL_METHOD","","",N,N],[4,"X509_CRL","","",N,N],[4,"X509_EXTENSION","","",N,N],[4,"X509_NAME","","",N,N],[4,"X509_NAME_ENTRY","","",N,N],[4,"X509_STORE","","",N,N],[4,"X509_STORE_CTX","","",N,N],[4,"bio_st","","",N,N],[4,"DH_METHOD","","",N,N],[4,"RSA_METHOD","","",N,N],[4,"BN_MONT_CTX","","",N,N],[4,"BN_BLINDING","","",N,N],[4,"DSA_METHOD","","",N,N],[4,"EVP_PKEY_ASN1_METHOD","","",N,N],[4,"point_conversion_form_t","","",N,N],[13,"POINT_CONVERSION_COMPRESSED","","",30,N],[13,"POINT_CONVERSION_UNCOMPRESSED","","",30,N],[13,"POINT_CONVERSION_HYBRID","","",30,N],[5,"init","","",N,[[]]],[5,"SSL_session_reused","","",N,N],[5,"BIO_get_mem_data","","",N,N],[5,"BIO_clear_retry_flags","","",N,N],[5,"BIO_set_retry_read","","",N,N],[5,"BIO_set_retry_write","","",N,N],[5,"EVP_PKEY_CTX_set_rsa_padding","","",N,N],[5,"EVP_PKEY_CTX_get_rsa_padding","","",N,N],[5,"SSL_CTX_set_mode","","",N,N],[5,"SSL_CTX_set_read_ahead","","",N,N],[5,"SSL_CTX_set_tmp_dh","","",N,N],[5,"SSL_CTX_set_tmp_ecdh","","",N,N],[5,"SSL_set_tmp_dh","","",N,N],[5,"SSL_set_tmp_ecdh","","",N,N],[5,"SSL_CTX_add_extra_chain_cert","","",N,N],[5,"SSL_CTX_set_tlsext_servername_callback","","",N,N],[5,"SSL_set_tlsext_host_name","","",N,N],[5,"SSL_set_tlsext_status_type","","",N,N],[5,"SSL_CTX_set_tlsext_status_cb","","",N,N],[5,"SSL_CTX_set_tlsext_status_arg","","",N,N],[5,"SSL_CTX_get_extra_chain_certs","","",N,N],[5,"SSL_get_tlsext_status_ocsp_resp","","",N,N],[5,"SSL_set_tlsext_status_ocsp_resp","","",N,N],[5,"ERR_GET_LIB","","",N,[[["c_ulong"]],["c_int"]]],[5,"ERR_GET_FUNC","","",N,[[["c_ulong"]],["c_int"]]],[5,"ERR_GET_REASON","","",N,[[["c_ulong"]],["c_int"]]],[5,"BIO_new","","",N,N],[5,"BIO_s_file","","",N,N],[5,"BIO_s_mem","","",N,N],[5,"get_rfc2409_prime_768","","",N,N],[5,"get_rfc2409_prime_1024","","",N,N],[5,"get_rfc3526_prime_1536","","",N,N],[5,"get_rfc3526_prime_2048","","",N,N],[5,"get_rfc3526_prime_3072","","",N,N],[5,"get_rfc3526_prime_4096","","",N,N],[5,"get_rfc3526_prime_6144","","",N,N],[5,"get_rfc3526_prime_8192","","",N,N],[5,"CRYPTO_malloc","","",N,N],[5,"CRYPTO_free","","",N,N],[5,"CRYPTO_num_locks","","",N,N],[5,"CRYPTO_set_locking_callback","","",N,N],[5,"CRYPTO_set_id_callback","","",N,N],[5,"ERR_load_crypto_strings","","",N,N],[5,"RSA_generate_key","","",N,N],[5,"OCSP_cert_to_id","","",N,N],[5,"PKCS12_create","","",N,N],[5,"SSL_library_init","","",N,N],[5,"SSL_load_error_strings","","",N,N],[5,"OPENSSL_add_all_algorithms_noconf","","",N,N],[5,"HMAC_CTX_init","","",N,N],[5,"HMAC_CTX_cleanup","","",N,N],[5,"SSLv3_method","","",N,N],[5,"TLSv1_method","","",N,N],[5,"SSLv23_method","","",N,N],[5,"TLSv1_1_method","","",N,N],[5,"TLSv1_2_method","","",N,N],[5,"DTLSv1_method","","",N,N],[5,"SSL_get_ex_new_index","","",N,N],[5,"SSL_set_tmp_ecdh_callback","","",N,N],[5,"SSL_CIPHER_get_version","","",N,N],[5,"SSL_CTX_get_ex_new_index","","",N,N],[5,"SSL_CTX_set_tmp_ecdh_callback","","",N,N],[5,"X509_get_subject_name","","",N,N],[5,"X509_set_notAfter","","",N,N],[5,"X509_set_notBefore","","",N,N],[5,"X509_get_ext_d2i","","",N,N],[5,"X509_NAME_add_entry_by_NID","","",N,N],[5,"X509_NAME_get_entry","","",N,N],[5,"X509_NAME_ENTRY_get_data","","",N,N],[5,"X509_STORE_CTX_get_chain","","",N,N],[5,"X509V3_EXT_nconf_nid","","",N,N],[5,"X509V3_EXT_nconf","","",N,N],[5,"ASN1_STRING_to_UTF8","","",N,N],[5,"ASN1_STRING_data","","",N,N],[5,"CRYPTO_add_lock","","",N,N],[5,"EVP_MD_CTX_create","","",N,N],[5,"EVP_MD_CTX_destroy","","",N,N],[5,"EVP_PKEY_bits","","",N,N],[5,"sk_new_null","","",N,N],[5,"sk_num","","",N,N],[5,"sk_value","","",N,N],[5,"sk_free","","",N,N],[5,"sk_push","","",N,N],[5,"sk_pop_free","","",N,N],[5,"sk_pop","","",N,N],[5,"SSLeay","","",N,N],[5,"SSLeay_version","","",N,N],[5,"AES_set_encrypt_key","","",N,N],[5,"AES_set_decrypt_key","","",N,N],[5,"AES_ige_encrypt","","",N,N],[5,"ASN1_INTEGER_get","","",N,N],[5,"ASN1_INTEGER_set","","",N,N],[5,"ASN1_GENERALIZEDTIME_free","","",N,N],[5,"ASN1_GENERALIZEDTIME_print","","",N,N],[5,"ASN1_STRING_type_new","","",N,N],[5,"ASN1_TIME_free","","",N,N],[5,"ASN1_TIME_print","","",N,N],[5,"ASN1_BIT_STRING_free","","",N,N],[5,"ASN1_OBJECT_free","","",N,N],[5,"BIO_ctrl","","",N,N],[5,"BIO_free_all","","",N,N],[5,"BIO_new_fp","","",N,N],[5,"BIO_new_socket","","",N,N],[5,"BIO_read","","",N,N],[5,"BIO_write","","",N,N],[5,"BIO_new_mem_buf","","",N,N],[5,"BIO_set_flags","","",N,N],[5,"BIO_clear_flags","","",N,N],[5,"BN_CTX_new","","",N,N],[5,"BN_CTX_free","","",N,N],[5,"BN_new","","",N,N],[5,"BN_dup","","",N,N],[5,"BN_clear","","",N,N],[5,"BN_free","","",N,N],[5,"BN_clear_free","","",N,N],[5,"BN_num_bits","","",N,N],[5,"BN_set_negative","","",N,N],[5,"BN_set_word","","",N,N],[5,"BN_add","","",N,N],[5,"BN_div","","",N,N],[5,"BN_exp","","",N,N],[5,"BN_gcd","","",N,N],[5,"BN_mod_add","","",N,N],[5,"BN_mod_exp","","",N,N],[5,"BN_mod_inverse","","",N,N],[5,"BN_mod_mul","","",N,N],[5,"BN_mod_sqr","","",N,N],[5,"BN_mod_sub","","",N,N],[5,"BN_mul","","",N,N],[5,"BN_nnmod","","",N,N],[5,"BN_add_word","","",N,N],[5,"BN_sub_word","","",N,N],[5,"BN_mul_word","","",N,N],[5,"BN_div_word","","",N,N],[5,"BN_mod_word","","",N,N],[5,"BN_sqr","","",N,N],[5,"BN_sub","","",N,N],[5,"BN_clear_bit","","",N,N],[5,"BN_is_bit_set","","",N,N],[5,"BN_lshift","","",N,N],[5,"BN_lshift1","","",N,N],[5,"BN_mask_bits","","",N,N],[5,"BN_rshift","","",N,N],[5,"BN_set_bit","","",N,N],[5,"BN_rshift1","","",N,N],[5,"BN_cmp","","",N,N],[5,"BN_ucmp","","",N,N],[5,"BN_generate_prime_ex","","",N,N],[5,"BN_is_prime_ex","","",N,N],[5,"BN_is_prime_fasttest_ex","","",N,N],[5,"BN_rand","","",N,N],[5,"BN_pseudo_rand","","",N,N],[5,"BN_rand_range","","",N,N],[5,"BN_pseudo_rand_range","","",N,N],[5,"BN_bin2bn","","",N,N],[5,"BN_bn2bin","","",N,N],[5,"BN_dec2bn","","",N,N],[5,"BN_bn2dec","","",N,N],[5,"BN_hex2bn","","",N,N],[5,"BN_bn2hex","","",N,N],[5,"BN_to_ASN1_INTEGER","","",N,N],[5,"NCONF_default","","",N,N],[5,"NCONF_new","","",N,N],[5,"NCONF_free","","",N,N],[5,"CRYPTO_memcmp","","",N,N],[5,"DH_new","","",N,N],[5,"DH_free","","",N,N],[5,"EC_KEY_new","","",N,N],[5,"EC_KEY_new_by_curve_name","","",N,N],[5,"EC_KEY_dup","","",N,N],[5,"EC_KEY_set_group","","",N,N],[5,"EC_KEY_get0_group","","",N,N],[5,"EC_KEY_set_public_key","","",N,N],[5,"EC_KEY_get0_public_key","","",N,N],[5,"EC_KEY_set_private_key","","",N,N],[5,"EC_KEY_get0_private_key","","",N,N],[5,"EC_KEY_generate_key","","",N,N],[5,"EC_KEY_check_key","","",N,N],[5,"EC_KEY_free","","",N,N],[5,"EC_GF2m_simple_method","","",N,N],[5,"EC_GROUP_new","","",N,N],[5,"EC_GROUP_new_curve_GFp","","",N,N],[5,"EC_GROUP_new_curve_GF2m","","",N,N],[5,"EC_GROUP_new_by_curve_name","","",N,N],[5,"EC_GROUP_get_curve_GFp","","",N,N],[5,"EC_GROUP_get_curve_GF2m","","",N,N],[5,"EC_GROUP_get_degree","","",N,N],[5,"EC_GROUP_get_order","","",N,N],[5,"EC_GROUP_set_asn1_flag","","",N,N],[5,"EC_GROUP_free","","",N,N],[5,"EC_POINT_new","","",N,N],[5,"EC_POINT_add","","",N,N],[5,"EC_POINT_mul","","",N,N],[5,"EC_POINT_invert","","",N,N],[5,"EC_POINT_point2oct","","",N,N],[5,"EC_POINT_oct2point","","",N,N],[5,"EC_POINT_cmp","","",N,N],[5,"EC_POINT_free","","",N,N],[5,"ERR_peek_last_error","","",N,N],[5,"ERR_get_error","","",N,N],[5,"ERR_get_error_line_data","","",N,N],[5,"ERR_lib_error_string","","",N,N],[5,"ERR_func_error_string","","",N,N],[5,"ERR_reason_error_string","","",N,N],[5,"ERR_clear_error","","",N,N],[5,"EVP_md5","","",N,N],[5,"EVP_ripemd160","","",N,N],[5,"EVP_sha1","","",N,N],[5,"EVP_sha224","","",N,N],[5,"EVP_sha256","","",N,N],[5,"EVP_sha384","","",N,N],[5,"EVP_sha512","","",N,N],[5,"EVP_aes_128_cbc","","",N,N],[5,"EVP_aes_128_ecb","","",N,N],[5,"EVP_aes_128_xts","","",N,N],[5,"EVP_aes_128_ctr","","",N,N],[5,"EVP_aes_128_gcm","","",N,N],[5,"EVP_aes_128_cfb1","","",N,N],[5,"EVP_aes_128_cfb128","","",N,N],[5,"EVP_aes_128_cfb8","","",N,N],[5,"EVP_aes_256_cbc","","",N,N],[5,"EVP_aes_256_ecb","","",N,N],[5,"EVP_aes_256_xts","","",N,N],[5,"EVP_aes_256_ctr","","",N,N],[5,"EVP_aes_256_gcm","","",N,N],[5,"EVP_aes_256_cfb1","","",N,N],[5,"EVP_aes_256_cfb128","","",N,N],[5,"EVP_aes_256_cfb8","","",N,N],[5,"EVP_bf_cbc","","",N,N],[5,"EVP_bf_ecb","","",N,N],[5,"EVP_bf_cfb64","","",N,N],[5,"EVP_bf_ofb","","",N,N],[5,"EVP_rc4","","",N,N],[5,"EVP_des_cbc","","",N,N],[5,"EVP_des_ecb","","",N,N],[5,"EVP_BytesToKey","","",N,N],[5,"EVP_CIPHER_CTX_new","","",N,N],[5,"EVP_CIPHER_CTX_set_padding","","",N,N],[5,"EVP_CIPHER_CTX_set_key_length","","",N,N],[5,"EVP_CIPHER_CTX_ctrl","","",N,N],[5,"EVP_CIPHER_CTX_free","","",N,N],[5,"EVP_CipherInit","","",N,N],[5,"EVP_CipherInit_ex","","",N,N],[5,"EVP_CipherUpdate","","",N,N],[5,"EVP_CipherFinal","","",N,N],[5,"EVP_DigestInit","","",N,N],[5,"EVP_DigestInit_ex","","",N,N],[5,"EVP_DigestUpdate","","",N,N],[5,"EVP_DigestFinal","","",N,N],[5,"EVP_DigestFinal_ex","","",N,N],[5,"EVP_DigestSignInit","","",N,N],[5,"EVP_DigestSignFinal","","",N,N],[5,"EVP_DigestVerifyInit","","",N,N],[5,"EVP_DigestVerifyFinal","","",N,N],[5,"EVP_MD_CTX_copy_ex","","",N,N],[5,"EVP_PKEY_new","","",N,N],[5,"EVP_PKEY_free","","",N,N],[5,"EVP_PKEY_assign","","",N,N],[5,"EVP_PKEY_copy_parameters","","",N,N],[5,"EVP_PKEY_get1_RSA","","",N,N],[5,"EVP_PKEY_set1_RSA","","",N,N],[5,"EVP_PKEY_get1_DSA","","",N,N],[5,"EVP_PKEY_get1_DH","","",N,N],[5,"EVP_PKEY_get1_EC_KEY","","",N,N],[5,"EVP_PKEY_cmp","","",N,N],[5,"EVP_PKEY_new_mac_key","","",N,N],[5,"EVP_PKEY_derive_init","","",N,N],[5,"EVP_PKEY_derive_set_peer","","",N,N],[5,"EVP_PKEY_derive","","",N,N],[5,"d2i_PKCS8PrivateKey_bio","","",N,N],[5,"EVP_PKEY_CTX_new","","",N,N],[5,"EVP_PKEY_CTX_free","","",N,N],[5,"EVP_PKEY_CTX_ctrl","","",N,N],[5,"HMAC_CTX_copy","","",N,N],[5,"OBJ_obj2nid","","",N,N],[5,"OBJ_obj2txt","","",N,N],[5,"OCSP_BASICRESP_new","","",N,N],[5,"OCSP_BASICRESP_free","","",N,N],[5,"OCSP_basic_verify","","",N,N],[5,"OCSP_resp_find_status","","",N,N],[5,"OCSP_check_validity","","",N,N],[5,"OCSP_CERTID_free","","",N,N],[5,"OCSP_RESPONSE_new","","",N,N],[5,"OCSP_RESPONSE_free","","",N,N],[5,"i2d_OCSP_RESPONSE","","",N,N],[5,"d2i_OCSP_RESPONSE","","",N,N],[5,"OCSP_response_create","","",N,N],[5,"OCSP_response_status","","",N,N],[5,"OCSP_response_get1_basic","","",N,N],[5,"OCSP_REQUEST_new","","",N,N],[5,"OCSP_REQUEST_free","","",N,N],[5,"i2d_OCSP_REQUEST","","",N,N],[5,"d2i_OCSP_REQUEST","","",N,N],[5,"OCSP_request_add0_id","","",N,N],[5,"OCSP_ONEREQ_free","","",N,N],[5,"PEM_read_bio_DHparams","","",N,N],[5,"PEM_read_bio_X509","","",N,N],[5,"PEM_read_bio_X509_REQ","","",N,N],[5,"PEM_read_bio_PrivateKey","","",N,N],[5,"PEM_read_bio_PUBKEY","","",N,N],[5,"PEM_read_bio_RSAPrivateKey","","",N,N],[5,"PEM_read_bio_RSA_PUBKEY","","",N,N],[5,"PEM_write_bio_DHparams","","",N,N],[5,"PEM_write_bio_PrivateKey","","",N,N],[5,"PEM_write_bio_PKCS8PrivateKey","","",N,N],[5,"PEM_write_bio_PUBKEY","","",N,N],[5,"PEM_write_bio_RSAPrivateKey","","",N,N],[5,"PEM_write_bio_RSAPublicKey","","",N,N],[5,"PEM_write_bio_RSA_PUBKEY","","",N,N],[5,"PEM_read_bio_DSAPrivateKey","","",N,N],[5,"PEM_read_bio_DSA_PUBKEY","","",N,N],[5,"PEM_write_bio_DSAPrivateKey","","",N,N],[5,"PEM_write_bio_DSA_PUBKEY","","",N,N],[5,"PEM_write_bio_X509","","",N,N],[5,"PEM_write_bio_X509_REQ","","",N,N],[5,"PEM_write_bio_ECPrivateKey","","",N,N],[5,"PEM_read_bio_ECPrivateKey","","",N,N],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",N,N],[5,"PKCS5_PBKDF2_HMAC","","",N,N],[5,"RAND_bytes","","",N,N],[5,"RAND_status","","",N,N],[5,"RSA_new","","",N,N],[5,"RSA_free","","",N,N],[5,"RSA_generate_key_ex","","",N,N],[5,"RSA_private_decrypt","","",N,N],[5,"RSA_public_decrypt","","",N,N],[5,"RSA_private_encrypt","","",N,N],[5,"RSA_public_encrypt","","",N,N],[5,"RSA_sign","","",N,N],[5,"RSA_size","","",N,N],[5,"RSA_verify","","",N,N],[5,"DSA_new","","",N,N],[5,"DSA_free","","",N,N],[5,"DSA_size","","",N,N],[5,"DSA_generate_parameters_ex","","",N,N],[5,"DSA_generate_key","","",N,N],[5,"DSA_sign","","",N,N],[5,"DSA_verify","","",N,N],[5,"SHA1","","",N,N],[5,"SHA224","","",N,N],[5,"SHA256","","",N,N],[5,"SHA384","","",N,N],[5,"SHA512","","",N,N],[5,"SSL_new","","",N,N],[5,"SSL_pending","","",N,N],[5,"SSL_free","","",N,N],[5,"SSL_set_bio","","",N,N],[5,"SSL_get_rbio","","",N,N],[5,"SSL_get_wbio","","",N,N],[5,"SSL_accept","","",N,N],[5,"SSL_connect","","",N,N],[5,"SSL_do_handshake","","",N,N],[5,"SSL_ctrl","","",N,N],[5,"SSL_get_error","","",N,N],[5,"SSL_read","","",N,N],[5,"SSL_write","","",N,N],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",N,N],[5,"SSL_get_SSL_CTX","","",N,N],[5,"SSL_set_SSL_CTX","","",N,N],[5,"SSL_get_current_compression","","",N,N],[5,"SSL_get_peer_certificate","","",N,N],[5,"SSL_get_ssl_method","","",N,N],[5,"SSL_get_version","","",N,N],[5,"SSL_state_string","","",N,N],[5,"SSL_state_string_long","","",N,N],[5,"SSL_set_verify","","",N,N],[5,"SSL_set_ex_data","","",N,N],[5,"SSL_get_ex_data","","",N,N],[5,"SSL_get_servername","","",N,N],[5,"SSL_get_current_cipher","","",N,N],[5,"SSL_get_verify_result","","",N,N],[5,"SSL_shutdown","","",N,N],[5,"SSL_get_certificate","","",N,N],[5,"SSL_get_privatekey","","",N,N],[5,"SSL_load_client_CA_file","","",N,N],[5,"SSL_set_tmp_dh_callback","","",N,N],[5,"SSL_COMP_get_name","","",N,N],[5,"SSL_CIPHER_get_name","","",N,N],[5,"SSL_CIPHER_get_bits","","",N,N],[5,"SSL_CIPHER_description","","",N,N],[5,"SSL_CTX_new","","",N,N],[5,"SSL_CTX_free","","",N,N],[5,"SSL_CTX_ctrl","","",N,N],[5,"SSL_CTX_callback_ctrl","","",N,N],[5,"SSL_CTX_set_verify","","",N,N],[5,"SSL_CTX_set_verify_depth","","",N,N],[5,"SSL_CTX_load_verify_locations","","",N,N],[5,"SSL_CTX_set_default_verify_paths","","",N,N],[5,"SSL_CTX_set_ex_data","","",N,N],[5,"SSL_CTX_get_ex_data","","",N,N],[5,"SSL_CTX_set_session_id_context","","",N,N],[5,"SSL_CTX_use_certificate_file","","",N,N],[5,"SSL_CTX_use_certificate_chain_file","","",N,N],[5,"SSL_CTX_use_certificate","","",N,N],[5,"SSL_CTX_use_PrivateKey_file","","",N,N],[5,"SSL_CTX_use_PrivateKey","","",N,N],[5,"SSL_CTX_check_private_key","","",N,N],[5,"SSL_CTX_set_client_CA_list","","",N,N],[5,"SSL_CTX_get_cert_store","","",N,N],[5,"SSL_CTX_set_tmp_dh_callback","","",N,N],[5,"SSL_CTX_set_cipher_list","","",N,N],[5,"SSL_CTX_set_next_protos_advertised_cb","","",N,N],[5,"SSL_CTX_set_next_proto_select_cb","","",N,N],[5,"SSL_select_next_proto","","",N,N],[5,"SSL_get0_next_proto_negotiated","","",N,N],[5,"SSL_get_session","","",N,N],[5,"SSL_set_session","","",N,N],[5,"SSL_SESSION_free","","",N,N],[5,"SSL_SESSION_get_id","","",N,N],[5,"X509_add_ext","","",N,N],[5,"X509_digest","","",N,N],[5,"X509_free","","",N,N],[5,"X509_REQ_free","","",N,N],[5,"X509_get_serialNumber","","",N,N],[5,"X509_gmtime_adj","","",N,N],[5,"X509_new","","",N,N],[5,"X509_set_issuer_name","","",N,N],[5,"X509_set_subject_name","","",N,N],[5,"X509_set_serialNumber","","",N,N],[5,"X509_set_version","","",N,N],[5,"X509_set_pubkey","","",N,N],[5,"X509_sign","","",N,N],[5,"X509_get_pubkey","","",N,N],[5,"X509_to_X509_REQ","","",N,N],[5,"X509_verify_cert_error_string","","",N,N],[5,"X509_get1_ocsp","","",N,N],[5,"X509_check_issued","","",N,N],[5,"X509_ALGOR_free","","",N,N],[5,"X509_EXTENSION_free","","",N,N],[5,"X509_NAME_new","","",N,N],[5,"X509_NAME_free","","",N,N],[5,"X509_NAME_add_entry_by_txt","","",N,N],[5,"X509_NAME_get_index_by_NID","","",N,N],[5,"X509_NAME_ENTRY_free","","",N,N],[5,"ASN1_STRING_free","","",N,N],[5,"ASN1_STRING_length","","",N,N],[5,"ASN1_INTEGER_free","","",N,N],[5,"X509_STORE_new","","",N,N],[5,"X509_STORE_free","","",N,N],[5,"X509_STORE_add_cert","","",N,N],[5,"X509_STORE_set_default_paths","","",N,N],[5,"X509_STORE_CTX_free","","",N,N],[5,"X509_STORE_CTX_get_current_cert","","",N,N],[5,"X509_STORE_CTX_get_error","","",N,N],[5,"X509_STORE_CTX_get_ex_data","","",N,N],[5,"X509_STORE_CTX_get_error_depth","","",N,N],[5,"X509V3_set_ctx","","",N,N],[5,"X509V3_set_nconf","","",N,N],[5,"X509_REQ_new","","",N,N],[5,"X509_REQ_set_version","","",N,N],[5,"X509_REQ_set_subject_name","","",N,N],[5,"X509_REQ_set_pubkey","","",N,N],[5,"X509_REQ_add_extensions","","",N,N],[5,"X509_REQ_sign","","",N,N],[5,"d2i_DHparams","","",N,N],[5,"i2d_DHparams","","",N,N],[5,"d2i_DSAPublicKey","","",N,N],[5,"i2d_DSAPublicKey","","",N,N],[5,"d2i_DSAPrivateKey","","",N,N],[5,"i2d_DSAPrivateKey","","",N,N],[5,"d2i_ECPrivateKey","","",N,N],[5,"i2d_ECPrivateKey","","",N,N],[5,"d2i_X509","","",N,N],[5,"d2i_X509_REQ","","",N,N],[5,"i2d_X509_bio","","",N,N],[5,"i2d_X509","","",N,N],[5,"i2d_X509_REQ_bio","","",N,N],[5,"i2d_X509_REQ","","",N,N],[5,"d2i_PUBKEY","","",N,N],[5,"i2d_PUBKEY_bio","","",N,N],[5,"i2d_PrivateKey_bio","","",N,N],[5,"i2d_PUBKEY","","",N,N],[5,"i2d_PrivateKey","","",N,N],[5,"i2d_RSA_PUBKEY","","",N,N],[5,"d2i_RSA_PUBKEY","","",N,N],[5,"i2d_RSAPrivateKey","","",N,N],[5,"d2i_RSAPrivateKey","","",N,N],[5,"i2d_PKCS12_bio","","",N,N],[5,"i2d_PKCS12","","",N,N],[5,"d2i_PKCS12","","",N,N],[5,"PKCS12_parse","","",N,N],[5,"PKCS12_free","","",N,N],[5,"GENERAL_NAME_free","","",N,N],[5,"HMAC_Init_ex","","",N,N],[5,"HMAC_Update","","",N,N],[5,"HMAC_Final","","",N,N],[6,"bio_info_cb","","",N,N],[6,"GEN_SESSION_CB","","",N,N],[6,"tls_session_ticket_ext_cb_fn","","",N,N],[6,"tls_session_secret_cb_fn","","",N,N],[6,"BN_ULONG","","",N,N],[6,"CRYPTO_EX_new","","",N,N],[6,"CRYPTO_EX_dup","","",N,N],[6,"CRYPTO_EX_free","","",N,N],[6,"PasswordCallback","","",N,N],[17,"SSL_CTRL_GET_SESSION_REUSED","","",N,N],[17,"SSL_CTRL_OPTIONS","","",N,N],[17,"SSL_CTRL_CLEAR_OPTIONS","","",N,N],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",N,N],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",N,N],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",N,N],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",N,N],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",N,N],[17,"SSL_OP_TLS_D5_BUG","","",N,N],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",N,N],[17,"SSL_OP_SINGLE_ECDH_USE","","",N,N],[17,"SSL_OP_SINGLE_DH_USE","","",N,N],[17,"SSL_OP_NO_SSLv2","","",N,N],[17,"SSL_MAX_SSL_SESSION_ID_LENGTH","","",N,N],[17,"SSL_MAX_SID_CTX_LENGTH","","",N,N],[17,"SSL_MAX_KEY_ARG_LENGTH","","",N,N],[17,"SSL_MAX_MASTER_KEY_LENGTH","","",N,N],[17,"SSL_MAX_KRB5_PRINCIPAL_LENGTH","","",N,N],[17,"SSLEAY_VERSION","","",N,N],[17,"SSLEAY_CFLAGS","","",N,N],[17,"SSLEAY_BUILT_ON","","",N,N],[17,"SSLEAY_PLATFORM","","",N,N],[17,"SSLEAY_DIR","","",N,N],[17,"CRYPTO_LOCK_X509","","",N,N],[17,"CRYPTO_LOCK_SSL_CTX","","",N,N],[17,"CRYPTO_LOCK_SSL_SESSION","","",N,N],[17,"AES_ENCRYPT","","",N,N],[17,"AES_DECRYPT","","",N,N],[17,"AES_MAXNR","","",N,N],[17,"AES_BLOCK_SIZE","","",N,N],[17,"BIO_TYPE_NONE","","",N,N],[17,"BIO_CTRL_EOF","","",N,N],[17,"BIO_CTRL_INFO","","",N,N],[17,"BIO_CTRL_FLUSH","","",N,N],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",N,N],[17,"BIO_FLAGS_READ","","",N,N],[17,"BIO_FLAGS_WRITE","","",N,N],[17,"BIO_FLAGS_IO_SPECIAL","","",N,N],[17,"BIO_FLAGS_RWS","","",N,N],[17,"BIO_FLAGS_SHOULD_RETRY","","",N,N],[17,"CRYPTO_LOCK","","",N,N],[17,"ERR_TXT_MALLOCED","","",N,N],[17,"ERR_TXT_STRING","","",N,N],[17,"ERR_LIB_PEM","","",N,N],[17,"PEM_R_NO_START_LINE","","",N,N],[17,"EVP_MAX_MD_SIZE","","",N,N],[17,"EVP_PKEY_RSA","","",N,N],[17,"EVP_PKEY_HMAC","","",N,N],[17,"EVP_PKEY_DSA","","",N,N],[17,"EVP_PKEY_DH","","",N,N],[17,"EVP_PKEY_EC","","",N,N],[17,"EVP_PKEY_ALG_CTRL","","",N,N],[17,"EVP_PKEY_CTRL_RSA_PADDING","","",N,N],[17,"EVP_PKEY_CTRL_GET_RSA_PADDING","","",N,N],[17,"EVP_CTRL_GCM_SET_IVLEN","","",N,N],[17,"EVP_CTRL_GCM_GET_TAG","","",N,N],[17,"EVP_CTRL_GCM_SET_TAG","","",N,N],[17,"MBSTRING_ASC","","",N,N],[17,"MBSTRING_BMP","","",N,N],[17,"MBSTRING_FLAG","","",N,N],[17,"MBSTRING_UNIV","","",N,N],[17,"MBSTRING_UTF8","","",N,N],[17,"NID_undef","","",N,N],[17,"NID_itu_t","","",N,N],[17,"NID_ccitt","","",N,N],[17,"NID_iso","","",N,N],[17,"NID_joint_iso_itu_t","","",N,N],[17,"NID_joint_iso_ccitt","","",N,N],[17,"NID_member_body","","",N,N],[17,"NID_identified_organization","","",N,N],[17,"NID_hmac_md5","","",N,N],[17,"NID_hmac_sha1","","",N,N],[17,"NID_certicom_arc","","",N,N],[17,"NID_international_organizations","","",N,N],[17,"NID_wap","","",N,N],[17,"NID_wap_wsg","","",N,N],[17,"NID_selected_attribute_types","","",N,N],[17,"NID_clearance","","",N,N],[17,"NID_ISO_US","","",N,N],[17,"NID_X9_57","","",N,N],[17,"NID_X9cm","","",N,N],[17,"NID_dsa","","",N,N],[17,"NID_dsaWithSHA1","","",N,N],[17,"NID_ansi_X9_62","","",N,N],[17,"NID_X9_62_prime_field","","",N,N],[17,"NID_X9_62_characteristic_two_field","","",N,N],[17,"NID_X9_62_id_characteristic_two_basis","","",N,N],[17,"NID_X9_62_onBasis","","",N,N],[17,"NID_X9_62_tpBasis","","",N,N],[17,"NID_X9_62_ppBasis","","",N,N],[17,"NID_X9_62_id_ecPublicKey","","",N,N],[17,"NID_X9_62_c2pnb163v1","","",N,N],[17,"NID_X9_62_c2pnb163v2","","",N,N],[17,"NID_X9_62_c2pnb163v3","","",N,N],[17,"NID_X9_62_c2pnb176v1","","",N,N],[17,"NID_X9_62_c2tnb191v1","","",N,N],[17,"NID_X9_62_c2tnb191v2","","",N,N],[17,"NID_X9_62_c2tnb191v3","","",N,N],[17,"NID_X9_62_c2onb191v4","","",N,N],[17,"NID_X9_62_c2onb191v5","","",N,N],[17,"NID_X9_62_c2pnb208w1","","",N,N],[17,"NID_X9_62_c2tnb239v1","","",N,N],[17,"NID_X9_62_c2tnb239v2","","",N,N],[17,"NID_X9_62_c2tnb239v3","","",N,N],[17,"NID_X9_62_c2onb239v4","","",N,N],[17,"NID_X9_62_c2onb239v5","","",N,N],[17,"NID_X9_62_c2pnb272w1","","",N,N],[17,"NID_X9_62_c2pnb304w1","","",N,N],[17,"NID_X9_62_c2tnb359v1","","",N,N],[17,"NID_X9_62_c2pnb368w1","","",N,N],[17,"NID_X9_62_c2tnb431r1","","",N,N],[17,"NID_X9_62_prime192v1","","",N,N],[17,"NID_X9_62_prime192v2","","",N,N],[17,"NID_X9_62_prime192v3","","",N,N],[17,"NID_X9_62_prime239v1","","",N,N],[17,"NID_X9_62_prime239v2","","",N,N],[17,"NID_X9_62_prime239v3","","",N,N],[17,"NID_X9_62_prime256v1","","",N,N],[17,"NID_ecdsa_with_SHA1","","",N,N],[17,"NID_ecdsa_with_Recommended","","",N,N],[17,"NID_ecdsa_with_Specified","","",N,N],[17,"NID_ecdsa_with_SHA224","","",N,N],[17,"NID_ecdsa_with_SHA256","","",N,N],[17,"NID_ecdsa_with_SHA384","","",N,N],[17,"NID_ecdsa_with_SHA512","","",N,N],[17,"NID_secp112r1","","",N,N],[17,"NID_secp112r2","","",N,N],[17,"NID_secp128r1","","",N,N],[17,"NID_secp128r2","","",N,N],[17,"NID_secp160k1","","",N,N],[17,"NID_secp160r1","","",N,N],[17,"NID_secp160r2","","",N,N],[17,"NID_secp192k1","","",N,N],[17,"NID_secp224k1","","",N,N],[17,"NID_secp224r1","","",N,N],[17,"NID_secp256k1","","",N,N],[17,"NID_secp384r1","","",N,N],[17,"NID_secp521r1","","",N,N],[17,"NID_sect113r1","","",N,N],[17,"NID_sect113r2","","",N,N],[17,"NID_sect131r1","","",N,N],[17,"NID_sect131r2","","",N,N],[17,"NID_sect163k1","","",N,N],[17,"NID_sect163r1","","",N,N],[17,"NID_sect163r2","","",N,N],[17,"NID_sect193r1","","",N,N],[17,"NID_sect193r2","","",N,N],[17,"NID_sect233k1","","",N,N],[17,"NID_sect233r1","","",N,N],[17,"NID_sect239k1","","",N,N],[17,"NID_sect283k1","","",N,N],[17,"NID_sect283r1","","",N,N],[17,"NID_sect409k1","","",N,N],[17,"NID_sect409r1","","",N,N],[17,"NID_sect571k1","","",N,N],[17,"NID_sect571r1","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls1","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls3","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls4","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls5","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls6","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls7","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls8","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls9","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls10","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls11","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls12","","",N,N],[17,"NID_cast5_cbc","","",N,N],[17,"NID_cast5_ecb","","",N,N],[17,"NID_cast5_cfb64","","",N,N],[17,"NID_cast5_ofb64","","",N,N],[17,"NID_pbeWithMD5AndCast5_CBC","","",N,N],[17,"NID_id_PasswordBasedMAC","","",N,N],[17,"NID_id_DHBasedMac","","",N,N],[17,"NID_rsadsi","","",N,N],[17,"NID_pkcs","","",N,N],[17,"NID_pkcs1","","",N,N],[17,"NID_rsaEncryption","","",N,N],[17,"NID_md2WithRSAEncryption","","",N,N],[17,"NID_md4WithRSAEncryption","","",N,N],[17,"NID_md5WithRSAEncryption","","",N,N],[17,"NID_sha1WithRSAEncryption","","",N,N],[17,"NID_rsaesOaep","","",N,N],[17,"NID_mgf1","","",N,N],[17,"NID_rsassaPss","","",N,N],[17,"NID_sha256WithRSAEncryption","","",N,N],[17,"NID_sha384WithRSAEncryption","","",N,N],[17,"NID_sha512WithRSAEncryption","","",N,N],[17,"NID_sha224WithRSAEncryption","","",N,N],[17,"NID_pkcs3","","",N,N],[17,"NID_dhKeyAgreement","","",N,N],[17,"NID_pkcs5","","",N,N],[17,"NID_pbeWithMD2AndDES_CBC","","",N,N],[17,"NID_pbeWithMD5AndDES_CBC","","",N,N],[17,"NID_pbeWithMD2AndRC2_CBC","","",N,N],[17,"NID_pbeWithMD5AndRC2_CBC","","",N,N],[17,"NID_pbeWithSHA1AndDES_CBC","","",N,N],[17,"NID_pbeWithSHA1AndRC2_CBC","","",N,N],[17,"NID_id_pbkdf2","","",N,N],[17,"NID_pbes2","","",N,N],[17,"NID_pbmac1","","",N,N],[17,"NID_pkcs7","","",N,N],[17,"NID_pkcs7_data","","",N,N],[17,"NID_pkcs7_signed","","",N,N],[17,"NID_pkcs7_enveloped","","",N,N],[17,"NID_pkcs7_signedAndEnveloped","","",N,N],[17,"NID_pkcs7_digest","","",N,N],[17,"NID_pkcs7_encrypted","","",N,N],[17,"NID_pkcs9","","",N,N],[17,"NID_pkcs9_emailAddress","","",N,N],[17,"NID_pkcs9_unstructuredName","","",N,N],[17,"NID_pkcs9_contentType","","",N,N],[17,"NID_pkcs9_messageDigest","","",N,N],[17,"NID_pkcs9_signingTime","","",N,N],[17,"NID_pkcs9_countersignature","","",N,N],[17,"NID_pkcs9_challengePassword","","",N,N],[17,"NID_pkcs9_unstructuredAddress","","",N,N],[17,"NID_pkcs9_extCertAttributes","","",N,N],[17,"NID_ext_req","","",N,N],[17,"NID_SMIMECapabilities","","",N,N],[17,"NID_SMIME","","",N,N],[17,"NID_id_smime_mod","","",N,N],[17,"NID_id_smime_ct","","",N,N],[17,"NID_id_smime_aa","","",N,N],[17,"NID_id_smime_alg","","",N,N],[17,"NID_id_smime_cd","","",N,N],[17,"NID_id_smime_spq","","",N,N],[17,"NID_id_smime_cti","","",N,N],[17,"NID_id_smime_mod_cms","","",N,N],[17,"NID_id_smime_mod_ess","","",N,N],[17,"NID_id_smime_mod_oid","","",N,N],[17,"NID_id_smime_mod_msg_v3","","",N,N],[17,"NID_id_smime_mod_ets_eSignature_88","","",N,N],[17,"NID_id_smime_mod_ets_eSignature_97","","",N,N],[17,"NID_id_smime_mod_ets_eSigPolicy_88","","",N,N],[17,"NID_id_smime_mod_ets_eSigPolicy_97","","",N,N],[17,"NID_id_smime_ct_receipt","","",N,N],[17,"NID_id_smime_ct_authData","","",N,N],[17,"NID_id_smime_ct_publishCert","","",N,N],[17,"NID_id_smime_ct_TSTInfo","","",N,N],[17,"NID_id_smime_ct_TDTInfo","","",N,N],[17,"NID_id_smime_ct_contentInfo","","",N,N],[17,"NID_id_smime_ct_DVCSRequestData","","",N,N],[17,"NID_id_smime_ct_DVCSResponseData","","",N,N],[17,"NID_id_smime_ct_compressedData","","",N,N],[17,"NID_id_ct_asciiTextWithCRLF","","",N,N],[17,"NID_id_smime_aa_receiptRequest","","",N,N],[17,"NID_id_smime_aa_securityLabel","","",N,N],[17,"NID_id_smime_aa_mlExpandHistory","","",N,N],[17,"NID_id_smime_aa_contentHint","","",N,N],[17,"NID_id_smime_aa_msgSigDigest","","",N,N],[17,"NID_id_smime_aa_encapContentType","","",N,N],[17,"NID_id_smime_aa_contentIdentifier","","",N,N],[17,"NID_id_smime_aa_macValue","","",N,N],[17,"NID_id_smime_aa_equivalentLabels","","",N,N],[17,"NID_id_smime_aa_contentReference","","",N,N],[17,"NID_id_smime_aa_encrypKeyPref","","",N,N],[17,"NID_id_smime_aa_signingCertificate","","",N,N],[17,"NID_id_smime_aa_smimeEncryptCerts","","",N,N],[17,"NID_id_smime_aa_timeStampToken","","",N,N],[17,"NID_id_smime_aa_ets_sigPolicyId","","",N,N],[17,"NID_id_smime_aa_ets_commitmentType","","",N,N],[17,"NID_id_smime_aa_ets_signerLocation","","",N,N],[17,"NID_id_smime_aa_ets_signerAttr","","",N,N],[17,"NID_id_smime_aa_ets_otherSigCert","","",N,N],[17,"NID_id_smime_aa_ets_contentTimestamp","","",N,N],[17,"NID_id_smime_aa_ets_CertificateRefs","","",N,N],[17,"NID_id_smime_aa_ets_RevocationRefs","","",N,N],[17,"NID_id_smime_aa_ets_certValues","","",N,N],[17,"NID_id_smime_aa_ets_revocationValues","","",N,N],[17,"NID_id_smime_aa_ets_escTimeStamp","","",N,N],[17,"NID_id_smime_aa_ets_certCRLTimestamp","","",N,N],[17,"NID_id_smime_aa_ets_archiveTimeStamp","","",N,N],[17,"NID_id_smime_aa_signatureType","","",N,N],[17,"NID_id_smime_aa_dvcs_dvc","","",N,N],[17,"NID_id_smime_alg_ESDHwith3DES","","",N,N],[17,"NID_id_smime_alg_ESDHwithRC2","","",N,N],[17,"NID_id_smime_alg_3DESwrap","","",N,N],[17,"NID_id_smime_alg_RC2wrap","","",N,N],[17,"NID_id_smime_alg_ESDH","","",N,N],[17,"NID_id_smime_alg_CMS3DESwrap","","",N,N],[17,"NID_id_smime_alg_CMSRC2wrap","","",N,N],[17,"NID_id_alg_PWRI_KEK","","",N,N],[17,"NID_id_smime_cd_ldap","","",N,N],[17,"NID_id_smime_spq_ets_sqt_uri","","",N,N],[17,"NID_id_smime_spq_ets_sqt_unotice","","",N,N],[17,"NID_id_smime_cti_ets_proofOfOrigin","","",N,N],[17,"NID_id_smime_cti_ets_proofOfReceipt","","",N,N],[17,"NID_id_smime_cti_ets_proofOfDelivery","","",N,N],[17,"NID_id_smime_cti_ets_proofOfSender","","",N,N],[17,"NID_id_smime_cti_ets_proofOfApproval","","",N,N],[17,"NID_id_smime_cti_ets_proofOfCreation","","",N,N],[17,"NID_friendlyName","","",N,N],[17,"NID_localKeyID","","",N,N],[17,"NID_ms_csp_name","","",N,N],[17,"NID_LocalKeySet","","",N,N],[17,"NID_x509Certificate","","",N,N],[17,"NID_sdsiCertificate","","",N,N],[17,"NID_x509Crl","","",N,N],[17,"NID_pbe_WithSHA1And128BitRC4","","",N,N],[17,"NID_pbe_WithSHA1And40BitRC4","","",N,N],[17,"NID_pbe_WithSHA1And3_Key_TripleDES_CBC","","",N,N],[17,"NID_pbe_WithSHA1And2_Key_TripleDES_CBC","","",N,N],[17,"NID_pbe_WithSHA1And128BitRC2_CBC","","",N,N],[17,"NID_pbe_WithSHA1And40BitRC2_CBC","","",N,N],[17,"NID_keyBag","","",N,N],[17,"NID_pkcs8ShroudedKeyBag","","",N,N],[17,"NID_certBag","","",N,N],[17,"NID_crlBag","","",N,N],[17,"NID_secretBag","","",N,N],[17,"NID_safeContentsBag","","",N,N],[17,"NID_md2","","",N,N],[17,"NID_md4","","",N,N],[17,"NID_md5","","",N,N],[17,"NID_md5_sha1","","",N,N],[17,"NID_hmacWithMD5","","",N,N],[17,"NID_hmacWithSHA1","","",N,N],[17,"NID_hmacWithSHA224","","",N,N],[17,"NID_hmacWithSHA256","","",N,N],[17,"NID_hmacWithSHA384","","",N,N],[17,"NID_hmacWithSHA512","","",N,N],[17,"NID_rc2_cbc","","",N,N],[17,"NID_rc2_ecb","","",N,N],[17,"NID_rc2_cfb64","","",N,N],[17,"NID_rc2_ofb64","","",N,N],[17,"NID_rc2_40_cbc","","",N,N],[17,"NID_rc2_64_cbc","","",N,N],[17,"NID_rc4","","",N,N],[17,"NID_rc4_40","","",N,N],[17,"NID_des_ede3_cbc","","",N,N],[17,"NID_rc5_cbc","","",N,N],[17,"NID_rc5_ecb","","",N,N],[17,"NID_rc5_cfb64","","",N,N],[17,"NID_rc5_ofb64","","",N,N],[17,"NID_ms_ext_req","","",N,N],[17,"NID_ms_code_ind","","",N,N],[17,"NID_ms_code_com","","",N,N],[17,"NID_ms_ctl_sign","","",N,N],[17,"NID_ms_sgc","","",N,N],[17,"NID_ms_efs","","",N,N],[17,"NID_ms_smartcard_login","","",N,N],[17,"NID_ms_upn","","",N,N],[17,"NID_idea_cbc","","",N,N],[17,"NID_idea_ecb","","",N,N],[17,"NID_idea_cfb64","","",N,N],[17,"NID_idea_ofb64","","",N,N],[17,"NID_bf_cbc","","",N,N],[17,"NID_bf_ecb","","",N,N],[17,"NID_bf_cfb64","","",N,N],[17,"NID_bf_ofb64","","",N,N],[17,"NID_id_pkix","","",N,N],[17,"NID_id_pkix_mod","","",N,N],[17,"NID_id_pe","","",N,N],[17,"NID_id_qt","","",N,N],[17,"NID_id_kp","","",N,N],[17,"NID_id_it","","",N,N],[17,"NID_id_pkip","","",N,N],[17,"NID_id_alg","","",N,N],[17,"NID_id_cmc","","",N,N],[17,"NID_id_on","","",N,N],[17,"NID_id_pda","","",N,N],[17,"NID_id_aca","","",N,N],[17,"NID_id_qcs","","",N,N],[17,"NID_id_cct","","",N,N],[17,"NID_id_ppl","","",N,N],[17,"NID_id_ad","","",N,N],[17,"NID_id_pkix1_explicit_88","","",N,N],[17,"NID_id_pkix1_implicit_88","","",N,N],[17,"NID_id_pkix1_explicit_93","","",N,N],[17,"NID_id_pkix1_implicit_93","","",N,N],[17,"NID_id_mod_crmf","","",N,N],[17,"NID_id_mod_cmc","","",N,N],[17,"NID_id_mod_kea_profile_88","","",N,N],[17,"NID_id_mod_kea_profile_93","","",N,N],[17,"NID_id_mod_cmp","","",N,N],[17,"NID_id_mod_qualified_cert_88","","",N,N],[17,"NID_id_mod_qualified_cert_93","","",N,N],[17,"NID_id_mod_attribute_cert","","",N,N],[17,"NID_id_mod_timestamp_protocol","","",N,N],[17,"NID_id_mod_ocsp","","",N,N],[17,"NID_id_mod_dvcs","","",N,N],[17,"NID_id_mod_cmp2000","","",N,N],[17,"NID_info_access","","",N,N],[17,"NID_biometricInfo","","",N,N],[17,"NID_qcStatements","","",N,N],[17,"NID_ac_auditEntity","","",N,N],[17,"NID_ac_targeting","","",N,N],[17,"NID_aaControls","","",N,N],[17,"NID_sbgp_ipAddrBlock","","",N,N],[17,"NID_sbgp_autonomousSysNum","","",N,N],[17,"NID_sbgp_routerIdentifier","","",N,N],[17,"NID_ac_proxying","","",N,N],[17,"NID_sinfo_access","","",N,N],[17,"NID_proxyCertInfo","","",N,N],[17,"NID_id_qt_cps","","",N,N],[17,"NID_id_qt_unotice","","",N,N],[17,"NID_textNotice","","",N,N],[17,"NID_server_auth","","",N,N],[17,"NID_client_auth","","",N,N],[17,"NID_code_sign","","",N,N],[17,"NID_email_protect","","",N,N],[17,"NID_ipsecEndSystem","","",N,N],[17,"NID_ipsecTunnel","","",N,N],[17,"NID_ipsecUser","","",N,N],[17,"NID_time_stamp","","",N,N],[17,"NID_OCSP_sign","","",N,N],[17,"NID_dvcs","","",N,N],[17,"NID_id_it_caProtEncCert","","",N,N],[17,"NID_id_it_signKeyPairTypes","","",N,N],[17,"NID_id_it_encKeyPairTypes","","",N,N],[17,"NID_id_it_preferredSymmAlg","","",N,N],[17,"NID_id_it_caKeyUpdateInfo","","",N,N],[17,"NID_id_it_currentCRL","","",N,N],[17,"NID_id_it_unsupportedOIDs","","",N,N],[17,"NID_id_it_subscriptionRequest","","",N,N],[17,"NID_id_it_subscriptionResponse","","",N,N],[17,"NID_id_it_keyPairParamReq","","",N,N],[17,"NID_id_it_keyPairParamRep","","",N,N],[17,"NID_id_it_revPassphrase","","",N,N],[17,"NID_id_it_implicitConfirm","","",N,N],[17,"NID_id_it_confirmWaitTime","","",N,N],[17,"NID_id_it_origPKIMessage","","",N,N],[17,"NID_id_it_suppLangTags","","",N,N],[17,"NID_id_regCtrl","","",N,N],[17,"NID_id_regInfo","","",N,N],[17,"NID_id_regCtrl_regToken","","",N,N],[17,"NID_id_regCtrl_authenticator","","",N,N],[17,"NID_id_regCtrl_pkiPublicationInfo","","",N,N],[17,"NID_id_regCtrl_pkiArchiveOptions","","",N,N],[17,"NID_id_regCtrl_oldCertID","","",N,N],[17,"NID_id_regCtrl_protocolEncrKey","","",N,N],[17,"NID_id_regInfo_utf8Pairs","","",N,N],[17,"NID_id_regInfo_certReq","","",N,N],[17,"NID_id_alg_des40","","",N,N],[17,"NID_id_alg_noSignature","","",N,N],[17,"NID_id_alg_dh_sig_hmac_sha1","","",N,N],[17,"NID_id_alg_dh_pop","","",N,N],[17,"NID_id_cmc_statusInfo","","",N,N],[17,"NID_id_cmc_identification","","",N,N],[17,"NID_id_cmc_identityProof","","",N,N],[17,"NID_id_cmc_dataReturn","","",N,N],[17,"NID_id_cmc_transactionId","","",N,N],[17,"NID_id_cmc_senderNonce","","",N,N],[17,"NID_id_cmc_recipientNonce","","",N,N],[17,"NID_id_cmc_addExtensions","","",N,N],[17,"NID_id_cmc_encryptedPOP","","",N,N],[17,"NID_id_cmc_decryptedPOP","","",N,N],[17,"NID_id_cmc_lraPOPWitness","","",N,N],[17,"NID_id_cmc_getCert","","",N,N],[17,"NID_id_cmc_getCRL","","",N,N],[17,"NID_id_cmc_revokeRequest","","",N,N],[17,"NID_id_cmc_regInfo","","",N,N],[17,"NID_id_cmc_responseInfo","","",N,N],[17,"NID_id_cmc_queryPending","","",N,N],[17,"NID_id_cmc_popLinkRandom","","",N,N],[17,"NID_id_cmc_popLinkWitness","","",N,N],[17,"NID_id_cmc_confirmCertAcceptance","","",N,N],[17,"NID_id_on_personalData","","",N,N],[17,"NID_id_on_permanentIdentifier","","",N,N],[17,"NID_id_pda_dateOfBirth","","",N,N],[17,"NID_id_pda_placeOfBirth","","",N,N],[17,"NID_id_pda_gender","","",N,N],[17,"NID_id_pda_countryOfCitizenship","","",N,N],[17,"NID_id_pda_countryOfResidence","","",N,N],[17,"NID_id_aca_authenticationInfo","","",N,N],[17,"NID_id_aca_accessIdentity","","",N,N],[17,"NID_id_aca_chargingIdentity","","",N,N],[17,"NID_id_aca_group","","",N,N],[17,"NID_id_aca_role","","",N,N],[17,"NID_id_aca_encAttrs","","",N,N],[17,"NID_id_qcs_pkixQCSyntax_v1","","",N,N],[17,"NID_id_cct_crs","","",N,N],[17,"NID_id_cct_PKIData","","",N,N],[17,"NID_id_cct_PKIResponse","","",N,N],[17,"NID_id_ppl_anyLanguage","","",N,N],[17,"NID_id_ppl_inheritAll","","",N,N],[17,"NID_Independent","","",N,N],[17,"NID_ad_OCSP","","",N,N],[17,"NID_ad_ca_issuers","","",N,N],[17,"NID_ad_timeStamping","","",N,N],[17,"NID_ad_dvcs","","",N,N],[17,"NID_caRepository","","",N,N],[17,"NID_id_pkix_OCSP_basic","","",N,N],[17,"NID_id_pkix_OCSP_Nonce","","",N,N],[17,"NID_id_pkix_OCSP_CrlID","","",N,N],[17,"NID_id_pkix_OCSP_acceptableResponses","","",N,N],[17,"NID_id_pkix_OCSP_noCheck","","",N,N],[17,"NID_id_pkix_OCSP_archiveCutoff","","",N,N],[17,"NID_id_pkix_OCSP_serviceLocator","","",N,N],[17,"NID_id_pkix_OCSP_extendedStatus","","",N,N],[17,"NID_id_pkix_OCSP_valid","","",N,N],[17,"NID_id_pkix_OCSP_path","","",N,N],[17,"NID_id_pkix_OCSP_trustRoot","","",N,N],[17,"NID_algorithm","","",N,N],[17,"NID_md5WithRSA","","",N,N],[17,"NID_des_ecb","","",N,N],[17,"NID_des_cbc","","",N,N],[17,"NID_des_ofb64","","",N,N],[17,"NID_des_cfb64","","",N,N],[17,"NID_rsaSignature","","",N,N],[17,"NID_dsa_2","","",N,N],[17,"NID_dsaWithSHA","","",N,N],[17,"NID_shaWithRSAEncryption","","",N,N],[17,"NID_des_ede_ecb","","",N,N],[17,"NID_des_ede3_ecb","","",N,N],[17,"NID_des_ede_cbc","","",N,N],[17,"NID_des_ede_cfb64","","",N,N],[17,"NID_des_ede3_cfb64","","",N,N],[17,"NID_des_ede_ofb64","","",N,N],[17,"NID_des_ede3_ofb64","","",N,N],[17,"NID_desx_cbc","","",N,N],[17,"NID_sha","","",N,N],[17,"NID_sha1","","",N,N],[17,"NID_dsaWithSHA1_2","","",N,N],[17,"NID_sha1WithRSA","","",N,N],[17,"NID_ripemd160","","",N,N],[17,"NID_ripemd160WithRSA","","",N,N],[17,"NID_sxnet","","",N,N],[17,"NID_X500","","",N,N],[17,"NID_X509","","",N,N],[17,"NID_commonName","","",N,N],[17,"NID_surname","","",N,N],[17,"NID_serialNumber","","",N,N],[17,"NID_countryName","","",N,N],[17,"NID_localityName","","",N,N],[17,"NID_stateOrProvinceName","","",N,N],[17,"NID_streetAddress","","",N,N],[17,"NID_organizationName","","",N,N],[17,"NID_organizationalUnitName","","",N,N],[17,"NID_title","","",N,N],[17,"NID_description","","",N,N],[17,"NID_searchGuide","","",N,N],[17,"NID_businessCategory","","",N,N],[17,"NID_postalAddress","","",N,N],[17,"NID_postalCode","","",N,N],[17,"NID_postOfficeBox","","",N,N],[17,"NID_physicalDeliveryOfficeName","","",N,N],[17,"NID_telephoneNumber","","",N,N],[17,"NID_telexNumber","","",N,N],[17,"NID_teletexTerminalIdentifier","","",N,N],[17,"NID_facsimileTelephoneNumber","","",N,N],[17,"NID_x121Address","","",N,N],[17,"NID_internationaliSDNNumber","","",N,N],[17,"NID_registeredAddress","","",N,N],[17,"NID_destinationIndicator","","",N,N],[17,"NID_preferredDeliveryMethod","","",N,N],[17,"NID_presentationAddress","","",N,N],[17,"NID_supportedApplicationContext","","",N,N],[17,"NID_member","","",N,N],[17,"NID_owner","","",N,N],[17,"NID_roleOccupant","","",N,N],[17,"NID_seeAlso","","",N,N],[17,"NID_userPassword","","",N,N],[17,"NID_userCertificate","","",N,N],[17,"NID_cACertificate","","",N,N],[17,"NID_authorityRevocationList","","",N,N],[17,"NID_certificateRevocationList","","",N,N],[17,"NID_crossCertificatePair","","",N,N],[17,"NID_name","","",N,N],[17,"NID_givenName","","",N,N],[17,"NID_initials","","",N,N],[17,"NID_generationQualifier","","",N,N],[17,"NID_x500UniqueIdentifier","","",N,N],[17,"NID_dnQualifier","","",N,N],[17,"NID_enhancedSearchGuide","","",N,N],[17,"NID_protocolInformation","","",N,N],[17,"NID_distinguishedName","","",N,N],[17,"NID_uniqueMember","","",N,N],[17,"NID_houseIdentifier","","",N,N],[17,"NID_supportedAlgorithms","","",N,N],[17,"NID_deltaRevocationList","","",N,N],[17,"NID_dmdName","","",N,N],[17,"NID_pseudonym","","",N,N],[17,"NID_role","","",N,N],[17,"NID_X500algorithms","","",N,N],[17,"NID_rsa","","",N,N],[17,"NID_mdc2WithRSA","","",N,N],[17,"NID_mdc2","","",N,N],[17,"NID_id_ce","","",N,N],[17,"NID_subject_directory_attributes","","",N,N],[17,"NID_subject_key_identifier","","",N,N],[17,"NID_key_usage","","",N,N],[17,"NID_private_key_usage_period","","",N,N],[17,"NID_subject_alt_name","","",N,N],[17,"NID_issuer_alt_name","","",N,N],[17,"NID_basic_constraints","","",N,N],[17,"NID_crl_number","","",N,N],[17,"NID_crl_reason","","",N,N],[17,"NID_invalidity_date","","",N,N],[17,"NID_delta_crl","","",N,N],[17,"NID_issuing_distribution_point","","",N,N],[17,"NID_certificate_issuer","","",N,N],[17,"NID_name_constraints","","",N,N],[17,"NID_crl_distribution_points","","",N,N],[17,"NID_certificate_policies","","",N,N],[17,"NID_any_policy","","",N,N],[17,"NID_policy_mappings","","",N,N],[17,"NID_authority_key_identifier","","",N,N],[17,"NID_policy_constraints","","",N,N],[17,"NID_ext_key_usage","","",N,N],[17,"NID_freshest_crl","","",N,N],[17,"NID_inhibit_any_policy","","",N,N],[17,"NID_target_information","","",N,N],[17,"NID_no_rev_avail","","",N,N],[17,"NID_anyExtendedKeyUsage","","",N,N],[17,"NID_netscape","","",N,N],[17,"NID_netscape_cert_extension","","",N,N],[17,"NID_netscape_data_type","","",N,N],[17,"NID_netscape_cert_type","","",N,N],[17,"NID_netscape_base_url","","",N,N],[17,"NID_netscape_revocation_url","","",N,N],[17,"NID_netscape_ca_revocation_url","","",N,N],[17,"NID_netscape_renewal_url","","",N,N],[17,"NID_netscape_ca_policy_url","","",N,N],[17,"NID_netscape_ssl_server_name","","",N,N],[17,"NID_netscape_comment","","",N,N],[17,"NID_netscape_cert_sequence","","",N,N],[17,"NID_ns_sgc","","",N,N],[17,"NID_org","","",N,N],[17,"NID_dod","","",N,N],[17,"NID_iana","","",N,N],[17,"NID_Directory","","",N,N],[17,"NID_Management","","",N,N],[17,"NID_Experimental","","",N,N],[17,"NID_Private","","",N,N],[17,"NID_Security","","",N,N],[17,"NID_SNMPv2","","",N,N],[17,"NID_Mail","","",N,N],[17,"NID_Enterprises","","",N,N],[17,"NID_dcObject","","",N,N],[17,"NID_mime_mhs","","",N,N],[17,"NID_mime_mhs_headings","","",N,N],[17,"NID_mime_mhs_bodies","","",N,N],[17,"NID_id_hex_partial_message","","",N,N],[17,"NID_id_hex_multipart_message","","",N,N],[17,"NID_zlib_compression","","",N,N],[17,"NID_aes_128_ecb","","",N,N],[17,"NID_aes_128_cbc","","",N,N],[17,"NID_aes_128_ofb128","","",N,N],[17,"NID_aes_128_cfb128","","",N,N],[17,"NID_id_aes128_wrap","","",N,N],[17,"NID_aes_128_gcm","","",N,N],[17,"NID_aes_128_ccm","","",N,N],[17,"NID_id_aes128_wrap_pad","","",N,N],[17,"NID_aes_192_ecb","","",N,N],[17,"NID_aes_192_cbc","","",N,N],[17,"NID_aes_192_ofb128","","",N,N],[17,"NID_aes_192_cfb128","","",N,N],[17,"NID_id_aes192_wrap","","",N,N],[17,"NID_aes_192_gcm","","",N,N],[17,"NID_aes_192_ccm","","",N,N],[17,"NID_id_aes192_wrap_pad","","",N,N],[17,"NID_aes_256_ecb","","",N,N],[17,"NID_aes_256_cbc","","",N,N],[17,"NID_aes_256_ofb128","","",N,N],[17,"NID_aes_256_cfb128","","",N,N],[17,"NID_id_aes256_wrap","","",N,N],[17,"NID_aes_256_gcm","","",N,N],[17,"NID_aes_256_ccm","","",N,N],[17,"NID_id_aes256_wrap_pad","","",N,N],[17,"NID_aes_128_cfb1","","",N,N],[17,"NID_aes_192_cfb1","","",N,N],[17,"NID_aes_256_cfb1","","",N,N],[17,"NID_aes_128_cfb8","","",N,N],[17,"NID_aes_192_cfb8","","",N,N],[17,"NID_aes_256_cfb8","","",N,N],[17,"NID_aes_128_ctr","","",N,N],[17,"NID_aes_192_ctr","","",N,N],[17,"NID_aes_256_ctr","","",N,N],[17,"NID_aes_128_xts","","",N,N],[17,"NID_aes_256_xts","","",N,N],[17,"NID_des_cfb1","","",N,N],[17,"NID_des_cfb8","","",N,N],[17,"NID_des_ede3_cfb1","","",N,N],[17,"NID_des_ede3_cfb8","","",N,N],[17,"NID_sha256","","",N,N],[17,"NID_sha384","","",N,N],[17,"NID_sha512","","",N,N],[17,"NID_sha224","","",N,N],[17,"NID_dsa_with_SHA224","","",N,N],[17,"NID_dsa_with_SHA256","","",N,N],[17,"NID_hold_instruction_code","","",N,N],[17,"NID_hold_instruction_none","","",N,N],[17,"NID_hold_instruction_call_issuer","","",N,N],[17,"NID_hold_instruction_reject","","",N,N],[17,"NID_data","","",N,N],[17,"NID_pss","","",N,N],[17,"NID_ucl","","",N,N],[17,"NID_pilot","","",N,N],[17,"NID_pilotAttributeType","","",N,N],[17,"NID_pilotAttributeSyntax","","",N,N],[17,"NID_pilotObjectClass","","",N,N],[17,"NID_pilotGroups","","",N,N],[17,"NID_iA5StringSyntax","","",N,N],[17,"NID_caseIgnoreIA5StringSyntax","","",N,N],[17,"NID_pilotObject","","",N,N],[17,"NID_pilotPerson","","",N,N],[17,"NID_account","","",N,N],[17,"NID_document","","",N,N],[17,"NID_room","","",N,N],[17,"NID_documentSeries","","",N,N],[17,"NID_Domain","","",N,N],[17,"NID_rFC822localPart","","",N,N],[17,"NID_dNSDomain","","",N,N],[17,"NID_domainRelatedObject","","",N,N],[17,"NID_friendlyCountry","","",N,N],[17,"NID_simpleSecurityObject","","",N,N],[17,"NID_pilotOrganization","","",N,N],[17,"NID_pilotDSA","","",N,N],[17,"NID_qualityLabelledData","","",N,N],[17,"NID_userId","","",N,N],[17,"NID_textEncodedORAddress","","",N,N],[17,"NID_rfc822Mailbox","","",N,N],[17,"NID_info","","",N,N],[17,"NID_favouriteDrink","","",N,N],[17,"NID_roomNumber","","",N,N],[17,"NID_photo","","",N,N],[17,"NID_userClass","","",N,N],[17,"NID_host","","",N,N],[17,"NID_manager","","",N,N],[17,"NID_documentIdentifier","","",N,N],[17,"NID_documentTitle","","",N,N],[17,"NID_documentVersion","","",N,N],[17,"NID_documentAuthor","","",N,N],[17,"NID_documentLocation","","",N,N],[17,"NID_homeTelephoneNumber","","",N,N],[17,"NID_secretary","","",N,N],[17,"NID_otherMailbox","","",N,N],[17,"NID_lastModifiedTime","","",N,N],[17,"NID_lastModifiedBy","","",N,N],[17,"NID_domainComponent","","",N,N],[17,"NID_aRecord","","",N,N],[17,"NID_pilotAttributeType27","","",N,N],[17,"NID_mXRecord","","",N,N],[17,"NID_nSRecord","","",N,N],[17,"NID_sOARecord","","",N,N],[17,"NID_cNAMERecord","","",N,N],[17,"NID_associatedDomain","","",N,N],[17,"NID_associatedName","","",N,N],[17,"NID_homePostalAddress","","",N,N],[17,"NID_personalTitle","","",N,N],[17,"NID_mobileTelephoneNumber","","",N,N],[17,"NID_pagerTelephoneNumber","","",N,N],[17,"NID_friendlyCountryName","","",N,N],[17,"NID_organizationalStatus","","",N,N],[17,"NID_janetMailbox","","",N,N],[17,"NID_mailPreferenceOption","","",N,N],[17,"NID_buildingName","","",N,N],[17,"NID_dSAQuality","","",N,N],[17,"NID_singleLevelQuality","","",N,N],[17,"NID_subtreeMinimumQuality","","",N,N],[17,"NID_subtreeMaximumQuality","","",N,N],[17,"NID_personalSignature","","",N,N],[17,"NID_dITRedirect","","",N,N],[17,"NID_audio","","",N,N],[17,"NID_documentPublisher","","",N,N],[17,"NID_id_set","","",N,N],[17,"NID_set_ctype","","",N,N],[17,"NID_set_msgExt","","",N,N],[17,"NID_set_attr","","",N,N],[17,"NID_set_policy","","",N,N],[17,"NID_set_certExt","","",N,N],[17,"NID_set_brand","","",N,N],[17,"NID_setct_PANData","","",N,N],[17,"NID_setct_PANToken","","",N,N],[17,"NID_setct_PANOnly","","",N,N],[17,"NID_setct_OIData","","",N,N],[17,"NID_setct_PI","","",N,N],[17,"NID_setct_PIData","","",N,N],[17,"NID_setct_PIDataUnsigned","","",N,N],[17,"NID_setct_HODInput","","",N,N],[17,"NID_setct_AuthResBaggage","","",N,N],[17,"NID_setct_AuthRevReqBaggage","","",N,N],[17,"NID_setct_AuthRevResBaggage","","",N,N],[17,"NID_setct_CapTokenSeq","","",N,N],[17,"NID_setct_PInitResData","","",N,N],[17,"NID_setct_PI_TBS","","",N,N],[17,"NID_setct_PResData","","",N,N],[17,"NID_setct_AuthReqTBS","","",N,N],[17,"NID_setct_AuthResTBS","","",N,N],[17,"NID_setct_AuthResTBSX","","",N,N],[17,"NID_setct_AuthTokenTBS","","",N,N],[17,"NID_setct_CapTokenData","","",N,N],[17,"NID_setct_CapTokenTBS","","",N,N],[17,"NID_setct_AcqCardCodeMsg","","",N,N],[17,"NID_setct_AuthRevReqTBS","","",N,N],[17,"NID_setct_AuthRevResData","","",N,N],[17,"NID_setct_AuthRevResTBS","","",N,N],[17,"NID_setct_CapReqTBS","","",N,N],[17,"NID_setct_CapReqTBSX","","",N,N],[17,"NID_setct_CapResData","","",N,N],[17,"NID_setct_CapRevReqTBS","","",N,N],[17,"NID_setct_CapRevReqTBSX","","",N,N],[17,"NID_setct_CapRevResData","","",N,N],[17,"NID_setct_CredReqTBS","","",N,N],[17,"NID_setct_CredReqTBSX","","",N,N],[17,"NID_setct_CredResData","","",N,N],[17,"NID_setct_CredRevReqTBS","","",N,N],[17,"NID_setct_CredRevReqTBSX","","",N,N],[17,"NID_setct_CredRevResData","","",N,N],[17,"NID_setct_PCertReqData","","",N,N],[17,"NID_setct_PCertResTBS","","",N,N],[17,"NID_setct_BatchAdminReqData","","",N,N],[17,"NID_setct_BatchAdminResData","","",N,N],[17,"NID_setct_CardCInitResTBS","","",N,N],[17,"NID_setct_MeAqCInitResTBS","","",N,N],[17,"NID_setct_RegFormResTBS","","",N,N],[17,"NID_setct_CertReqData","","",N,N],[17,"NID_setct_CertReqTBS","","",N,N],[17,"NID_setct_CertResData","","",N,N],[17,"NID_setct_CertInqReqTBS","","",N,N],[17,"NID_setct_ErrorTBS","","",N,N],[17,"NID_setct_PIDualSignedTBE","","",N,N],[17,"NID_setct_PIUnsignedTBE","","",N,N],[17,"NID_setct_AuthReqTBE","","",N,N],[17,"NID_setct_AuthResTBE","","",N,N],[17,"NID_setct_AuthResTBEX","","",N,N],[17,"NID_setct_AuthTokenTBE","","",N,N],[17,"NID_setct_CapTokenTBE","","",N,N],[17,"NID_setct_CapTokenTBEX","","",N,N],[17,"NID_setct_AcqCardCodeMsgTBE","","",N,N],[17,"NID_setct_AuthRevReqTBE","","",N,N],[17,"NID_setct_AuthRevResTBE","","",N,N],[17,"NID_setct_AuthRevResTBEB","","",N,N],[17,"NID_setct_CapReqTBE","","",N,N],[17,"NID_setct_CapReqTBEX","","",N,N],[17,"NID_setct_CapResTBE","","",N,N],[17,"NID_setct_CapRevReqTBE","","",N,N],[17,"NID_setct_CapRevReqTBEX","","",N,N],[17,"NID_setct_CapRevResTBE","","",N,N],[17,"NID_setct_CredReqTBE","","",N,N],[17,"NID_setct_CredReqTBEX","","",N,N],[17,"NID_setct_CredResTBE","","",N,N],[17,"NID_setct_CredRevReqTBE","","",N,N],[17,"NID_setct_CredRevReqTBEX","","",N,N],[17,"NID_setct_CredRevResTBE","","",N,N],[17,"NID_setct_BatchAdminReqTBE","","",N,N],[17,"NID_setct_BatchAdminResTBE","","",N,N],[17,"NID_setct_RegFormReqTBE","","",N,N],[17,"NID_setct_CertReqTBE","","",N,N],[17,"NID_setct_CertReqTBEX","","",N,N],[17,"NID_setct_CertResTBE","","",N,N],[17,"NID_setct_CRLNotificationTBS","","",N,N],[17,"NID_setct_CRLNotificationResTBS","","",N,N],[17,"NID_setct_BCIDistributionTBS","","",N,N],[17,"NID_setext_genCrypt","","",N,N],[17,"NID_setext_miAuth","","",N,N],[17,"NID_setext_pinSecure","","",N,N],[17,"NID_setext_pinAny","","",N,N],[17,"NID_setext_track2","","",N,N],[17,"NID_setext_cv","","",N,N],[17,"NID_set_policy_root","","",N,N],[17,"NID_setCext_hashedRoot","","",N,N],[17,"NID_setCext_certType","","",N,N],[17,"NID_setCext_merchData","","",N,N],[17,"NID_setCext_cCertRequired","","",N,N],[17,"NID_setCext_tunneling","","",N,N],[17,"NID_setCext_setExt","","",N,N],[17,"NID_setCext_setQualf","","",N,N],[17,"NID_setCext_PGWYcapabilities","","",N,N],[17,"NID_setCext_TokenIdentifier","","",N,N],[17,"NID_setCext_Track2Data","","",N,N],[17,"NID_setCext_TokenType","","",N,N],[17,"NID_setCext_IssuerCapabilities","","",N,N],[17,"NID_setAttr_Cert","","",N,N],[17,"NID_setAttr_PGWYcap","","",N,N],[17,"NID_setAttr_TokenType","","",N,N],[17,"NID_setAttr_IssCap","","",N,N],[17,"NID_set_rootKeyThumb","","",N,N],[17,"NID_set_addPolicy","","",N,N],[17,"NID_setAttr_Token_EMV","","",N,N],[17,"NID_setAttr_Token_B0Prime","","",N,N],[17,"NID_setAttr_IssCap_CVM","","",N,N],[17,"NID_setAttr_IssCap_T2","","",N,N],[17,"NID_setAttr_IssCap_Sig","","",N,N],[17,"NID_setAttr_GenCryptgrm","","",N,N],[17,"NID_setAttr_T2Enc","","",N,N],[17,"NID_setAttr_T2cleartxt","","",N,N],[17,"NID_setAttr_TokICCsig","","",N,N],[17,"NID_setAttr_SecDevSig","","",N,N],[17,"NID_set_brand_IATA_ATA","","",N,N],[17,"NID_set_brand_Diners","","",N,N],[17,"NID_set_brand_AmericanExpress","","",N,N],[17,"NID_set_brand_JCB","","",N,N],[17,"NID_set_brand_Visa","","",N,N],[17,"NID_set_brand_MasterCard","","",N,N],[17,"NID_set_brand_Novus","","",N,N],[17,"NID_des_cdmf","","",N,N],[17,"NID_rsaOAEPEncryptionSET","","",N,N],[17,"NID_ipsec3","","",N,N],[17,"NID_ipsec4","","",N,N],[17,"NID_whirlpool","","",N,N],[17,"NID_cryptopro","","",N,N],[17,"NID_cryptocom","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_2001","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_94","","",N,N],[17,"NID_id_GostR3411_94","","",N,N],[17,"NID_id_HMACGostR3411_94","","",N,N],[17,"NID_id_GostR3410_2001","","",N,N],[17,"NID_id_GostR3410_94","","",N,N],[17,"NID_id_Gost28147_89","","",N,N],[17,"NID_gost89_cnt","","",N,N],[17,"NID_id_Gost28147_89_MAC","","",N,N],[17,"NID_id_GostR3411_94_prf","","",N,N],[17,"NID_id_GostR3410_2001DH","","",N,N],[17,"NID_id_GostR3410_94DH","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_KeyMeshing","","",N,N],[17,"NID_id_Gost28147_89_None_KeyMeshing","","",N,N],[17,"NID_id_GostR3411_94_TestParamSet","","",N,N],[17,"NID_id_GostR3411_94_CryptoProParamSet","","",N,N],[17,"NID_id_Gost28147_89_TestParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_A_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_B_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_C_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_D_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_TestParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_A_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_B_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_C_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_D_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_XchA_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_XchB_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_XchC_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_TestParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_A_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_B_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_C_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_a","","",N,N],[17,"NID_id_GostR3410_94_aBis","","",N,N],[17,"NID_id_GostR3410_94_b","","",N,N],[17,"NID_id_GostR3410_94_bBis","","",N,N],[17,"NID_id_Gost28147_89_cc","","",N,N],[17,"NID_id_GostR3410_94_cc","","",N,N],[17,"NID_id_GostR3410_2001_cc","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_94_cc","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_2001_cc","","",N,N],[17,"NID_id_GostR3410_2001_ParamSet_cc","","",N,N],[17,"NID_camellia_128_cbc","","",N,N],[17,"NID_camellia_192_cbc","","",N,N],[17,"NID_camellia_256_cbc","","",N,N],[17,"NID_id_camellia128_wrap","","",N,N],[17,"NID_id_camellia192_wrap","","",N,N],[17,"NID_id_camellia256_wrap","","",N,N],[17,"NID_camellia_128_ecb","","",N,N],[17,"NID_camellia_128_ofb128","","",N,N],[17,"NID_camellia_128_cfb128","","",N,N],[17,"NID_camellia_192_ecb","","",N,N],[17,"NID_camellia_192_ofb128","","",N,N],[17,"NID_camellia_192_cfb128","","",N,N],[17,"NID_camellia_256_ecb","","",N,N],[17,"NID_camellia_256_ofb128","","",N,N],[17,"NID_camellia_256_cfb128","","",N,N],[17,"NID_camellia_128_cfb1","","",N,N],[17,"NID_camellia_192_cfb1","","",N,N],[17,"NID_camellia_256_cfb1","","",N,N],[17,"NID_camellia_128_cfb8","","",N,N],[17,"NID_camellia_192_cfb8","","",N,N],[17,"NID_camellia_256_cfb8","","",N,N],[17,"NID_kisa","","",N,N],[17,"NID_seed_ecb","","",N,N],[17,"NID_seed_cbc","","",N,N],[17,"NID_seed_cfb128","","",N,N],[17,"NID_seed_ofb128","","",N,N],[17,"NID_hmac","","",N,N],[17,"NID_cmac","","",N,N],[17,"NID_rc4_hmac_md5","","",N,N],[17,"NID_aes_128_cbc_hmac_sha1","","",N,N],[17,"NID_aes_192_cbc_hmac_sha1","","",N,N],[17,"NID_aes_256_cbc_hmac_sha1","","",N,N],[17,"OCSP_NOCERTS","","",N,N],[17,"OCSP_NOINTERN","","",N,N],[17,"OCSP_NOSIGS","","",N,N],[17,"OCSP_NOCHAIN","","",N,N],[17,"OCSP_NOVERIFY","","",N,N],[17,"OCSP_NOEXPLICIT","","",N,N],[17,"OCSP_NOCASIGN","","",N,N],[17,"OCSP_NODELEGATED","","",N,N],[17,"OCSP_NOCHECKS","","",N,N],[17,"OCSP_TRUSTOTHER","","",N,N],[17,"OCSP_RESPID_KEY","","",N,N],[17,"OCSP_NOTIME","","",N,N],[17,"V_OCSP_CERTSTATUS_GOOD","","",N,N],[17,"V_OCSP_CERTSTATUS_REVOKED","","",N,N],[17,"V_OCSP_CERTSTATUS_UNKNOWN","","",N,N],[17,"OCSP_REVOKED_STATUS_NOSTATUS","","",N,N],[17,"OCSP_REVOKED_STATUS_UNSPECIFIED","","",N,N],[17,"OCSP_REVOKED_STATUS_KEYCOMPROMISE","","",N,N],[17,"OCSP_REVOKED_STATUS_CACOMPROMISE","","",N,N],[17,"OCSP_REVOKED_STATUS_AFFILIATIONCHANGED","","",N,N],[17,"OCSP_REVOKED_STATUS_SUPERSEDED","","",N,N],[17,"OCSP_REVOKED_STATUS_CESSATIONOFOPERATION","","",N,N],[17,"OCSP_REVOKED_STATUS_CERTIFICATEHOLD","","",N,N],[17,"OCSP_REVOKED_STATUS_REMOVEFROMCRL","","",N,N],[17,"OCSP_RESPONSE_STATUS_SUCCESSFUL","","",N,N],[17,"OCSP_RESPONSE_STATUS_MALFORMEDREQUEST","","",N,N],[17,"OCSP_RESPONSE_STATUS_INTERNALERROR","","",N,N],[17,"OCSP_RESPONSE_STATUS_TRYLATER","","",N,N],[17,"OCSP_RESPONSE_STATUS_SIGREQUIRED","","",N,N],[17,"OCSP_RESPONSE_STATUS_UNAUTHORIZED","","",N,N],[17,"OPENSSL_EC_NAMED_CURVE","","",N,N],[17,"PKCS5_SALT_LEN","","",N,N],[17,"PKCS12_DEFAULT_ITER","","",N,N],[17,"RSA_F4","","",N,N],[17,"RSA_PKCS1_PADDING","","",N,N],[17,"RSA_SSLV23_PADDING","","",N,N],[17,"RSA_NO_PADDING","","",N,N],[17,"RSA_PKCS1_OAEP_PADDING","","",N,N],[17,"RSA_X931_PADDING","","",N,N],[17,"SSL_CTRL_SET_TMP_DH","","",N,N],[17,"SSL_CTRL_SET_TMP_ECDH","","",N,N],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",N,N],[17,"SSL_CTRL_MODE","","",N,N],[17,"SSL_CTRL_SET_READ_AHEAD","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE","","",N,N],[17,"SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP","","",N,N],[17,"SSL_CTRL_GET_EXTRA_CHAIN_CERTS","","",N,N],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",N,N],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",N,N],[17,"SSL_MODE_AUTO_RETRY","","",N,N],[17,"SSL_MODE_NO_AUTO_CHAIN","","",N,N],[17,"SSL_MODE_RELEASE_BUFFERS","","",N,N],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",N,N],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",N,N],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",N,N],[17,"SSL_ERROR_NONE","","",N,N],[17,"SSL_ERROR_SSL","","",N,N],[17,"SSL_ERROR_SYSCALL","","",N,N],[17,"SSL_ERROR_WANT_ACCEPT","","",N,N],[17,"SSL_ERROR_WANT_CONNECT","","",N,N],[17,"SSL_ERROR_WANT_READ","","",N,N],[17,"SSL_ERROR_WANT_WRITE","","",N,N],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",N,N],[17,"SSL_ERROR_ZERO_RETURN","","",N,N],[17,"SSL_VERIFY_NONE","","",N,N],[17,"SSL_VERIFY_PEER","","",N,N],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",N,N],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",N,N],[17,"SSL_OP_ALL","","",N,N],[17,"SSL_OP_NO_QUERY_MTU","","",N,N],[17,"SSL_OP_COOKIE_EXCHANGE","","",N,N],[17,"SSL_OP_NO_TICKET","","",N,N],[17,"SSL_OP_CISCO_ANYCONNECT","","",N,N],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",N,N],[17,"SSL_OP_NO_COMPRESSION","","",N,N],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",N,N],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",N,N],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",N,N],[17,"SSL_OP_NO_SSLv3","","",N,N],[17,"SSL_OP_NO_TLSv1","","",N,N],[17,"SSL_OP_NO_TLSv1_2","","",N,N],[17,"SSL_OP_NO_TLSv1_1","","",N,N],[17,"TLSEXT_NAMETYPE_host_name","","",N,N],[17,"TLSEXT_STATUSTYPE_ocsp","","",N,N],[17,"SSL_TLSEXT_ERR_OK","","",N,N],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",N,N],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",N,N],[17,"SSL_TLSEXT_ERR_NOACK","","",N,N],[17,"OPENSSL_NPN_UNSUPPORTED","","",N,N],[17,"OPENSSL_NPN_NEGOTIATED","","",N,N],[17,"OPENSSL_NPN_NO_OVERLAP","","",N,N],[17,"V_ASN1_GENERALIZEDTIME","","",N,N],[17,"V_ASN1_UTCTIME","","",N,N],[17,"X509_FILETYPE_ASN1","","",N,N],[17,"X509_FILETYPE_DEFAULT","","",N,N],[17,"X509_FILETYPE_PEM","","",N,N],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",N,N],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",N,N],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",N,N],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",N,N],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",N,N],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",N,N],[17,"X509_V_ERR_CERT_REJECTED","","",N,N],[17,"X509_V_ERR_CERT_REVOKED","","",N,N],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",N,N],[17,"X509_V_ERR_CERT_UNTRUSTED","","",N,N],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",N,N],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",N,N],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",N,N],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",N,N],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",N,N],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",N,N],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",N,N],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",N,N],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",N,N],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",N,N],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",N,N],[17,"X509_V_ERR_INVALID_CA","","",N,N],[17,"X509_V_ERR_INVALID_EXTENSION","","",N,N],[17,"X509_V_ERR_INVALID_NON_CA","","",N,N],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",N,N],[17,"X509_V_ERR_INVALID_PURPOSE","","",N,N],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",N,N],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",N,N],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",N,N],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",N,N],[17,"X509_V_ERR_OUT_OF_MEM","","",N,N],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",N,N],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",N,N],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",N,N],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",N,N],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",N,N],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",N,N],[17,"X509_V_ERR_SUBTREE_MINMAX","","",N,N],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",N,N],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",N,N],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",N,N],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",N,N],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",N,N],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",N,N],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",N,N],[17,"X509_V_OK","","",N,N],[17,"GEN_OTHERNAME","","",N,N],[17,"GEN_EMAIL","","",N,N],[17,"GEN_DNS","","",N,N],[17,"GEN_X400","","",N,N],[17,"GEN_DIRNAME","","",N,N],[17,"GEN_EDIPARTY","","",N,N],[17,"GEN_URI","","",N,N],[17,"GEN_IPADD","","",N,N],[17,"GEN_RID","","",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"clone","","",30,[[["self"]],["point_conversion_form_t"]]]],"paths":[[3,"stack_st_ASN1_OBJECT"],[3,"stack_st_X509"],[3,"stack_st_X509_NAME"],[3,"stack_st_X509_ATTRIBUTE"],[3,"stack_st_X509_EXTENSION"],[3,"stack_st_GENERAL_NAME"],[3,"stack_st_void"],[3,"stack_st_SSL_CIPHER"],[3,"stack_st_OPENSSL_STRING"],[3,"_STACK"],[3,"BIO_METHOD"],[3,"RSA"],[3,"DSA"],[3,"EVP_PKEY"],[3,"BIO"],[3,"CRYPTO_EX_DATA"],[3,"EVP_CIPHER"],[3,"BIGNUM"],[3,"DH"],[3,"X509"],[3,"X509_CINF"],[3,"X509_ALGOR"],[3,"ASN1_ENCODING"],[3,"X509_VAL"],[3,"X509_REQ_INFO"],[3,"X509_REQ"],[3,"SSL"],[3,"SSL_CTX"],[3,"SSL_SESSION"],[3,"GENERAL_NAME"],[4,"point_conversion_form_t"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"SRP_CTX"],[3,"AES_KEY"],[3,"X509V3_CTX"],[4,"PKCS12"],[4,"ASN1_INTEGER"],[4,"ASN1_GENERALIZEDTIME"],[4,"ASN1_STRING"],[4,"ASN1_BIT_STRING"],[4,"ASN1_TIME"],[4,"ASN1_TYPE"],[4,"ASN1_OBJECT"],[4,"BN_CTX"],[4,"BN_GENCB"],[4,"CONF"],[4,"CONF_METHOD"],[4,"COMP_METHOD"],[4,"EC_KEY"],[4,"EC_GROUP"],[4,"EC_METHOD"],[4,"EC_POINT"],[4,"ENGINE"],[4,"EVP_CIPHER_CTX"],[4,"EVP_MD"],[4,"EVP_PKEY_CTX"],[4,"OCSP_BASICRESP"],[4,"OCSP_CERTID"],[4,"OCSP_RESPONSE"],[4,"OCSP_REQUEST"],[4,"OCSP_ONEREQ"],[4,"SSL_CIPHER"],[4,"SSL_METHOD"],[4,"X509_CRL"],[4,"X509_EXTENSION"],[4,"X509_NAME"],[4,"X509_NAME_ENTRY"],[4,"X509_STORE"],[4,"X509_STORE_CTX"],[4,"bio_st"],[4,"DH_METHOD"],[4,"RSA_METHOD"],[4,"BN_MONT_CTX"],[4,"BN_BLINDING"],[4,"DSA_METHOD"],[4,"EVP_PKEY_ASN1_METHOD"]]};
searchIndex["pickpocket"]={"doc":"","items":[[3,"Client","pickpocket","",N,N],[12,"consumer_key","","",0,N],[12,"authorization_code","","",0,N],[3,"BeginAuthentication","","",N,N],[12,"consumer_key","","",1,N],[3,"AuthorizationRequest","","",N,N],[3,"Item","","",N,N],[4,"FavoriteStatus","","",N,N],[13,"Favorited","","",2,N],[13,"NotFavorited","","",2,N],[4,"Status","","",N,N],[13,"Read","","",3,N],[13,"Unread","","",3,N],[5,"url","","",N,[[["str"]],["url"]]],[5,"https_client","","",N,[[],["client"]]],[5,"cleanup_url","","",N,[[["str"]],["string"]]],[11,"request_authorization_code","","",1,[[["self"]],["authorizationrequest"]]],[11,"authorization_url","","",4,[[["self"]],["string"]]],[11,"request_authorized_code","","",4,[[["self"]],["client"]]],[0,"batch","","",N,N],[3,"BatchApp","pickpocket::batch","",N,N],[12,"client","","",5,N],[12,"cache_client","","",5,N],[11,"get","","",5,[[["self"],["str"]],["option",["str"]]]],[11,"file_lines","","",5,[[["self"]],["lines",["bufreader"]]]],[0,"cli","pickpocket","",N,N],[3,"Client","pickpocket::cli","",N,N],[12,"consumer_key","","",0,N],[12,"authorization_code","","",0,N],[3,"BeginAuthentication","","",N,N],[12,"consumer_key","","",1,N],[3,"AuthorizationRequest","","",N,N],[3,"FileClient","","",N,N],[5,"url","","",N,[[["str"]],["url"]]],[5,"https_client","","",N,[[],["client"]]],[5,"client_from_env_vars","","",N,[[],["result",["client","string"]]]],[11,"from_online","","",6,[[["readinglist"]],["self"]]],[11,"from_cache","","",6,[[["str"]],["result",["string"]]]],[11,"list_all","","",6,[[["self"]],["readinglist"]]],[11,"write_cache","","",6,[[["self"],["str"]],["result",["string"]]]],[6,"ReadingList","pickpocket","",N,N],[11,"url","","",7,[[["self"]],["str"]]],[11,"title","","",7,[[["self"]],["str"]]],[11,"favorite","","",7,[[["self"]],["favoritestatus"]]],[11,"status","","",7,[[["self"]],["status"]]],[11,"mark_as_read","","",0,[[["self"],["t"]]]],[11,"mark_as_favorite","","",0,[[["self"],["t"]]]],[11,"add_urls","","",0,[[["self"],["t"]]]],[11,"list_all","","",0,[[["self"]],["readinglist"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","pickpocket::batch","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","pickpocket::cli","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"default","pickpocket::batch","",5,[[],["self"]]],[11,"eq","pickpocket","",2,[[["self"],["favoritestatus"]],["bool"]]],[11,"eq","","",3,[[["self"],["status"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]]],"paths":[[3,"Client"],[3,"BeginAuthentication"],[4,"FavoriteStatus"],[4,"Status"],[3,"AuthorizationRequest"],[3,"BatchApp"],[3,"FileClient"],[3,"Item"]]};
searchIndex["pickpocket_auth"]={"doc":"","items":[],"paths":[]};
searchIndex["pickpocket_batch_add"]={"doc":"","items":[],"paths":[]};
searchIndex["pickpocket_batch_favorite"]={"doc":"","items":[],"paths":[]};
searchIndex["pickpocket_batch_read"]={"doc":"","items":[],"paths":[]};
searchIndex["pickpocket_download"]={"doc":"","items":[],"paths":[]};
searchIndex["pickpocket_fixup"]={"doc":"","items":[],"paths":[]};
searchIndex["pickpocket_from_csv"]={"doc":"","items":[],"paths":[]};
searchIndex["pickpocket_inspect"]={"doc":"","items":[],"paths":[]};
searchIndex["pickpocket_search"]={"doc":"","items":[],"paths":[]};
searchIndex["quote"]={"doc":"Quasi-quoting without a Syntex dependency, intended for use with Macros 1.1.","items":[[3,"Tokens","quote","Tokens produced by a `quote!(...)` invocation.",N,N],[3,"ByteStr","","Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.",N,N],[12,"0","","",0,N],[3,"Hex","","Wrap an integer so it interpolates as a hexadecimal.",N,N],[12,"0","","",1,N],[3,"Ident","","An identifier that should be interpolated without quotes.",N,N],[11,"new","","Empty tokens.",2,[[],["self"]]],[11,"append","","For use by `ToTokens` implementations.",2,[[["self"],["t"]]]],[11,"append_all","","For use by `ToTokens` implementations.",2,[[["self"],["i"]]]],[11,"append_separated","","For use by `ToTokens` implementations.",2,[[["self"],["i"],["s"]]]],[11,"append_terminated","","For use by `ToTokens` implementations.",2,[[["self"],["i"],["s"]]]],[11,"as_str","","",2,[[["self"]],["str"]]],[11,"into_string","","",2,[[["self"]],["string"]]],[11,"parse","","",2,[[["self"]],["result"]]],[11,"new","","",3,[[["t"]],["self"]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!(...)` invocation.",N,N],[10,"to_tokens","","Write `self` to the given `Tokens`.",4,[[["self"],["tokens"]]]],[14,"quote","","The whole point.",N,N],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"to_tokens","","",0,[[["self"],["tokens"]]]],[11,"to_tokens","","",2,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",3,[[["self"],["tokens"]]]],[11,"default","","",2,[[],["self"]]],[11,"eq","","",2,[[["self"],["tokens"]],["bool"]]],[11,"ne","","",2,[[["self"],["tokens"]],["bool"]]],[11,"eq","","",3,[[["self"],["t"]],["bool"]]],[11,"from","","",3,[[["str"]],["self"]]],[11,"from","","",3,[[["cow",["str"]]],["self"]]],[11,"from","","",3,[[["string"]],["self"]]],[11,"as_ref","","",2,[[["self"]],["str"]]],[11,"as_ref","","",3,[[["self"]],["str"]]],[11,"clone","","",2,[[["self"]],["tokens"]]],[11,"clone","","",3,[[["self"]],["ident"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N]],"paths":[[3,"ByteStr"],[3,"Hex"],[3,"Tokens"],[3,"Ident"],[8,"ToTokens"]]};
searchIndex["serde"]={"doc":"Serde","items":[[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not support serializing one of the compound types.",N,N],[8,"Error","","Trait used by `Serialize` implementations to generically construct errors belonging to the `Serializer` against which they are currently running.",N,N],[10,"custom","","Used when a [`Serialize`] implementation encounters any error while serializing a type.",0,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",1,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",N,N],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",2,N],[16,"Error","","The error type when some error occurs during serialization.",2,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",2,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",2,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",2,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",2,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",2,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",2,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",2,N],[10,"serialize_bool","","Serialize a `bool` value.",2,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",2,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",2,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",2,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",2,[[["self"],["i64"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",2,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",2,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",2,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",2,[[["self"],["u64"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",2,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",2,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",2,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",2,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",2,N],[10,"serialize_none","","Serialize a [`None`] value.",2,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",2,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",2,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",2,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",2,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",2,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",2,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",2,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",2,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",2,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",2,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",2,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",2,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",2,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",2,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",2,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",2,[[["self"],["t"]],["result"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",3,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",3,N],[10,"serialize_element","","Serialize a sequence element.",3,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",3,[[["self"]],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",4,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",4,N],[10,"serialize_element","","Serialize a tuple element.",4,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",4,[[["self"]],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",5,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",5,N],[10,"serialize_field","","Serialize a tuple struct field.",5,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",5,[[["self"]],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",6,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",6,N],[10,"serialize_field","","Serialize a tuple variant field.",6,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",6,[[["self"]],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",7,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",7,N],[10,"serialize_key","","Serialize a map key.",7,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",7,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",7,[[["self"],["k"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",7,[[["self"]],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",8,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",8,N],[10,"serialize_field","","Serialize a struct field.",8,[[["self"],["str"],["t"]],["result"]]],[10,"end","","Finish serializing a struct.",8,[[["self"]],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",9,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",9,N],[10,"serialize_field","","Serialize a struct variant field.",9,[[["self"],["str"],["t"]],["result"]]],[10,"end","","Finish serializing a struct variant.",9,[[["self"]],["result"]]],[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any one of the `Visitor` trait methods.",N,N],[13,"Bool","","The input contained a boolean value that was not expected.",10,N],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that was not expected.",10,N],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or `i64` that was not expected.",10,N],[13,"Float","","The input contained a floating point `f32` or `f64` that was not expected.",10,N],[13,"Char","","The input contained a `char` that was not expected.",10,N],[13,"Str","","The input contained a `&str` or `String` that was not expected.",10,N],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not expected.",10,N],[13,"Unit","","The input contained a unit `()` that was not expected.",10,N],[13,"Option","","The input contained an `Option<T>` that was not expected.",10,N],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",10,N],[13,"Seq","","The input contained a sequence that was not expected.",10,N],[13,"Map","","The input contained a map that was not expected.",10,N],[13,"Enum","","The input contained an enum that was not expected.",10,N],[13,"UnitVariant","","The input contained a unit variant that was not expected.",10,N],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",10,N],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",10,N],[13,"StructVariant","","The input contained a struct variant that was not expected.",10,N],[13,"Other","","A message stating what uncategorized thing the input contained that was not expected.",10,N],[0,"value","","Building blocks for deserializing basic values using the `IntoDeserializer` trait.",N,N],[3,"Error","serde::de::value","A minimal representation of all possible errors that can occur using the `IntoDeserializer` trait.",N,N],[3,"UnitDeserializer","","A deserializer holding a `()`.",N,N],[3,"BoolDeserializer","","A deserializer holding a `bool`.",N,N],[3,"I8Deserializer","","A deserializer holding an `i8`.",N,N],[3,"I16Deserializer","","A deserializer holding an `i16`.",N,N],[3,"I32Deserializer","","A deserializer holding an `i32`.",N,N],[3,"I64Deserializer","","A deserializer holding an `i64`.",N,N],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",N,N],[3,"U8Deserializer","","A deserializer holding a `u8`.",N,N],[3,"U16Deserializer","","A deserializer holding a `u16`.",N,N],[3,"U64Deserializer","","A deserializer holding a `u64`.",N,N],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",N,N],[3,"F32Deserializer","","A deserializer holding an `f32`.",N,N],[3,"F64Deserializer","","A deserializer holding an `f64`.",N,N],[3,"CharDeserializer","","A deserializer holding a `char`.",N,N],[3,"U32Deserializer","","A deserializer holding a `u32`.",N,N],[3,"StrDeserializer","","A deserializer holding a `&str`.",N,N],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to another deserializer.",N,N],[3,"StringDeserializer","","A deserializer holding a `String`.",N,N],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",N,N],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to another deserializer.",N,N],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",N,N],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",N,N],[3,"MapDeserializer","","A deserializer that iterates over a map.",N,N],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",N,N],[11,"new","","Create a new borrowed deserializer from the given string.",11,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte slice.",12,N],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",13,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a `SeqDeserializer` to `Visitor::visit_seq`.",13,[[["self"]],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",14,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",15,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a `MapDeserializer` to `Visitor::visit_map`.",15,[[["self"]],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",16,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to create descriptive error messages belonging to the `Deserializer` against which they are currently running.",N,N],[10,"custom","","Raised when there is general error when deserializing a type.",17,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from what it was expecting.",17,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right type but that is wrong for some other reason.",17,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input data contains too many or too few elements.",17,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant with an unrecognized name.",17,N],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field with an unrecognized name.",17,N],[11,"missing_field","","Raised when a `Deserialize` struct type expected to receive a required field with a particular name but that field was not present in the input.",17,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the same field.",17,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a `Visitor` was expecting to receive.",N,N],[10,"fmt","","Format an explanation of what data was being expected. Same signature as the `Display` and `Debug` traits.",18,[[["self"],["formatter"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",19,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without borrowing any data from the deserializer.",N,N],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the `Deserialize` trait. If you ever find yourself looking for a way to pass data into a `Deserialize` impl, this trait is the way to do it.",N,N],[16,"Value","","The type produced by using this seed.",20,N],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize` method, except with some initial piece of data (the seed) passed in.",20,[[["self"],["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",21,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",21,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",21,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",21,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",21,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",21,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",21,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",21,[[["self"],["v"]],["result"]]],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",N,N],[16,"Value","","The value produced by this visitor.",22,N],[10,"expecting","","Format a message stating what data this Visitor expects to receive.",22,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",22,[[["self"],["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",22,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",22,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",22,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i32`.",22,[[["self"],["i64"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",22,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",22,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",22,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",22,[[["self"],["u64"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",22,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",22,[[["self"],["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",22,[[["self"],["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is ephemeral and it may be destroyed after this method returns.",22,[[["self"],["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as the `Deserializer`.",22,[[["self"],["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is being given to the `Visitor`.",22,[[["self"],["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte array is ephemeral and it may be destroyed after this method returns.",22,N],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as long as the `Deserializer`.",22,N],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte array is being given to the `Visitor`.",22,[[["self"],["vec",["u8"]]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",22,[[["self"]],["result"]]],[11,"visit_some","","The input contains an optional that is present.",22,[[["self"],["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",22,[[["self"]],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",22,[[["self"],["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",22,[[["self"],["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",22,[[["self"],["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",22,[[["self"],["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",23,N],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",23,[[["self"],["t"]],["result",["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",23,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, if known.",23,[[["self"]],["option",["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",24,N],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",24,[[["self"],["k"]],["result",["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",24,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",24,[[["self"],["k"],["v"]],["result",["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",24,[[["self"]],["result",["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",24,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",24,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if known.",24,[[["self"]],["option",["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",25,N],[16,"Variant","","The `Visitor` that will be used to deserialize the content of the enum variant.",25,N],[10,"variant_seed","","`variant` is called to identify which variant to deserialize.",25,[[["self"],["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to deserialize.",25,[[["self"]],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the `Deserializer` and passed to the `Deserialize` to deserialize the content of a particular enum variant.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization. Must match the error type of our `EnumAccess`.",26,N],[10,"unit_variant","","Called when deserializing a variant with no values.",26,[[["self"]],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",26,[[["self"],["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",26,[[["self"]],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",26,[[["self"],["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",26,N],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from which other values can be deserialized.",N,N],[16,"Deserializer","","The type of the deserializer being converted into.",27,N],[10,"into_deserializer","","Convert this value into a deserializer.",27,N],[8,"Serialize","serde","A data structure that can be serialized into any data format supported by Serde.",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",1,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",N,N],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",2,N],[16,"Error","","The error type when some error occurs during serialization.",2,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",2,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",2,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",2,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",2,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",2,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",2,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",2,N],[10,"serialize_bool","","Serialize a `bool` value.",2,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",2,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",2,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",2,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",2,[[["self"],["i64"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",2,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",2,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",2,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",2,[[["self"],["u64"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",2,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",2,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",2,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",2,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",2,N],[10,"serialize_none","","Serialize a [`None`] value.",2,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",2,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",2,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",2,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",2,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",2,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",2,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",2,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",2,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",2,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",2,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",2,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",2,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",2,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",2,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",2,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",2,[[["self"],["t"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",19,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",21,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",21,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",21,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",21,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",21,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",21,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",21,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",21,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",21,[[["self"],["v"]],["result"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of a new data format for Serde.",N,N],[11,"into","serde::ser","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"fmt","serde::de","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","serde::de::value","",30,[[["self"]],["u"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"serialize_element","serde::ser","",28,[[["self"],["t"]],["result"]]],[11,"end","","",28,[[["self"]],["result"]]],[11,"serialize_element","","",28,[[["self"],["t"]],["result"]]],[11,"end","","",28,[[["self"]],["result"]]],[11,"serialize_field","","",28,[[["self"],["t"]],["result"]]],[11,"end","","",28,[[["self"]],["result"]]],[11,"serialize_field","","",28,[[["self"],["t"]],["result"]]],[11,"end","","",28,[[["self"]],["result"]]],[11,"serialize_key","","",28,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",28,[[["self"],["t"]],["result"]]],[11,"end","","",28,[[["self"]],["result"]]],[11,"serialize_field","","",28,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",28,[[["self"]],["result"]]],[11,"serialize_field","","",28,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",28,[[["self"]],["result"]]],[11,"deserialize","serde::de","",29,[[["d"]],["result",["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",31,N],[11,"deserialize_enum","","",31,N],[11,"deserialize_identifier","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",32,N],[11,"deserialize_enum","","",32,N],[11,"deserialize_identifier","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",33,N],[11,"deserialize_enum","","",33,N],[11,"deserialize_identifier","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",34,N],[11,"deserialize_enum","","",34,N],[11,"deserialize_identifier","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",35,N],[11,"deserialize_enum","","",35,N],[11,"deserialize_identifier","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",36,N],[11,"deserialize_enum","","",36,N],[11,"deserialize_identifier","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",37,N],[11,"deserialize_enum","","",37,N],[11,"deserialize_identifier","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",38,N],[11,"deserialize_enum","","",38,N],[11,"deserialize_identifier","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",39,N],[11,"deserialize_enum","","",39,N],[11,"deserialize_identifier","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",40,N],[11,"deserialize_enum","","",40,N],[11,"deserialize_identifier","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",41,N],[11,"deserialize_enum","","",41,N],[11,"deserialize_identifier","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",42,N],[11,"deserialize_enum","","",42,N],[11,"deserialize_identifier","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",43,N],[11,"deserialize_enum","","",43,N],[11,"deserialize_identifier","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",44,N],[11,"deserialize_enum","","",44,N],[11,"deserialize_identifier","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",45,N],[11,"deserialize_identifier","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",45,N],[11,"deserialize_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",46,N],[11,"deserialize_bool","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",46,N],[11,"deserialize_identifier","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",11,N],[11,"deserialize_bool","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",11,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",11,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",11,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",11,N],[11,"deserialize_identifier","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",47,N],[11,"deserialize_bool","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",47,N],[11,"deserialize_identifier","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",48,N],[11,"deserialize_bool","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",48,N],[11,"deserialize_identifier","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",12,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",12,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",12,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",12,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",12,N],[11,"deserialize_identifier","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",12,N],[11,"deserialize_any","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",13,N],[11,"deserialize_enum","","",13,N],[11,"deserialize_identifier","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",14,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",14,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",14,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",14,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",14,N],[11,"deserialize_enum","","",14,N],[11,"deserialize_identifier","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",15,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",15,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",15,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",15,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",15,N],[11,"deserialize_enum","","",15,N],[11,"deserialize_identifier","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",16,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",16,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",16,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",16,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",16,N],[11,"deserialize_enum","","",16,N],[11,"deserialize_identifier","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",16,[[["self"],["v"]],["result"]]],[11,"expecting","serde::de","",29,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","",29,[[["self"],["bool"]],["result"]]],[11,"visit_i64","","",29,[[["self"],["i64"]],["result"]]],[11,"visit_u64","","",29,[[["self"],["u64"]],["result"]]],[11,"visit_f64","","",29,[[["self"],["f64"]],["result"]]],[11,"visit_str","","",29,[[["self"],["str"]],["result"]]],[11,"visit_none","","",29,[[["self"]],["result"]]],[11,"visit_some","","",29,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","",29,[[["self"],["d"]],["result"]]],[11,"visit_unit","","",29,[[["self"]],["result"]]],[11,"visit_seq","","",29,[[["self"],["a"]],["result"]]],[11,"visit_map","","",29,[[["self"],["a"]],["result"]]],[11,"visit_bytes","","",29,N],[11,"next_element_seed","serde::de::value","",13,[[["self"],["v"]],["result",["option"]]]],[11,"size_hint","","",13,[[["self"]],["option",["usize"]]]],[11,"next_element_seed","","",15,[[["self"],["t"]],["result",["option"]]]],[11,"size_hint","","",15,[[["self"]],["option",["usize"]]]],[11,"next_key_seed","","",15,[[["self"],["t"]],["result",["option"]]]],[11,"next_value_seed","","",15,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",15,[[["self"],["tk"],["tv"]],["result",["option"]]]],[11,"size_hint","","",15,[[["self"]],["option",["usize"]]]],[11,"variant_seed","","",45,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",46,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",11,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",47,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",48,[[["self"],["t"]],["result"]]],[11,"custom","","",30,[[["t"]],["self"]]],[11,"custom","","",30,[[["t"]],["self"]]],[11,"default","serde::de","",29,[[],["ignoredany"]]],[11,"eq","serde::de::value","",30,[[["self"],["error"]],["bool"]]],[11,"ne","","",30,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",10,[[["self"],["unexpected"]],["bool"]]],[11,"ne","","",10,[[["self"],["unexpected"]],["bool"]]],[11,"clone","serde::de::value","",30,[[["self"]],["error"]]],[11,"clone","","",31,[[["self"]],["unitdeserializer"]]],[11,"clone","","",32,[[["self"]],["booldeserializer"]]],[11,"clone","","",33,[[["self"]],["i8deserializer"]]],[11,"clone","","",34,[[["self"]],["i16deserializer"]]],[11,"clone","","",35,[[["self"]],["i32deserializer"]]],[11,"clone","","",36,[[["self"]],["i64deserializer"]]],[11,"clone","","",37,[[["self"]],["isizedeserializer"]]],[11,"clone","","",38,[[["self"]],["u8deserializer"]]],[11,"clone","","",39,[[["self"]],["u16deserializer"]]],[11,"clone","","",40,[[["self"]],["u64deserializer"]]],[11,"clone","","",41,[[["self"]],["usizedeserializer"]]],[11,"clone","","",42,[[["self"]],["f32deserializer"]]],[11,"clone","","",43,[[["self"]],["f64deserializer"]]],[11,"clone","","",44,[[["self"]],["chardeserializer"]]],[11,"clone","","",45,[[["self"]],["u32deserializer"]]],[11,"clone","","",46,[[["self"]],["strdeserializer"]]],[11,"clone","","",11,[[["self"]],["borrowedstrdeserializer"]]],[11,"clone","","",47,[[["self"]],["stringdeserializer"]]],[11,"clone","","",48,[[["self"]],["cowstrdeserializer"]]],[11,"clone","","",12,[[["self"]],["borrowedbytesdeserializer"]]],[11,"clone","","",13,[[["self"]],["seqdeserializer"]]],[11,"clone","","",14,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"clone","","",16,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",29,[[["self"]],["ignoredany"]]],[11,"clone","","",10,[[["self"]],["unexpected"]]],[11,"fmt","serde::de::value","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde::de","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"description","serde::de::value","",30,[[["self"]],["str"]]]],"paths":[[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[3,"Impossible"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","items":[[24,"Serialize","serde_derive","",N,N],[24,"Deserialize","","",N,N]],"paths":[]};
searchIndex["serde_derive_internals"]={"doc":"","items":[[3,"Ctxt","serde_derive_internals","",N,N],[0,"ast","","",N,N],[3,"Container","serde_derive_internals::ast","",N,N],[12,"ident","","",0,N],[12,"attrs","","",0,N],[12,"body","","",0,N],[12,"generics","","",0,N],[3,"Variant","","",N,N],[12,"ident","","",1,N],[12,"attrs","","",1,N],[12,"style","","",1,N],[12,"fields","","",1,N],[3,"Field","","",N,N],[12,"ident","","",2,N],[12,"attrs","","",2,N],[12,"ty","","",2,N],[4,"Body","","",N,N],[13,"Enum","","",3,N],[13,"Struct","","",3,N],[4,"Style","","",N,N],[13,"Struct","","",4,N],[13,"Tuple","","",4,N],[13,"Newtype","","",4,N],[13,"Unit","","",4,N],[11,"from_ast","","",0,[[["ctxt"],["macroinput"]],["container"]]],[11,"all_fields","","",3,[[["self"]],["box",["iterator"]]]],[11,"has_getter","","",3,[[["self"]],["bool"]]],[0,"attr","serde_derive_internals","",N,N],[3,"Name","serde_derive_internals::attr","",N,N],[3,"Container","","Represents container (e.g. struct) attribute information",N,N],[3,"Variant","","Represents variant attribute information",N,N],[3,"Field","","Represents field attribute information",N,N],[4,"RenameRule","","",N,N],[13,"None","","Don't apply a default rename rule.",5,N],[13,"LowerCase","","Rename direct children to \"lowercase\" style.",5,N],[13,"PascalCase","","Rename direct children to \"PascalCase\" style, as typically used for enum variants.",5,N],[13,"CamelCase","","Rename direct children to \"camelCase\" style.",5,N],[13,"SnakeCase","","Rename direct children to \"snake_case\" style, as commonly used for fields.",5,N],[13,"ScreamingSnakeCase","","Rename direct children to \"SCREAMING_SNAKE_CASE\" style, as commonly used for constants.",5,N],[13,"KebabCase","","Rename direct children to \"kebab-case\" style.",5,N],[4,"EnumTag","","Styles of representing an enum.",N,N],[13,"External","","The default.",6,N],[13,"Internal","","`#[serde(tag = \"type\")]`",6,N],[12,"tag","serde_derive_internals::attr::EnumTag","",6,N],[13,"Adjacent","serde_derive_internals::attr","`#[serde(tag = \"t\", content = \"c\")]`",6,N],[12,"tag","serde_derive_internals::attr::EnumTag","",6,N],[12,"content","","",6,N],[13,"None","serde_derive_internals::attr","`#[serde(untagged)]`",6,N],[4,"Identifier","","Whether this enum represents the fields of a struct or the variants of an enum.",N,N],[13,"No","","It does not.",7,N],[13,"Field","","This enum represents the fields of a struct. All of the variants must be unit variants, except possibly one which is annotated with `#[serde(other)]` and is a newtype variant.",7,N],[13,"Variant","","This enum represents the variants of an enum. All of the variants must be unit variants.",7,N],[4,"Default","","Represents the default to use for a field when deserializing.",N,N],[13,"None","","Field must always be specified because it does not have a default.",8,N],[13,"Default","","The default is given by `std::default::Default::default()`.",8,N],[13,"Path","","The default is given by this function.",8,N],[5,"get_serde_meta_items","","",N,[[["attribute"]],["option",["vec"]]]],[11,"serialize_name","","Return the container name for the container when serializing.",9,[[["self"]],["string"]]],[11,"deserialize_name","","Return the container name for the container when deserializing.",9,[[["self"]],["string"]]],[11,"from_ast","","Extract out the `#[serde(...)]` attributes from an item.",10,[[["ctxt"],["macroinput"]],["self"]]],[11,"name","","",10,[[["self"]],["name"]]],[11,"rename_all","","",10,[[["self"]],["renamerule"]]],[11,"deny_unknown_fields","","",10,[[["self"]],["bool"]]],[11,"default","","",10,[[["self"]],["default"]]],[11,"ser_bound","","",10,[[["self"]],["option"]]],[11,"de_bound","","",10,[[["self"]],["option"]]],[11,"tag","","",10,[[["self"]],["enumtag"]]],[11,"from_type","","",10,[[["self"]],["option",["ty"]]]],[11,"into_type","","",10,[[["self"]],["option",["ty"]]]],[11,"remote","","",10,[[["self"]],["option",["path"]]]],[11,"identifier","","",10,[[["self"]],["identifier"]]],[11,"from_ast","","",11,[[["ctxt"],["variant"]],["self"]]],[11,"name","","",11,[[["self"]],["name"]]],[11,"rename_by_rule","","",11,[[["self"],["renamerule"]]]],[11,"rename_all","","",11,[[["self"]],["renamerule"]]],[11,"skip_deserializing","","",11,[[["self"]],["bool"]]],[11,"skip_serializing","","",11,[[["self"]],["bool"]]],[11,"other","","",11,[[["self"]],["bool"]]],[11,"from_ast","","Extract out the `#[serde(...)]` attributes from a struct field.",12,[[["ctxt"],["usize"],["field"]],["self"]]],[11,"name","","",12,[[["self"]],["name"]]],[11,"rename_by_rule","","",12,[[["self"],["renamerule"]]]],[11,"skip_serializing","","",12,[[["self"]],["bool"]]],[11,"skip_deserializing","","",12,[[["self"]],["bool"]]],[11,"skip_serializing_if","","",12,[[["self"]],["option",["path"]]]],[11,"default","","",12,[[["self"]],["default"]]],[11,"serialize_with","","",12,[[["self"]],["option",["path"]]]],[11,"deserialize_with","","",12,[[["self"]],["option",["path"]]]],[11,"ser_bound","","",12,[[["self"]],["option"]]],[11,"de_bound","","",12,[[["self"]],["option"]]],[11,"borrowed_lifetimes","","",12,[[["self"]],["btreeset"]]],[11,"getter","","",12,[[["self"]],["option",["path"]]]],[11,"new","serde_derive_internals","",13,[[],["self"]]],[11,"error","","",13,[[["self"],["t"]]]],[11,"check","","",13,[[["self"]],["result",["string"]]]],[11,"apply_to_variant","serde_derive_internals::attr","",5,[[["self"],["str"]],["string"]]],[11,"apply_to_field","","",5,[[["self"],["str"]],["string"]]],[11,"into","serde_derive_internals","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","serde_derive_internals::ast","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","serde_derive_internals::attr","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"default","serde_derive_internals","",13,[[],["ctxt"]]],[11,"eq","serde_derive_internals::attr","",8,[[["self"],["default"]],["bool"]]],[11,"ne","","",8,[[["self"],["default"]],["bool"]]],[11,"eq","","",5,[[["self"],["renamerule"]],["bool"]]],[11,"clone","serde_derive_internals::ast","",4,[[["self"]],["style"]]],[11,"clone","serde_derive_internals::attr","",7,[[["self"]],["identifier"]]],[11,"drop","serde_derive_internals","",13,[[["self"]]]],[11,"fmt","serde_derive_internals::attr","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",5,[[["str"]],["result"]]]],"paths":[[3,"Container"],[3,"Variant"],[3,"Field"],[4,"Body"],[4,"Style"],[4,"RenameRule"],[4,"EnumTag"],[4,"Identifier"],[4,"Default"],[3,"Name"],[3,"Container"],[3,"Variant"],[3,"Field"],[3,"Ctxt"]]};
searchIndex["serde_json"]={"doc":"Serde JSON","items":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",N,N],[3,"Error","","This type represents all possible errors that can occur when serializing or deserializing JSON data.",N,N],[3,"Serializer","","A structure for serializing Rust values into JSON.",N,N],[3,"Map","","Represents a JSON key/value type.",N,N],[3,"Number","","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of JSON.",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON text.",N,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO stream.",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON into the IO stream.",N,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum that can represent any valid JSON data.",N,[[["t"]],["result",["value","error"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",N,N],[3,"IoRead","serde_json::de","JSON input source that reads from a std::io input stream.",N,N],[3,"SliceRead","","JSON input source that reads from a slice of bytes.",N,N],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",N,N],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",N,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of JSON.",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON text.",N,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input. This is manually \"specialized\" for iterating over &[u8]. Once feature(specialization) is stable we can use actual specialization.",N,N],[11,"new","","Create a JSON deserializer from one of the possible serde_json input sources.",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,N],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a value has been fully deserialized. This allows the `Deserializer` to validate that the input stream is at the end or that it only has trailing whitespace.",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of type T.",1,[[["self"]],["streamdeserializer"]]],[11,"new","","Create a JSON stream deserializer from one of the possible serde_json input sources.",2,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a successful `T`.",2,[[["self"]],["usize"]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",N,N],[3,"Error","serde_json::error","This type represents all possible errors that can occur when serializing or deserializing JSON data.",N,N],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",N,N],[13,"Io","","The error was caused by a failure to read or write bytes on an IO stream.",3,N],[13,"Syntax","","The error was caused by input that was not syntactically valid JSON.",3,N],[13,"Data","","The error was caused by input data that was semantically incorrect.",3,N],[13,"Eof","","The error was caused by prematurely reaching the end of the input data.",3,N],[6,"Result","","Alias for a `Result` with the error type `serde_json::Error`.",N,N],[11,"line","","One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read or write bytes on an IO stream.",4,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was not syntactically valid JSON.",4,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that was semantically incorrect.",4,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely reaching the end of the input data.",4,[[["self"]],["bool"]]],[0,"map","serde_json","A map of String to serde_json::Value.",N,N],[3,"Map","serde_json::map","Represents a JSON key/value type.",N,N],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter","","An iterator over a serde_json::Map's entries.",N,N],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",N,N],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",N,N],[3,"Keys","","An iterator over a serde_json::Map's keys.",N,N],[3,"Values","","An iterator over a serde_json::Map's values.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied. This enum is constructed from the [`entry`] method on [`Map`].",N,N],[13,"Vacant","","A vacant Entry.",5,N],[13,"Occupied","","An occupied Entry.",5,N],[11,"new","","Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",6,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],["option",["value"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified key.",6,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",6,[[["self"],["q"]],["option",["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["self"],["string"],["value"]],["option",["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key if the key was previously in the map.",6,[[["self"],["q"]],["option",["value"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",6,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.",5,[[["self"],["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.",5,[[["self"],["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when inserting a value through the VacantEntry.",7,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key, and returns a mutable reference to it.",7,[[["self"],["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[["self"]],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s key, and returns the entry's old value.",8,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[["self"]],["value"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",N,N],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",N,N],[3,"CompactFormatter","","This structure compacts a JSON value with no extra whitespace.",N,N],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human readable.",N,N],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",N,N],[13,"Quote","","An escaped quote `\"`",9,N],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",9,N],[13,"Solidus","","An escaped solidus `/`",9,N],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",9,N],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",9,N],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",9,N],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as `\\r`)",9,N],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",9,N],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped as `\\u00XX` where `XX` are two hex characters)",9,N],[5,"to_writer","","Serialize the given data structure as JSON into the IO stream.",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON into the IO stream.",N,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed String of JSON.",N,[[["t"]],["result",["string"]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control characters, which allows the user to optionally pretty print the JSON output.",N,N],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[["self"],["w"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the specified writer.",10,[[["self"],["w"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the specified writer.",10,[[["self"],["w"],["f64"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and `write_char_escape`.  Writes a `\"` to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and `write_char_escape`.  Writes a `\"` to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to the specified writer.",10,[[["self"],["w"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["self"],["w"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array.  Writes a `[` to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"end_array","","Called after every array.  Writes a `]` to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","Called before every array value.  Writes a `,` if needed to the specified writer.",10,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",10,[[["self"],["w"]],["result"]]],[11,"begin_object","","Called before every object.  Writes a `{` to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"end_object","","Called after every object.  Writes a `}` to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","Called before every object key.",10,[[["self"],["w"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key.  A `:` should be written to the specified writer by either this method or `begin_object_value`.",10,[[["self"],["w"]],["result"]]],[11,"begin_object_value","","Called before every object value.  A `:` should be written to the specified writer by either this method or `end_object_key`.",10,[[["self"],["w"]],["result"]]],[11,"end_object_value","","Called after every object value.",10,[[["self"],["w"]],["result"]]],[11,"new","","Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to the writer specified.",11,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[["self"]],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to using two spaces for indentation.",12,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the `indent` string for indentation.",12,N],[0,"value","serde_json","The Value enum, a loosely typed way of representing any valid JSON value.",N,N],[3,"Number","serde_json::value","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum that can represent any valid JSON data.",N,[[["t"]],["result",["value","error"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`. See the `get` and `get_mut` methods of `Value`.",N,N],[11,"get","","Index into a JSON array or map. A string index can be used to access a value in a map, and a usize index can be used to access an element of an array.",0,[[["self"],["i"]],["option",["value"]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can be used to access a value in a map, and a usize index can be used to access an element of an array.",0,[[["self"],["i"]],["option",["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map. Returns None otherwise.",0,[[["self"]],["option",["map"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable Map. Returns None otherwise.",0,[[["self"]],["option",["map"]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector. Returns None otherwise.",0,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector. Returns None otherwise.",0,[[["self"]],["option",["vec"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str. Returns None otherwise.",0,[[["self"]],["option",["str"]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between `i64::MIN` and `i64::MAX`.",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and `u64::MAX`.",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be represented by f64.",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if possible. Returns None otherwise.",0,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if possible. Returns None otherwise.",0,[[["self"]],["option",["u64"]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if possible. Returns None otherwise.",0,[[["self"]],["option",["f64"]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool. Returns None otherwise.",0,[[["self"]],["option",["bool"]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None otherwise.",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["self"],["str"]],["option",["value"]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable reference to that value.",0,[[["self"],["str"]],["option",["value"]]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between `i64::MIN` and `i64::MAX`.",13,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero and `u64::MAX`.",13,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if possible. Returns None otherwise.",13,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if possible. Returns None otherwise.",13,[[["self"]],["option",["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None otherwise.",13,[[["self"]],["option",["f64"]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN values are not JSON numbers.",13,[[["f64"]],["option",["number"]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input stream.",14,[[["r"]],["self"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,N],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result","serde_json","Alias for a `Result` with the error type `serde_json::Error`.",N,N],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",N,N],[11,"into","serde_json::de","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","serde_json::error","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","serde_json::ser","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","serde_json::map","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","serde_json","",13,[[["self"]],["u"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","serde_json::value","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","serde_json::de","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","serde_json::error","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","serde_json::map","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","serde_json::ser","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"begin_array","","",12,[[["self"],["w"]],["result"]]],[11,"end_array","","",12,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","",12,[[["self"],["w"]],["result"]]],[11,"begin_object","","",12,[[["self"],["w"]],["result"]]],[11,"end_object","","",12,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"begin_object_value","","",12,[[["self"],["w"]],["result"]]],[11,"end_object_value","","",12,[[["self"],["w"]],["result"]]],[11,"next","serde_json::de","",14,[[["self"]],["result",["option"]]]],[11,"peek","","",14,[[["self"]],["result",["option"]]]],[11,"discard","","",14,[[["self"]]]],[11,"position","","",14,[[["self"]],["position"]]],[11,"peek_position","","",14,[[["self"]],["position"]]],[11,"byte_offset","","",14,[[["self"]],["usize"]]],[11,"parse_str","","",14,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",14,[[["self"],["vec"]],["result",["reference"]]]],[11,"next","","",15,[[["self"]],["result",["option"]]]],[11,"peek","","",15,[[["self"]],["result",["option"]]]],[11,"discard","","",15,[[["self"]]]],[11,"position","","",15,[[["self"]],["position"]]],[11,"peek_position","","",15,[[["self"]],["position"]]],[11,"byte_offset","","",15,[[["self"]],["usize"]]],[11,"parse_str","","",15,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",15,[[["self"],["vec"]],["result",["reference"]]]],[11,"next","","",16,[[["self"]],["result",["option"]]]],[11,"peek","","",16,[[["self"]],["result",["option"]]]],[11,"discard","","",16,[[["self"]]]],[11,"position","","",16,[[["self"]],["position"]]],[11,"peek_position","","",16,[[["self"]],["position"]]],[11,"byte_offset","","",16,[[["self"]],["usize"]]],[11,"parse_str","","",16,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",16,[[["self"],["vec"]],["result",["reference"]]]],[11,"next","","",2,[[["self"]],["option",["result"]]]],[11,"next","serde_json::map","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,N],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"default","","",6,[[],["self"]]],[11,"default","serde_json::ser","",12,[[],["self"]]],[11,"default","serde_json::value","",0,[[],["value"]]],[11,"next_back","serde_json::map","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",21,[[["self"]],["option"]]],[11,"eq","serde_json::error","",3,[[["self"],["category"]],["bool"]]],[11,"eq","serde_json::map","",6,[[["self"],["self"]],["bool"]]],[11,"eq","serde_json::value","",0,[[["self"],["value"]],["bool"]]],[11,"ne","","",0,[[["self"],["value"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["string"]],["bool"]]],[11,"eq","","",0,[[["self"],["i8"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["self"],["i64"]],["bool"]]],[11,"eq","","",0,[[["self"],["isize"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["self"],["u16"]],["bool"]]],[11,"eq","","",0,[[["self"],["u32"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["self"],["f32"]],["bool"]]],[11,"eq","","",0,[[["self"],["f64"]],["bool"]]],[11,"eq","serde_json","",13,[[["self"],["number"]],["bool"]]],[11,"ne","","",13,[[["self"],["number"]],["bool"]]],[11,"from","serde_json::value","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["map",["string","value"]]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,N],[11,"from","serde_json","",13,[[["i8"]],["self"]]],[11,"from","","",13,[[["i16"]],["self"]]],[11,"from","","",13,[[["i32"]],["self"]]],[11,"from","","",13,[[["i64"]],["self"]]],[11,"from","","",13,[[["isize"]],["self"]]],[11,"from","","",13,[[["u8"]],["self"]]],[11,"from","","",13,[[["u16"]],["self"]]],[11,"from","","",13,[[["u32"]],["self"]]],[11,"from","","",13,[[["u64"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"clone","serde_json::error","",3,[[["self"]],["category"]]],[11,"clone","serde_json::map","",6,[[["self"]],["self"]]],[11,"clone","serde_json::ser","",22,[[["self"]],["compactformatter"]]],[11,"clone","","",12,[[["self"]],["prettyformatter"]]],[11,"clone","serde_json::value","",0,[[["self"]],["value"]]],[11,"clone","serde_json","",13,[[["self"]],["number"]]],[11,"into_iter","serde_json::map","",6,N],[11,"extend","","",6,[[["self"],["t"]]]],[11,"fmt","serde_json::error","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::error","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::map","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde_json::ser","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::value","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json","",13,[[["self"],["formatter"]],["result"]]],[11,"index","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax `value[0]` or `value[\"k\"]`.",0,[[["self"],["i"]],["value"]]],[11,"index_mut","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax `value[0] = ...` or `value[\"k\"] = ...`.",0,[[["self"],["i"]],["value"]]],[11,"from_iter","serde_json::map","",6,[[["t"]],["self"]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["i"]],["self"]]],[11,"from_str","","",0,[[["str"]],["result",["value","error"]]]],[11,"description","serde_json::error","",4,[[["self"]],["str"]]],[11,"cause","","",4,[[["self"]],["option",["error"]]]],[11,"serialize","serde_json::map","",6,[[["self"],["s"]],["result"]]],[11,"serialize","serde_json::value","",0,[[["self"],["s"]],["result"]]],[11,"serialize","serde_json","",13,[[["self"],["s"]],["result"]]],[11,"custom","serde_json::error","",4,[[["t"]],["error"]]],[11,"deserialize_any","serde_json::value","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_option","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_enum","","",0,N],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_any","serde_json","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",13,N],[11,"deserialize_enum","","",13,N],[11,"deserialize_identifier","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize","serde_json::map","",6,[[["d"]],["result"]]],[11,"deserialize","serde_json::value","",0,[[["d"]],["result",["value"]]]],[11,"deserialize","serde_json","",13,[[["d"]],["result",["number"]]]],[11,"custom","serde_json::error","",4,[[["t"]],["error"]]]],"paths":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"CompactFormatter"]]};
searchIndex["syn"]={"doc":"","items":[[3,"Attribute","syn","Doc-comments are promoted to attributes that have `is_sugared_doc` = true",N,N],[12,"style","","",0,N],[12,"value","","",0,N],[12,"is_sugared_doc","","",0,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"ident","","Name of the field, if any.",1,N],[12,"vis","","Visibility of the field.",1,N],[12,"attrs","","Attributes tagged on the field.",1,N],[12,"ty","","Type of the field.",1,N],[3,"Variant","","An enum variant.",N,N],[12,"ident","","Name of the variant.",2,N],[12,"attrs","","Attributes tagged on the variant.",2,N],[12,"data","","Type of variant.",2,N],[12,"discriminant","","Explicit discriminant, e.g. `Foo = 1`",2,N],[3,"Generics","","Represents lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",N,N],[12,"lifetimes","","",3,N],[12,"ty_params","","",3,N],[12,"where_clause","","",3,N],[3,"Lifetime","","",N,N],[12,"ident","","",4,N],[3,"LifetimeDef","","A lifetime definition, e.g. `'a: 'b+'c+'d`",N,N],[12,"attrs","","",5,N],[12,"lifetime","","",5,N],[12,"bounds","","",5,N],[3,"TyParam","","A generic type parameter, e.g. `T: Into<String>`.",N,N],[12,"attrs","","",6,N],[12,"ident","","",6,N],[12,"bounds","","",6,N],[12,"default","","",6,N],[3,"WhereBoundPredicate","","A type bound.",N,N],[12,"bound_lifetimes","","Any lifetimes from a `for` binding",7,N],[12,"bounded_ty","","The type being bounded",7,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",7,N],[3,"WhereClause","","A `where` clause in a definition",N,N],[12,"predicates","","",8,N],[3,"WhereEqPredicate","","An equality predicate (unsupported).",N,N],[12,"lhs_ty","","",9,N],[12,"rhs_ty","","",9,N],[3,"WhereRegionPredicate","","A lifetime predicate.",N,N],[12,"lifetime","","",10,N],[12,"bounds","","",10,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TyGenerics::as_turbofish`.",N,N],[3,"TyGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Ident","","",N,N],[3,"ByteStrLit","","",N,N],[12,"value","","",11,N],[12,"style","","",11,N],[3,"FloatLit","","",N,N],[12,"value","","",12,N],[12,"suffix","","",12,N],[3,"IntLit","","",N,N],[12,"value","","",13,N],[12,"suffix","","",13,N],[3,"StrLit","","",N,N],[12,"value","","",14,N],[12,"style","","",14,N],[3,"Delimited","","",N,N],[12,"delim","","The type of delimiter",15,N],[12,"tts","","The delimited sequence of token trees",15,N],[3,"Mac","","Represents a macro invocation. The Path indicates which macro is being invoked, and the vector of token-trees contains the source of the macro invocation.",N,N],[12,"path","","",16,N],[12,"tts","","",16,N],[3,"DeriveInput","","Struct or enum sent to a `proc_macro_derive` macro.",N,N],[12,"ident","","Name of the struct or enum.",17,N],[12,"vis","","Visibility of the struct or enum.",17,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",17,N],[12,"generics","","Generics required to complete the definition.",17,N],[12,"body","","Data within the struct or enum.",17,N],[3,"AngleBracketedParameterData","","A path like `Foo<'a, T>`",N,N],[12,"lifetimes","","The lifetime parameters for this path segment.",18,N],[12,"types","","The type parameters for this path segment, if present.",18,N],[12,"bindings","","Bindings (equality constraints) on associated types, if present.",18,N],[3,"BareFnArg","","An argument in a function type.",N,N],[12,"name","","",19,N],[12,"ty","","",19,N],[3,"BareFnTy","","",N,N],[12,"unsafety","","",20,N],[12,"abi","","",20,N],[12,"lifetimes","","",20,N],[12,"inputs","","",20,N],[12,"output","","",20,N],[12,"variadic","","",20,N],[3,"MutTy","","",N,N],[12,"ty","","",21,N],[12,"mutability","","",21,N],[3,"ParenthesizedParameterData","","A path like `Foo(A,B) -> C`",N,N],[12,"inputs","","`(A, B)`",22,N],[12,"output","","`C`",22,N],[3,"Path","","A \"Path\" is essentially Rust's notion of a name.",N,N],[12,"global","","A `::foo` path, is relative to the crate root rather than current module (like paths in an import).",23,N],[12,"segments","","The segments in the path: the things separated by `::`.",23,N],[3,"PathSegment","","A segment of a path: an identifier, an optional lifetime, and a set of types.",N,N],[12,"ident","","The identifier portion of this path segment.",24,N],[12,"parameters","","Type/lifetime parameters attached to this path. They come in two flavors: `Path<A,B,C>` and `Path(A,B) -> C`. Note that this is more than just simple syntactic sugar; the use of parens affects the region binding rules, so we preserve the distinction.",24,N],[3,"PolyTraitRef","","",N,N],[12,"bound_lifetimes","","The `'a` in `<'a> Foo<&'a T>`",25,N],[12,"trait_ref","","The `Foo<&'a T>` in `<'a> Foo<&'a T>`",25,N],[3,"QSelf","","The explicit Self type in a \"qualified path\". The actual path, including the trait and the associated item, is stored separately. `position` represents the index of the associated item qualified with this Self type.",N,N],[12,"ty","","",26,N],[12,"position","","",26,N],[3,"TypeBinding","","Bind a type to an associated type: `A=Foo`.",N,N],[12,"ident","","",27,N],[12,"ty","","",27,N],[4,"AttrStyle","","Distinguishes between Attributes that decorate items and Attributes that are contained as statements within items. These two cases need to be distinguished for pretty-printing.",N,N],[13,"Outer","","Attribute of the form `#![...]`.",28,N],[13,"Inner","","Attribute of the form `#[...]`.",28,N],[4,"MetaItem","","A compile-time attribute item.",N,N],[13,"Word","","Word meta item.",29,N],[13,"List","","List meta item.",29,N],[13,"NameValue","","Name-value meta item.",29,N],[4,"NestedMetaItem","","Possible values inside of compile-time attribute lists.",N,N],[13,"MetaItem","","A full `MetaItem`.",30,N],[13,"Literal","","A Rust literal.",30,N],[4,"ConstExpr","","",N,N],[13,"Call","","A function call",31,N],[13,"Binary","","A binary operation (For example: `a + b`, `a * b`)",31,N],[13,"Unary","","A unary operation (For example: `!x`, `*x`)",31,N],[13,"Lit","","A literal (For example: `1`, `\"foo\"`)",31,N],[13,"Cast","","A cast (`foo as f64`)",31,N],[13,"Path","","Variable reference, possibly containing `::` and/or type parameters, e.g. foo::bar::.",31,N],[13,"Index","","An indexing operation (`foo[2]`)",31,N],[13,"Paren","","No-op: used solely so we can pretty-print faithfully",31,N],[13,"Other","","If compiling with full support for expression syntax, any expression is allowed",31,N],[4,"VariantData","","Data stored within an enum variant or struct.",N,N],[13,"Struct","","Struct variant, e.g. `Point { x: f64, y: f64 }`.",32,N],[13,"Tuple","","Tuple variant, e.g. `Some(T)`.",32,N],[13,"Unit","","Unit variant, e.g. `None`.",32,N],[4,"Visibility","","Visibility level of an item.",N,N],[13,"Public","","Public, i.e. `pub`.",33,N],[13,"Crate","","Crate-visible, i.e. `pub(crate)`.",33,N],[13,"Restricted","","Restricted, e.g. `pub(some::module)`.",33,N],[13,"Inherited","","Inherited, i.e. private.",33,N],[4,"TraitBoundModifier","","A modifier on a bound, currently this is only used for `?Sized`, where the modifier is `Maybe`. Negative bounds should also be handled here.",N,N],[13,"None","","",34,N],[13,"Maybe","","",34,N],[4,"TyParamBound","","The AST represents all type param bounds as types. `typeck::collect::compute_bounds` matches these against the \"special\" built-in traits (see `middle::lang_items`) and detects Copy, Send and Sync.",N,N],[13,"Trait","","",35,N],[13,"Region","","",35,N],[4,"WherePredicate","","A single predicate in a `where` clause",N,N],[13,"BoundPredicate","","A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",36,N],[13,"RegionPredicate","","A lifetime predicate, e.g. `'a: 'b+'c`",36,N],[13,"EqPredicate","","An equality predicate (unsupported)",36,N],[4,"FloatTy","","",N,N],[13,"F32","","",37,N],[13,"F64","","",37,N],[13,"Unsuffixed","","",37,N],[4,"IntTy","","",N,N],[13,"Isize","","",38,N],[13,"I8","","",38,N],[13,"I16","","",38,N],[13,"I32","","",38,N],[13,"I64","","",38,N],[13,"Usize","","",38,N],[13,"U8","","",38,N],[13,"U16","","",38,N],[13,"U32","","",38,N],[13,"U64","","",38,N],[13,"Unsuffixed","","",38,N],[4,"Lit","","Literal kind.",N,N],[13,"Str","","A string literal (`\"foo\"`)",39,N],[13,"ByteStr","","A byte string (`b\"foo\"`)",39,N],[13,"Byte","","A byte char (`b'f'`)",39,N],[13,"Char","","A character literal (`'a'`)",39,N],[13,"Int","","An integer literal (`1`)",39,N],[13,"Float","","A float literal (`1f64` or `1E10f64` or `1.0E10`)",39,N],[13,"Bool","","A boolean literal",39,N],[4,"StrStyle","","",N,N],[13,"Cooked","","A regular string, like `\"foo\"`",40,N],[13,"Raw","","A raw string, like `r##\"foo\"##`",40,N],[4,"BinOpToken","","",N,N],[13,"Plus","","",41,N],[13,"Minus","","",41,N],[13,"Star","","",41,N],[13,"Slash","","",41,N],[13,"Percent","","",41,N],[13,"Caret","","",41,N],[13,"And","","",41,N],[13,"Or","","",41,N],[13,"Shl","","",41,N],[13,"Shr","","",41,N],[4,"DelimToken","","A delimiter token",N,N],[13,"Paren","","A round parenthesis: `(` or `)`",42,N],[13,"Bracket","","A square bracket: `[` or `]`",42,N],[13,"Brace","","A curly brace: `{` or `}`",42,N],[4,"Token","","",N,N],[13,"Eq","","",43,N],[13,"Lt","","",43,N],[13,"Le","","",43,N],[13,"EqEq","","",43,N],[13,"Ne","","",43,N],[13,"Ge","","",43,N],[13,"Gt","","",43,N],[13,"AndAnd","","",43,N],[13,"OrOr","","",43,N],[13,"Not","","",43,N],[13,"Tilde","","",43,N],[13,"BinOp","","",43,N],[13,"BinOpEq","","",43,N],[13,"At","","",43,N],[13,"Dot","","",43,N],[13,"DotDot","","",43,N],[13,"DotDotDot","","",43,N],[13,"Comma","","",43,N],[13,"Semi","","",43,N],[13,"Colon","","",43,N],[13,"ModSep","","",43,N],[13,"RArrow","","",43,N],[13,"LArrow","","",43,N],[13,"FatArrow","","",43,N],[13,"Pound","","",43,N],[13,"Dollar","","",43,N],[13,"Question","","",43,N],[13,"Literal","","",43,N],[13,"Ident","","",43,N],[13,"Underscore","","",43,N],[13,"Lifetime","","",43,N],[13,"DocComment","","",43,N],[4,"TokenTree","","When the main rust parser encounters a syntax-extension invocation, it parses the arguments to the invocation as a token-tree. This is a very loose structure, such that all sorts of different AST-fragments can be passed to syntax extensions using a uniform type.",N,N],[13,"Token","","A single token",44,N],[13,"Delimited","","A delimited sequence of token trees",44,N],[4,"Body","","Body of a derived struct or enum.",N,N],[13,"Enum","","It's an enum.",45,N],[13,"Struct","","It's a struct.",45,N],[4,"BinOp","","",N,N],[13,"Add","","The `+` operator (addition)",46,N],[13,"Sub","","The `-` operator (subtraction)",46,N],[13,"Mul","","The `*` operator (multiplication)",46,N],[13,"Div","","The `/` operator (division)",46,N],[13,"Rem","","The `%` operator (modulus)",46,N],[13,"And","","The `&&` operator (logical and)",46,N],[13,"Or","","The `||` operator (logical or)",46,N],[13,"BitXor","","The `^` operator (bitwise xor)",46,N],[13,"BitAnd","","The `&` operator (bitwise and)",46,N],[13,"BitOr","","The `|` operator (bitwise or)",46,N],[13,"Shl","","The `<<` operator (shift left)",46,N],[13,"Shr","","The `>>` operator (shift right)",46,N],[13,"Eq","","The `==` operator (equality)",46,N],[13,"Lt","","The `<` operator (less than)",46,N],[13,"Le","","The `<=` operator (less than or equal to)",46,N],[13,"Ne","","The `!=` operator (not equal to)",46,N],[13,"Ge","","The `>=` operator (greater than or equal to)",46,N],[13,"Gt","","The `>` operator (greater than)",46,N],[4,"UnOp","","",N,N],[13,"Deref","","The `*` operator for dereferencing",47,N],[13,"Not","","The `!` operator for logical inversion",47,N],[13,"Neg","","The `-` operator for negation",47,N],[4,"Abi","","",N,N],[13,"Named","","",48,N],[13,"Rust","","",48,N],[4,"FunctionRetTy","","",N,N],[13,"Default","","Return type is not specified.",49,N],[13,"Ty","","Everything else",49,N],[4,"Mutability","","",N,N],[13,"Mutable","","",50,N],[13,"Immutable","","",50,N],[4,"PathParameters","","Parameters of a path segment.",N,N],[13,"AngleBracketed","","The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`",51,N],[13,"Parenthesized","","The `(A, B)` and `C` in `Foo(A, B) -> C`",51,N],[4,"Ty","","The different kinds of types recognized by the compiler",N,N],[13,"Slice","","A variable-length array (`[T]`)",52,N],[13,"Array","","A fixed length array (`[T; n]`)",52,N],[13,"Ptr","","A raw pointer (`*const T` or `*mut T`)",52,N],[13,"Rptr","","A reference (`&'a T` or `&'a mut T`)",52,N],[13,"BareFn","","A bare function (e.g. `fn(usize) -> bool`)",52,N],[13,"Never","","The never type (`!`)",52,N],[13,"Tup","","A tuple (`(A, B, C, D, ...)`)",52,N],[13,"Path","","A path (`module::module::...::Type`), optionally \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.",52,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",52,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",52,N],[13,"Paren","","No-op; kept solely so that we can pretty-print faithfully",52,N],[13,"Infer","","TyKind::Infer means the type should be inferred instead of it having been specified. This can appear anywhere in a type.",52,N],[13,"Mac","","A macro in the type position.",52,N],[4,"Unsafety","","",N,N],[13,"Unsafe","","",53,N],[13,"Normal","","",53,N],[5,"parse_derive_input","","",N,[[["str"]],["result",["deriveinput","string"]]]],[5,"parse_type","","",N,[[["str"]],["result",["ty","string"]]]],[5,"parse_path","","",N,[[["str"]],["result",["path","string"]]]],[5,"parse_where_clause","","",N,[[["str"]],["result",["whereclause","string"]]]],[5,"parse_token_trees","","",N,[[["str"]],["result",["vec","string"]]]],[5,"parse_ident","","",N,[[["str"]],["result",["ident","string"]]]],[5,"parse_ty_param_bound","","",N,[[["str"]],["result",["typarambound","string"]]]],[5,"parse_outer_attr","","",N,[[["str"]],["result",["attribute","string"]]]],[11,"name","","",0,[[["self"]],["str"]]],[11,"name","","Name of the item.",29,[[["self"]],["str"]]],[11,"fields","","Slice containing the fields stored in the variant.",32,N],[11,"fields_mut","","Mutable slice containing the fields stored in the variant.",32,N],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",3,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",54,[[["self"]],["turbofish"]]],[11,"new","","",4,[[["t"]],["self"]]],[11,"new","","",5,[[["t"]],["self"]]],[11,"none","","",8,[[],["self"]]],[11,"new","","",55,[[["t"]],["self"]]],[11,"op","","",46,[[["self"]],["str"]]],[11,"assign_op","","",46,[[["self"]],["option",["str"]]]],[11,"op","","",47,[[["self"]],["str"]]],[11,"none","","",51,[[],["self"]]],[11,"is_empty","","",51,[[["self"]],["bool"]]],[0,"visit","","AST walker. Each overridden visit method has full control over what happens with its node, it can do its own traversal of the node's children, call `visit::walk_*` to apply the default traversal algorithm, or prevent deeper traversal by doing nothing.",N,N],[5,"walk_opt_ident","syn::visit","",N,[[["v"],["option"]]]],[5,"walk_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"walk_poly_trait_ref","","",N,[[["v"],["polytraitref"],["traitboundmodifier"]]]],[5,"walk_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"walk_variant","","",N,[[["v"],["variant"],["generics"]]]],[5,"walk_ty","","",N,[[["v"],["ty"]]]],[5,"walk_path","","",N,[[["v"],["path"]]]],[5,"walk_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"walk_path_parameters","","",N,[[["v"],["pathparameters"]]]],[5,"walk_assoc_type_binding","","",N,[[["v"],["typebinding"]]]],[5,"walk_ty_param_bound","","",N,[[["v"],["typarambound"]]]],[5,"walk_generics","","",N,[[["v"],["generics"]]]],[5,"walk_fn_ret_ty","","",N,[[["v"],["functionretty"]]]],[5,"walk_variant_data","","",N,[[["v"],["variantdata"]]]],[5,"walk_field","","",N,[[["v"],["field"]]]],[5,"walk_const_expr","","",N,[[["v"],["constexpr"]]]],[5,"walk_mac","","",N,[[["v"],["mac"]]]],[8,"Visitor","","Each method of the Visitor trait is a hook to be potentially overridden.  Each method's default implementation recursively visits the substructure of the input via the corresponding `walk` method; e.g. the `visit_mod` method by default calls `visit::walk_mod`.",N,N],[11,"visit_ident","","",56,[[["self"],["ident"]]]],[11,"visit_derive_input","","",56,[[["self"],["deriveinput"]]]],[11,"visit_ty","","",56,[[["self"],["ty"]]]],[11,"visit_generics","","",56,[[["self"],["generics"]]]],[11,"visit_ty_param_bound","","",56,[[["self"],["typarambound"]]]],[11,"visit_poly_trait_ref","","",56,[[["self"],["polytraitref"],["traitboundmodifier"]]]],[11,"visit_variant_data","","",56,[[["self"],["variantdata"],["ident"],["generics"]]]],[11,"visit_field","","",56,[[["self"],["field"]]]],[11,"visit_variant","","",56,[[["self"],["variant"],["generics"]]]],[11,"visit_lifetime","","",56,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",56,[[["self"],["lifetimedef"]]]],[11,"visit_path","","",56,[[["self"],["path"]]]],[11,"visit_path_segment","","",56,[[["self"],["pathsegment"]]]],[11,"visit_path_parameters","","",56,[[["self"],["pathparameters"]]]],[11,"visit_assoc_type_binding","","",56,[[["self"],["typebinding"]]]],[11,"visit_attribute","","",56,[[["self"],["attribute"]]]],[11,"visit_fn_ret_ty","","",56,[[["self"],["functionretty"]]]],[11,"visit_const_expr","","",56,[[["self"],["constexpr"]]]],[11,"visit_lit","","",56,[[["self"],["lit"]]]],[11,"visit_mac","","",56,[[["self"],["mac"]]]],[0,"parse","syn","This module contains a set of exported nom parsers which can be used to parse custom grammars when used alongside the `synom` crate.",N,N],[4,"IResult","syn::parse","The result of a parser.",N,N],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",57,N],[13,"Error","","Parsing failed.",57,N],[5,"lit","","",N,[[["str"]],["iresult",["str","lit"]]]],[5,"string","","",N,[[["str"]],["iresult",["str","strlit"]]]],[5,"byte_string","","",N,[[["str"]],["iresult",["str","bytestrlit"]]]],[5,"byte","","",N,[[["str"]],["iresult",["str","u8"]]]],[5,"character","","",N,[[["str"]],["iresult",["str","char"]]]],[5,"float","","",N,[[["str"]],["iresult",["str","floatlit"]]]],[5,"int","","",N,[[["str"]],["iresult",["str","intlit"]]]],[5,"boolean","","",N,[[["str"]],["iresult",["str","bool"]]]],[5,"ty","","",N,[[["str"]],["iresult",["str","ty"]]]],[5,"path","","",N,[[["str"]],["iresult",["str","path"]]]],[5,"tt","","",N,[[["str"]],["iresult",["str","tokentree"]]]],[5,"ident","","",N,[[["str"]],["iresult",["str","ident"]]]],[5,"lifetime","","",N,[[["str"]],["iresult",["str","lifetime"]]]],[11,"into","syn","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"into","syn::parse","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",57,[[["self"],["iresult"]],["bool"]]],[11,"ne","","",57,[[["self"],["iresult"]],["bool"]]],[11,"clone","","",57,[[["self"]],["iresult"]]],[11,"partial_cmp","syn","",4,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"le","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"gt","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"ge","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"partial_cmp","","",55,[[["self"],["ident"]],["option",["ordering"]]]],[11,"lt","","",55,[[["self"],["ident"]],["bool"]]],[11,"le","","",55,[[["self"],["ident"]],["bool"]]],[11,"gt","","",55,[[["self"],["ident"]],["bool"]]],[11,"ge","","",55,[[["self"],["ident"]],["bool"]]],[11,"default","","",3,[[],["generics"]]],[11,"default","","",8,[[],["whereclause"]]],[11,"default","","",18,[[],["anglebracketedparameterdata"]]],[11,"cmp","","",4,[[["self"],["lifetime"]],["ordering"]]],[11,"cmp","","",55,[[["self"],["ident"]],["ordering"]]],[11,"eq","","",0,[[["self"],["attribute"]],["bool"]]],[11,"ne","","",0,[[["self"],["attribute"]],["bool"]]],[11,"eq","","",28,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",29,[[["self"],["metaitem"]],["bool"]]],[11,"ne","","",29,[[["self"],["metaitem"]],["bool"]]],[11,"eq","","",30,[[["self"],["nestedmetaitem"]],["bool"]]],[11,"ne","","",30,[[["self"],["nestedmetaitem"]],["bool"]]],[11,"eq","","",31,[[["self"],["constexpr"]],["bool"]]],[11,"ne","","",31,[[["self"],["constexpr"]],["bool"]]],[11,"eq","","",2,[[["self"],["variant"]],["bool"]]],[11,"ne","","",2,[[["self"],["variant"]],["bool"]]],[11,"eq","","",32,[[["self"],["variantdata"]],["bool"]]],[11,"ne","","",32,[[["self"],["variantdata"]],["bool"]]],[11,"eq","","",1,[[["self"],["field"]],["bool"]]],[11,"ne","","",1,[[["self"],["field"]],["bool"]]],[11,"eq","","",33,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",33,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",3,[[["self"],["generics"]],["bool"]]],[11,"ne","","",3,[[["self"],["generics"]],["bool"]]],[11,"eq","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"ne","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",5,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",5,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",6,[[["self"],["typaram"]],["bool"]]],[11,"ne","","",6,[[["self"],["typaram"]],["bool"]]],[11,"eq","","",35,[[["self"],["typarambound"]],["bool"]]],[11,"ne","","",35,[[["self"],["typarambound"]],["bool"]]],[11,"eq","","",34,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",8,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",8,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",36,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",36,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",7,[[["self"],["whereboundpredicate"]],["bool"]]],[11,"ne","","",7,[[["self"],["whereboundpredicate"]],["bool"]]],[11,"eq","","",10,[[["self"],["whereregionpredicate"]],["bool"]]],[11,"ne","","",10,[[["self"],["whereregionpredicate"]],["bool"]]],[11,"eq","","",9,[[["self"],["whereeqpredicate"]],["bool"]]],[11,"ne","","",9,[[["self"],["whereeqpredicate"]],["bool"]]],[11,"eq","","",55,[[["self"],["t"]],["bool"]]],[11,"eq","","",39,[[["self"],["lit"]],["bool"]]],[11,"ne","","",39,[[["self"],["lit"]],["bool"]]],[11,"eq","","",40,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",40,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",38,[[["self"],["intty"]],["bool"]]],[11,"eq","","",37,[[["self"],["floatty"]],["bool"]]],[11,"eq","","",16,[[["self"],["mac"]],["bool"]]],[11,"ne","","",16,[[["self"],["mac"]],["bool"]]],[11,"eq","","",44,[[["self"],["tokentree"]],["bool"]]],[11,"ne","","",44,[[["self"],["tokentree"]],["bool"]]],[11,"eq","","",15,[[["self"],["delimited"]],["bool"]]],[11,"ne","","",15,[[["self"],["delimited"]],["bool"]]],[11,"eq","","",43,[[["self"],["token"]],["bool"]]],[11,"ne","","",43,[[["self"],["token"]],["bool"]]],[11,"eq","","",41,[[["self"],["binoptoken"]],["bool"]]],[11,"eq","","",42,[[["self"],["delimtoken"]],["bool"]]],[11,"eq","","",17,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",17,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",45,[[["self"],["body"]],["bool"]]],[11,"ne","","",45,[[["self"],["body"]],["bool"]]],[11,"eq","","",46,[[["self"],["binop"]],["bool"]]],[11,"eq","","",47,[[["self"],["unop"]],["bool"]]],[11,"eq","","",52,[[["self"],["ty"]],["bool"]]],[11,"ne","","",52,[[["self"],["ty"]],["bool"]]],[11,"eq","","",21,[[["self"],["mutty"]],["bool"]]],[11,"ne","","",21,[[["self"],["mutty"]],["bool"]]],[11,"eq","","",50,[[["self"],["mutability"]],["bool"]]],[11,"eq","","",23,[[["self"],["path"]],["bool"]]],[11,"ne","","",23,[[["self"],["path"]],["bool"]]],[11,"eq","","",24,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",24,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",51,[[["self"],["pathparameters"]],["bool"]]],[11,"ne","","",51,[[["self"],["pathparameters"]],["bool"]]],[11,"eq","","",18,[[["self"],["anglebracketedparameterdata"]],["bool"]]],[11,"ne","","",18,[[["self"],["anglebracketedparameterdata"]],["bool"]]],[11,"eq","","",27,[[["self"],["typebinding"]],["bool"]]],[11,"ne","","",27,[[["self"],["typebinding"]],["bool"]]],[11,"eq","","",22,[[["self"],["parenthesizedparameterdata"]],["bool"]]],[11,"ne","","",22,[[["self"],["parenthesizedparameterdata"]],["bool"]]],[11,"eq","","",25,[[["self"],["polytraitref"]],["bool"]]],[11,"ne","","",25,[[["self"],["polytraitref"]],["bool"]]],[11,"eq","","",26,[[["self"],["qself"]],["bool"]]],[11,"ne","","",26,[[["self"],["qself"]],["bool"]]],[11,"eq","","",20,[[["self"],["barefnty"]],["bool"]]],[11,"ne","","",20,[[["self"],["barefnty"]],["bool"]]],[11,"eq","","",53,[[["self"],["unsafety"]],["bool"]]],[11,"eq","","",48,[[["self"],["abi"]],["bool"]]],[11,"ne","","",48,[[["self"],["abi"]],["bool"]]],[11,"eq","","",19,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",19,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",49,[[["self"],["functionretty"]],["bool"]]],[11,"ne","","",49,[[["self"],["functionretty"]],["bool"]]],[11,"from","","",6,[[["ident"]],["self"]]],[11,"from","","",55,[[["str"]],["self"]]],[11,"from","","",55,[[["cow",["str"]]],["self"]]],[11,"from","","",55,[[["string"]],["self"]]],[11,"from","","",55,[[["usize"]],["self"]]],[11,"from","","",39,[[["string"]],["lit"]]],[11,"from","","",39,[[["str"]],["lit"]]],[11,"from","","",39,[[["vec",["u8"]]],["lit"]]],[11,"from","","",39,N],[11,"from","","",39,[[["char"]],["lit"]]],[11,"from","","",39,[[["bool"]],["lit"]]],[11,"from","","",39,[[["isize"]],["lit"]]],[11,"from","","",39,[[["i8"]],["lit"]]],[11,"from","","",39,[[["i16"]],["lit"]]],[11,"from","","",39,[[["i32"]],["lit"]]],[11,"from","","",39,[[["i64"]],["lit"]]],[11,"from","","",39,[[["usize"]],["lit"]]],[11,"from","","",39,[[["u8"]],["lit"]]],[11,"from","","",39,[[["u16"]],["lit"]]],[11,"from","","",39,[[["u32"]],["lit"]]],[11,"from","","",39,[[["u64"]],["lit"]]],[11,"from","","",39,[[["f32"]],["lit"]]],[11,"from","","",39,[[["f64"]],["lit"]]],[11,"from","","",23,[[["t"]],["self"]]],[11,"from","","",24,[[["t"]],["self"]]],[11,"as_ref","","",55,[[["self"]],["str"]]],[11,"clone","","",0,[[["self"]],["attribute"]]],[11,"clone","","",28,[[["self"]],["attrstyle"]]],[11,"clone","","",29,[[["self"]],["metaitem"]]],[11,"clone","","",30,[[["self"]],["nestedmetaitem"]]],[11,"clone","","",31,[[["self"]],["constexpr"]]],[11,"clone","","",2,[[["self"]],["variant"]]],[11,"clone","","",32,[[["self"]],["variantdata"]]],[11,"clone","","",1,[[["self"]],["field"]]],[11,"clone","","",33,[[["self"]],["visibility"]]],[11,"clone","","",3,[[["self"]],["generics"]]],[11,"clone","","",4,[[["self"]],["lifetime"]]],[11,"clone","","",5,[[["self"]],["lifetimedef"]]],[11,"clone","","",6,[[["self"]],["typaram"]]],[11,"clone","","",35,[[["self"]],["typarambound"]]],[11,"clone","","",34,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",8,[[["self"]],["whereclause"]]],[11,"clone","","",36,[[["self"]],["wherepredicate"]]],[11,"clone","","",7,[[["self"]],["whereboundpredicate"]]],[11,"clone","","",10,[[["self"]],["whereregionpredicate"]]],[11,"clone","","",9,[[["self"]],["whereeqpredicate"]]],[11,"clone","","",55,[[["self"]],["ident"]]],[11,"clone","","",39,[[["self"]],["lit"]]],[11,"clone","","",40,[[["self"]],["strstyle"]]],[11,"clone","","",38,[[["self"]],["intty"]]],[11,"clone","","",37,[[["self"]],["floatty"]]],[11,"clone","","",14,[[["self"]],["strlit"]]],[11,"clone","","",11,[[["self"]],["bytestrlit"]]],[11,"clone","","",13,[[["self"]],["intlit"]]],[11,"clone","","",12,[[["self"]],["floatlit"]]],[11,"clone","","",16,[[["self"]],["mac"]]],[11,"clone","","",44,[[["self"]],["tokentree"]]],[11,"clone","","",15,[[["self"]],["delimited"]]],[11,"clone","","",43,[[["self"]],["token"]]],[11,"clone","","",41,[[["self"]],["binoptoken"]]],[11,"clone","","",42,[[["self"]],["delimtoken"]]],[11,"clone","","",17,[[["self"]],["deriveinput"]]],[11,"clone","","",45,[[["self"]],["body"]]],[11,"clone","","",46,[[["self"]],["binop"]]],[11,"clone","","",47,[[["self"]],["unop"]]],[11,"clone","","",52,[[["self"]],["ty"]]],[11,"clone","","",21,[[["self"]],["mutty"]]],[11,"clone","","",50,[[["self"]],["mutability"]]],[11,"clone","","",23,[[["self"]],["path"]]],[11,"clone","","",24,[[["self"]],["pathsegment"]]],[11,"clone","","",51,[[["self"]],["pathparameters"]]],[11,"clone","","",18,[[["self"]],["anglebracketedparameterdata"]]],[11,"clone","","",27,[[["self"]],["typebinding"]]],[11,"clone","","",22,[[["self"]],["parenthesizedparameterdata"]]],[11,"clone","","",25,[[["self"]],["polytraitref"]]],[11,"clone","","",26,[[["self"]],["qself"]]],[11,"clone","","",20,[[["self"]],["barefnty"]]],[11,"clone","","",53,[[["self"]],["unsafety"]]],[11,"clone","","",48,[[["self"]],["abi"]]],[11,"clone","","",19,[[["self"]],["barefnarg"]]],[11,"clone","","",49,[[["self"]],["functionretty"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"hash","","",28,N],[11,"hash","","",29,N],[11,"hash","","",30,N],[11,"hash","","",31,N],[11,"hash","","",2,N],[11,"hash","","",32,N],[11,"hash","","",1,N],[11,"hash","","",33,N],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"hash","","",35,N],[11,"hash","","",34,N],[11,"hash","","",8,N],[11,"hash","","",36,N],[11,"hash","","",7,N],[11,"hash","","",10,N],[11,"hash","","",9,N],[11,"hash","","",55,N],[11,"hash","","",39,N],[11,"hash","","",40,N],[11,"hash","","",38,N],[11,"hash","","",37,N],[11,"hash","","",16,N],[11,"hash","","",44,N],[11,"hash","","",15,N],[11,"hash","","",43,N],[11,"hash","","",41,N],[11,"hash","","",42,N],[11,"hash","","",17,N],[11,"hash","","",45,N],[11,"hash","","",46,N],[11,"hash","","",47,N],[11,"hash","","",52,N],[11,"hash","","",21,N],[11,"hash","","",50,N],[11,"hash","","",23,N],[11,"hash","","",24,N],[11,"hash","","",51,N],[11,"hash","","",18,N],[11,"hash","","",27,N],[11,"hash","","",22,N],[11,"hash","","",25,N],[11,"hash","","",26,N],[11,"hash","","",20,N],[11,"hash","","",53,N],[11,"hash","","",48,N],[11,"hash","","",19,N],[11,"hash","","",49,N],[11,"to_tokens","","",0,[[["self"],["tokens"]]]],[11,"to_tokens","","",29,[[["self"],["tokens"]]]],[11,"to_tokens","","",30,[[["self"],["tokens"]]]],[11,"to_tokens","","",31,[[["self"],["tokens"]]]],[11,"to_tokens","","",2,[[["self"],["tokens"]]]],[11,"to_tokens","","",32,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",33,[[["self"],["tokens"]]]],[11,"to_tokens","","",3,[[["self"],["tokens"]]]],[11,"to_tokens","","",58,[[["self"],["tokens"]]]],[11,"to_tokens","","",54,[[["self"],["tokens"]]]],[11,"to_tokens","","",59,[[["self"],["tokens"]]]],[11,"to_tokens","","",4,[[["self"],["tokens"]]]],[11,"to_tokens","","",5,[[["self"],["tokens"]]]],[11,"to_tokens","","",6,[[["self"],["tokens"]]]],[11,"to_tokens","","",35,[[["self"],["tokens"]]]],[11,"to_tokens","","",8,[[["self"],["tokens"]]]],[11,"to_tokens","","",36,[[["self"],["tokens"]]]],[11,"to_tokens","","",7,[[["self"],["tokens"]]]],[11,"to_tokens","","",10,[[["self"],["tokens"]]]],[11,"to_tokens","","",9,[[["self"],["tokens"]]]],[11,"to_tokens","","",55,[[["self"],["tokens"]]]],[11,"to_tokens","","",39,[[["self"],["tokens"]]]],[11,"to_tokens","","",16,[[["self"],["tokens"]]]],[11,"to_tokens","","",44,[[["self"],["tokens"]]]],[11,"to_tokens","","",15,[[["self"],["tokens"]]]],[11,"to_tokens","","",43,[[["self"],["tokens"]]]],[11,"to_tokens","","",41,[[["self"],["tokens"]]]],[11,"to_tokens","","",17,[[["self"],["tokens"]]]],[11,"to_tokens","","",46,[[["self"],["tokens"]]]],[11,"to_tokens","","",47,[[["self"],["tokens"]]]],[11,"to_tokens","","",52,[[["self"],["tokens"]]]],[11,"to_tokens","","",50,[[["self"],["tokens"]]]],[11,"to_tokens","","",23,[[["self"],["tokens"]]]],[11,"to_tokens","","",24,[[["self"],["tokens"]]]],[11,"to_tokens","","",51,[[["self"],["tokens"]]]],[11,"to_tokens","","",18,[[["self"],["tokens"]]]],[11,"to_tokens","","",27,[[["self"],["tokens"]]]],[11,"to_tokens","","",22,[[["self"],["tokens"]]]],[11,"to_tokens","","",25,[[["self"],["tokens"]]]],[11,"to_tokens","","",20,[[["self"],["tokens"]]]],[11,"to_tokens","","",19,[[["self"],["tokens"]]]],[11,"to_tokens","","",53,[[["self"],["tokens"]]]],[11,"to_tokens","","",48,[[["self"],["tokens"]]]],[11,"expect","syn::parse","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",57,[[["self"],["str"]],["o"]]]],"paths":[[3,"Attribute"],[3,"Field"],[3,"Variant"],[3,"Generics"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"TyParam"],[3,"WhereBoundPredicate"],[3,"WhereClause"],[3,"WhereEqPredicate"],[3,"WhereRegionPredicate"],[3,"ByteStrLit"],[3,"FloatLit"],[3,"IntLit"],[3,"StrLit"],[3,"Delimited"],[3,"Mac"],[3,"DeriveInput"],[3,"AngleBracketedParameterData"],[3,"BareFnArg"],[3,"BareFnTy"],[3,"MutTy"],[3,"ParenthesizedParameterData"],[3,"Path"],[3,"PathSegment"],[3,"PolyTraitRef"],[3,"QSelf"],[3,"TypeBinding"],[4,"AttrStyle"],[4,"MetaItem"],[4,"NestedMetaItem"],[4,"ConstExpr"],[4,"VariantData"],[4,"Visibility"],[4,"TraitBoundModifier"],[4,"TyParamBound"],[4,"WherePredicate"],[4,"FloatTy"],[4,"IntTy"],[4,"Lit"],[4,"StrStyle"],[4,"BinOpToken"],[4,"DelimToken"],[4,"Token"],[4,"TokenTree"],[4,"Body"],[4,"BinOp"],[4,"UnOp"],[4,"Abi"],[4,"FunctionRetTy"],[4,"Mutability"],[4,"PathParameters"],[4,"Ty"],[4,"Unsafety"],[3,"TyGenerics"],[3,"Ident"],[8,"Visitor"],[4,"IResult"],[3,"ImplGenerics"],[3,"Turbofish"]]};
searchIndex["synom"]={"doc":"Adapted from `nom` by removing the `IResult::Incomplete` variant which:","items":[[4,"IResult","synom","The result of a parser.",N,N],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",0,N],[13,"Error","","Parsing failed.",0,N],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",0,[[["self"],["str"]],["o"]]],[14,"punct","","Parse a piece of punctuation like \"+\" or \"+=\".",N,N],[14,"keyword","","Parse a keyword like \"fn\" or \"struct\".",N,N],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",N,N],[14,"opt_vec","","Turn a failed parse into an empty vector. The argument parser must itself return a vector.",N,N],[14,"epsilon","","Parses nothing and always succeeds.",N,N],[14,"separated_list","","Zero or more values separated by some separator. Does not allow a trailing seperator.",N,N],[14,"terminated_list","","Zero or more values separated by some separator. A trailing separator is allowed.",N,N],[14,"named","","Define a function from a parser combination.",N,N],[14,"call","","Invoke the given parser function with the passed in arguments.",N,N],[14,"map","","Transform the result of a parser by applying a function or closure.",N,N],[14,"not","","Parses successfully if the given parser fails to parse. Does not consume any of the input.",N,N],[14,"cond","","Conditionally execute the given parser.",N,N],[14,"cond_reduce","","Fail to parse if condition is false, otherwise parse the given parser.",N,N],[14,"preceded","","Parse two things, returning the value of the second.",N,N],[14,"terminated","","Parse two things, returning the value of the first.",N,N],[14,"many0","","Parse zero or more values using the given parser.",N,N],[14,"peek","","Parse a value without consuming it from the input data.",N,N],[14,"take_until","","Parse the part of the input up to but not including the given string. Fail to parse if the given string is not present in the input.",N,N],[14,"tag","","Parse the given string from exactly the current position in the input. You almost always want `punct!` or `keyword!` instead of this.",N,N],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",N,N],[14,"value","","Produce the given value without parsing anything. Useful as an argument to `switch!`.",N,N],[14,"delimited","","Value surrounded by a pair of delimiters.",N,N],[14,"separated_nonempty_list","","One or more values separated by some separator. Does not allow a trailing separator.",N,N],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",N,N],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",N,N],[14,"do_parse","","Run a series of parsers, one after another, optionally assigning the results a name. Fail if any of the parsers fails.",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"eq","","",0,[[["self"],["iresult"]],["bool"]]],[11,"ne","","",0,[[["self"],["iresult"]],["bool"]]],[11,"clone","","",0,[[["self"]],["iresult"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"IResult"]]};
searchIndex["time"]={"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",N,N],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library implementation",N,N],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where nanoseconds represent the offset from the given second.",N,N],[12,"sec","","",0,N],[12,"nsec","","",0,N],[3,"PreciseTime","","An opaque structure representing a moment in time.",N,N],[3,"SteadyTime","","A structure representing a moment in time.",N,N],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on), also called a broken-down time value.",N,N],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,N],[12,"tm_min","","Minutes after the hour - [0, 59]",1,N],[12,"tm_hour","","Hours after midnight - [0, 23]",1,N],[12,"tm_mday","","Day of the month - [1, 31]",1,N],[12,"tm_mon","","Months since January - [0, 11]",1,N],[12,"tm_year","","Years since 1900",1,N],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,N],[12,"tm_yday","","Days since January 1 - [0, 365]",1,N],[12,"tm_isdst","","Daylight Saving Time flag.",1,N],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any adjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example, for U.S. Pacific Daylight Time, the value is -76060 = -25200.",1,N],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",N,N],[4,"ParseError","","",N,N],[13,"InvalidSecond","","",2,N],[13,"InvalidMinute","","",2,N],[13,"InvalidHour","","",2,N],[13,"InvalidDay","","",2,N],[13,"InvalidMonth","","",2,N],[13,"InvalidYear","","",2,N],[13,"InvalidDayOfWeek","","",2,N],[13,"InvalidDayOfMonth","","",2,N],[13,"InvalidDayOfYear","","",2,N],[13,"InvalidZoneOffset","","",2,N],[13,"InvalidTime","","",2,N],[13,"InvalidSecondsSinceEpoch","","",2,N],[13,"MissingFormatConverter","","",2,N],[13,"InvalidFormatSpecifier","","",2,N],[13,"UnexpectedCharacter","","",2,N],[5,"strptime","","Parses the time from the string according to the format string.",N,[[["str"],["str"]],["result",["tm","parseerror"]]]],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and nanoseconds since 1970-01-01T00:00:00Z.",N,[[],["timespec"]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter in nanoseconds since an unspecified epoch.",N,[[],["u64"]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter in seconds since an unspecified epoch.",N,[[],["f64"]]],[5,"tzset","","",N,[[]]],[5,"empty_tm","","",N,[[],["tm"]]],[5,"at_utc","","Returns the specified time in UTC",N,[[["timespec"]],["tm"]]],[5,"now_utc","","Returns the current time in UTC",N,[[],["tm"]]],[5,"at","","Returns the specified time in the local timezone",N,[[["timespec"]],["tm"]]],[5,"now","","Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime","","Formats the time according to the format string.",N,[[["str"],["tm"]],["result",["string","parseerror"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",3,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",3,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",3,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",3,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",3,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",3,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",3,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 2^63 microseconds in either direction).",3,[[["self"]],["option",["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 2^63 nanoseconds in either direction).",3,[[["self"]],["option",["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",3,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",3,[[["stdduration"]],["result",["duration","outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],["result",["stdduration","outofrangeerror"]]]],[11,"new","","",0,[[["i64"],["i32"]],["timespec"]]],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",4,[[],["precisetime"]]],[11,"to","","Returns a `Duration` representing the span of time from the value of `self` to the value of `later`.",4,[[["self"],["precisetime"]],["duration"]]],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",5,[[],["steadytime"]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[["self"]],["timespec"]]],[11,"to_local","","Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc","","Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C, in the local timezone.",1,[[["self"]],["tmfmt"]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C.",1,[[["self"]],["tmfmt"]]],[11,"strftime","","Formats the time according to the format string.",1,[[["self"],["str"]],["result",["tmfmt","parseerror"]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,[[["self"]],["tmfmt"]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is compatible with ISO 8601.",1,[[["self"]],["tmfmt"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"partial_cmp","","",3,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["duration"]],["bool"]]],[11,"le","","",3,[[["self"],["duration"]],["bool"]]],[11,"gt","","",3,[[["self"],["duration"]],["bool"]]],[11,"ge","","",3,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"le","","",0,[[["self"],["timespec"]],["bool"]]],[11,"gt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ge","","",0,[[["self"],["timespec"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["steadytime"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"le","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"gt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ge","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["tm"]],["option",["ordering"]]]],[11,"cmp","","",3,[[["self"],["duration"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["steadytime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["tm"]],["ordering"]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"ne","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"eq","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ne","","",0,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ne","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"eq","","",1,[[["self"],["tm"]],["bool"]]],[11,"ne","","",1,[[["self"],["tm"]],["bool"]]],[11,"eq","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",6,[[["self"]],["outofrangeerror"]]],[11,"clone","","",0,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["precisetime"]]],[11,"clone","","",5,[[["self"]],["steadytime"]]],[11,"clone","","",1,[[["self"]],["tm"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"add","","",3,[[["self"],["duration"]],["duration"]]],[11,"add","","",0,[[["self"],["duration"]],["timespec"]]],[11,"add","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"add","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",3,[[["self"],["duration"]],["duration"]]],[11,"sub","","",0,[[["self"],["duration"]],["timespec"]]],[11,"sub","","",0,[[["self"],["timespec"]],["duration"]]],[11,"sub","","",5,[[["self"],["steadytime"]],["duration"]]],[11,"sub","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",1,[[["self"],["tm"]],["duration"]]],[11,"mul","","",3,[[["self"],["i32"]],["duration"]]],[11,"div","","",3,[[["self"],["i32"]],["duration"]]],[11,"neg","","",3,[[["self"]],["duration"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"OutOfRangeError"],[3,"TmFmt"]]};
searchIndex["traitobject"]={"doc":"traitobject","items":[[5,"data","traitobject","Get the data pointer from this trait object.",N,N],[5,"data_mut","","Get the data pointer from this trait object, mutably.",N,N],[8,"Trait","","A trait implemented for all trait objects.",N,N]],"paths":[]};
searchIndex["typeable"]={"doc":"Exposes `Typeable`, which exposes the `get_type` method, which gives the `TypeId` of any 'static type.","items":[[8,"Typeable","typeable","Universal mixin trait for adding a `get_type` method.",N,N],[11,"get_type","","Get the `TypeId` of this object.",0,[[["self"]],["typeid"]]]],"paths":[[8,"Typeable"]]};
searchIndex["unicase"]={"doc":"Case","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",N,N],[12,"0","","",0,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["str"]]],[11,"into","","",0,[[["self"]],["string"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["s2"]],["bool"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"clone","","",0,[[["self"]],["unicase"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"deref","","",0,[[["self"]],["s"]]],[11,"deref_mut","","",0,[[["self"]],["s"]]],[11,"from_str","","",0,[[["str"]],["result",["unicase"]]]]],"paths":[[3,"UniCase"]]};
searchIndex["unicode_bidi"]={"doc":"This crate implements the [Unicode Bidirectional Algorithm][tr9] for display of mixed right-to-left and left-to-right text.  It is written in safe Rust, compatible with the current stable release.","items":[[3,"BidiInfo","unicode_bidi","Output of `process_text`",N,N],[12,"classes","","The BidiClass of the character at each byte in the text.",0,N],[12,"levels","","The directional embedding level of each byte in the text.",0,N],[12,"paragraphs","","The boundaries and paragraph embedding level of each paragraph within the text.",0,N],[3,"ParagraphInfo","","Info about a single paragraph",N,N],[12,"range","","The paragraphs boundaries within the text, as byte indices.",1,N],[12,"level","","The paragraph embedding level. http://www.unicode.org/reports/tr9/#BD4",1,N],[3,"InitialProperties","","Output of `initial_scan`",N,N],[12,"initial_classes","","The BidiClass of the character at each byte in the text. If a character is multiple bytes, its class will appear multiple times in the vector.",2,N],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",2,N],[4,"BidiClass","","Represents values of the Unicode character property Bidi_Class, also known as the bidirectional character type.",N,N],[13,"AL","","",3,N],[13,"AN","","",3,N],[13,"B","","",3,N],[13,"BN","","",3,N],[13,"CS","","",3,N],[13,"EN","","",3,N],[13,"ES","","",3,N],[13,"ET","","",3,N],[13,"FSI","","",3,N],[13,"L","","",3,N],[13,"LRE","","",3,N],[13,"LRI","","",3,N],[13,"LRO","","",3,N],[13,"NSM","","",3,N],[13,"ON","","",3,N],[13,"PDF","","",3,N],[13,"PDI","","",3,N],[13,"R","","",3,N],[13,"RLE","","",3,N],[13,"RLI","","",3,N],[13,"RLO","","",3,N],[13,"S","","",3,N],[13,"WS","","",3,N],[5,"bidi_class","","Find the BidiClass of a single char.",N,[[["char"]],["bidiclass"]]],[5,"process_text","","Determine the bidirectional embedding levels for a single paragraph.",N,[[["str"],["option",["u8"]]],["bidiinfo"]]],[5,"is_ltr","","Even embedding levels are left-to-right.",N,[[["u8"]],["bool"]]],[5,"is_rtl","","Odd levels are right-to-left.",N,[[["u8"]],["bool"]]],[5,"reorder_line","","Re-order a line based on resolved levels.",N,N],[5,"visual_runs","","Find the level runs within a line and return them in visual order.",N,N],[5,"initial_scan","","Find the paragraphs and BidiClasses in a string of text.",N,[[["str"],["option",["u8"]]],["initialproperties"]]],[0,"tables","","",N,N],[4,"BidiClass","unicode_bidi::tables","Represents values of the Unicode character property Bidi_Class, also known as the bidirectional character type.",N,N],[13,"AL","","",3,N],[13,"AN","","",3,N],[13,"B","","",3,N],[13,"BN","","",3,N],[13,"CS","","",3,N],[13,"EN","","",3,N],[13,"ES","","",3,N],[13,"ET","","",3,N],[13,"FSI","","",3,N],[13,"L","","",3,N],[13,"LRE","","",3,N],[13,"LRI","","",3,N],[13,"LRO","","",3,N],[13,"NSM","","",3,N],[13,"ON","","",3,N],[13,"PDF","","",3,N],[13,"PDI","","",3,N],[13,"R","","",3,N],[13,"RLE","","",3,N],[13,"RLI","","",3,N],[13,"RLO","","",3,N],[13,"S","","",3,N],[13,"WS","","",3,N],[17,"UNICODE_VERSION","","The Unicode version of data",N,N],[17,"bidi_class_table","","",N,N],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding level.",N,N],[17,"UNICODE_VERSION","","The Unicode version of data",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"eq","","",3,[[["self"],["bidiclass"]],["bool"]]],[11,"eq","","",0,[[["self"],["bidiinfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bidiinfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["paragraphinfo"]],["bool"]]],[11,"ne","","",1,[[["self"],["paragraphinfo"]],["bool"]]],[11,"eq","","",2,[[["self"],["initialproperties"]],["bool"]]],[11,"ne","","",2,[[["self"],["initialproperties"]],["bool"]]],[11,"clone","","",3,[[["self"]],["bidiclass"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"BidiInfo"],[3,"ParagraphInfo"],[3,"InitialProperties"],[4,"BidiClass"]]};
searchIndex["unicode_normalization"]={"doc":"Unicode character composition and decomposition utilities as described in Unicode Standard Annex #15.","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",N,N],[3,"Recompositions","","External iterator for a string recomposition's characters.",N,N],[0,"char","","Methods for composing and decomposing characters.",N,N],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",N,[[["char"],["f"]]]],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",N,[[["char"],["f"]]]],[5,"compose","","Compose two characters into a single character, if possible. See Unicode Standard Annex #15 for more information.",N,[[["char"],["char"]],["option",["char"]]]],[5,"canonical_combining_class","","",N,[[["char"]],["u8"]]],[5,"is_combining_mark","","Return whether the given character is a combining mark (`General_Category=Mark`)",N,[[["char"]],["bool"]]],[17,"UNICODE_VERSION","unicode_normalization","The version of Unicode that this version of unicode-normalization is based on.",N,N],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations as described in Unicode Standard Annex #15.",N,N],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D (canonical decomposition).",0,[[["self"]],["decompositions"]]],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD (compatibility decomposition).",0,[[["self"]],["decompositions"]]],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C (canonical decomposition followed by canonical composition).",0,[[["self"]],["recompositions"]]],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC (compatibility decomposition followed by canonical composition).",0,[[["self"]],["recompositions"]]],[11,"nfd","","",1,[[["self"]],["decompositions"]]],[11,"nfkd","","",1,[[["self"]],["decompositions"]]],[11,"nfc","","",1,[[["self"]],["recompositions"]]],[11,"nfkc","","",1,[[["self"]],["recompositions"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"nfd","","",2,[[["self"]],["decompositions"]]],[11,"nfkd","","",2,[[["self"]],["decompositions"]]],[11,"nfc","","",2,[[["self"]],["recompositions"]]],[11,"nfkc","","",2,[[["self"]],["recompositions"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"next","","",1,[[["self"]],["option",["char"]]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option",["char"]]]],[11,"clone","","",1,[[["self"]],["decompositions"]]],[11,"clone","","",2,[[["self"]],["recompositions"]]]],"paths":[[8,"UnicodeNormalization"],[3,"Decompositions"],[3,"Recompositions"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
searchIndex["url"]={"doc":"rust-url is an implementation of the URL Standard for the Rust programming language.","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",N,N],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us to implement `ToSocketAddrs for (Host<S>, u16)`.",N,N],[12,"host","","",0,N],[12,"port","","",0,N],[3,"SocketAddrs","","Socket addresses for an URL.",N,N],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is not cannot-be-base.",N,N],[3,"Url","","A parsed URL record.",N,N],[3,"ParseOptions","","Full configuration for the URL parser.",N,N],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically not used directly.",N,N],[4,"Origin","","The origin of an URL",N,N],[13,"Opaque","","A globally unique identifier",1,N],[13,"Tuple","","Consists of the URL's scheme, host and port",1,N],[4,"Host","","The host name of an URL.",N,N],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII labels are encoded in punycode per IDNA.",2,N],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization of this address, as four decimal integers separated by `.` dots.",2,N],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization of that address between `[` and `]` brackets, in the format per RFC 5952 A Recommendation for IPv6 Address Text Representation: lowercase hexadecimal with maximal `::` compression.",2,N],[4,"ParseError","","Errors that can occur during parsing.",N,N],[13,"EmptyHost","","",3,N],[13,"IdnaError","","",3,N],[13,"InvalidPort","","",3,N],[13,"InvalidIpv4Address","","",3,N],[13,"InvalidIpv6Address","","",3,N],[13,"InvalidDomainCharacter","","",3,N],[13,"RelativeUrlWithoutBase","","",3,N],[13,"RelativeUrlWithCannotBeABaseBase","","",3,N],[13,"SetHostOnCannotBeABaseUrl","","",3,N],[13,"Overflow","","",3,N],[4,"Position","","Indicates a position within a URL based on its components.",N,N],[13,"BeforeScheme","","",4,N],[13,"AfterScheme","","",4,N],[13,"BeforeUsername","","",4,N],[13,"AfterUsername","","",4,N],[13,"BeforePassword","","",4,N],[13,"AfterPassword","","",4,N],[13,"BeforeHost","","",4,N],[13,"AfterHost","","",4,N],[13,"BeforePort","","",4,N],[13,"AfterPort","","",4,N],[13,"BeforePath","","",4,N],[13,"AfterPath","","",4,N],[13,"BeforeQuery","","",4,N],[13,"AfterQuery","","",4,N],[13,"BeforeFragment","","",4,N],[13,"AfterFragment","","",4,N],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",2,[[["self"]],["host",["string"]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",2,[[["str"]],["result",["parseerror"]]]],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",0,[[["self"]],["hostandport",["string"]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,[[],["origin"]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple (as opposed to an opaque origin).",1,[[["self"]],["bool"]]],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",1,[[["self"]],["string"]]],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",1,[[["self"]],["string"]]],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == \"/\"`.",5,[[["self"]],["self"]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty, except if these was only one segment to begin with.",5,[[["self"]],["self"]]],[11,"pop","","Remove the last segment of this URL’s path.",5,[[["self"]],["self"]]],[11,"push","","Append the given segment at the end of this URL’s path.",5,[[["self"],["str"]],["self"]]],[11,"extend","","Append each segment from the given iterator at the end of this URL’s path.",5,[[["self"],["i"]],["self"]]],[0,"form_urlencoded","","Parser and serializer for the `application/x-www-form-urlencoded` syntax, as used by HTML forms.",N,N],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",N,N],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.",N,N],[3,"ByteSerialize","","Return value of `byte_serialize()`.",N,N],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",N,N],[5,"parse","","Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.",N,N],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",N,N],[8,"Target","","",N,N],[10,"as_mut_string","","",6,[[["self"]],["string"]]],[10,"finish","","",6,N],[16,"Finished","","",6,N],[11,"into_owned","","Return a new iterator that yields pairs of `String` instead of pairs of `Cow<str>`.",7,[[["self"]],["parseintoowned"]]],[11,"new","","Create a new `application/x-www-form-urlencoded` serializer for the given target.",8,[[["t"]],["self"]]],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer for a suffix of the given target.",8,[[["t"],["usize"]],["self"]]],[11,"clear","","Remove any existing name/value pair.",8,[[["self"]],["self"]]],[11,"append_pair","","Serialize and append a name/value pair.",8,[[["self"],["str"],["str"]],["self"]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",8,[[["self"],["i"]],["self"]]],[11,"finish","","If this serializer was constructed with a string, take and return that string.",8,N],[0,"percent_encoding","url","",N,N],[3,"SIMPLE_ENCODE_SET","url::percent_encoding","This encode set is used for the path of cannot-be-a-base URLs.",N,N],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",N,N],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",N,N],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",N,N],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",N,N],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",N,N],[3,"PercentDecode","","The return type of `percent_decode()`.",N,N],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",N,[[["u8"]],["str"]]],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",N,N],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",N,[[["str"],["e"]],["percentencode"]]],[5,"percent_decode","","Percent-decode the given bytes.",N,N],[8,"EncodeSet","","Represents a set of characters / bytes that should be percent-encoded.",N,N],[10,"contains","","Called with UTF-8 bytes rather than code points. Should return true for all non-ASCII bytes.",9,[[["self"],["u8"]],["bool"]]],[11,"if_any","","If the percent-decoding is different from the input, return it as a new bytes vector.",10,[[["self"]],["option",["vec"]]]],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",10,[[["self"]],["result",["cow","utf8error"]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",10,[[["self"]],["cow",["str"]]]],[0,"quirks","url","Getters and setters for URL components implemented per https://url.spec.whatwg.org/#api",N,N],[5,"domain_to_ascii","url::quirks","https://url.spec.whatwg.org/#dom-url-domaintoascii",N,[[["str"]],["string"]]],[5,"domain_to_unicode","","https://url.spec.whatwg.org/#dom-url-domaintounicode",N,[[["str"]],["string"]]],[5,"href","","Getter for https://url.spec.whatwg.org/#dom-url-href",N,[[["url"]],["str"]]],[5,"set_href","","Setter for https://url.spec.whatwg.org/#dom-url-href",N,[[["url"],["str"]],["result",["parseerror"]]]],[5,"origin","","Getter for https://url.spec.whatwg.org/#dom-url-origin",N,[[["url"]],["string"]]],[5,"protocol","","Getter for https://url.spec.whatwg.org/#dom-url-protocol",N,[[["url"]],["str"]]],[5,"set_protocol","","Setter for https://url.spec.whatwg.org/#dom-url-protocol",N,[[["url"],["str"]],["result"]]],[5,"username","","Getter for https://url.spec.whatwg.org/#dom-url-username",N,[[["url"]],["str"]]],[5,"set_username","","Setter for https://url.spec.whatwg.org/#dom-url-username",N,[[["url"],["str"]],["result"]]],[5,"password","","Getter for https://url.spec.whatwg.org/#dom-url-password",N,[[["url"]],["str"]]],[5,"set_password","","Setter for https://url.spec.whatwg.org/#dom-url-password",N,[[["url"],["str"]],["result"]]],[5,"host","","Getter for https://url.spec.whatwg.org/#dom-url-host",N,[[["url"]],["str"]]],[5,"set_host","","Setter for https://url.spec.whatwg.org/#dom-url-host",N,[[["url"],["str"]],["result"]]],[5,"hostname","","Getter for https://url.spec.whatwg.org/#dom-url-hostname",N,[[["url"]],["str"]]],[5,"set_hostname","","Setter for https://url.spec.whatwg.org/#dom-url-hostname",N,[[["url"],["str"]],["result"]]],[5,"port","","Getter for https://url.spec.whatwg.org/#dom-url-port",N,[[["url"]],["str"]]],[5,"set_port","","Setter for https://url.spec.whatwg.org/#dom-url-port",N,[[["url"],["str"]],["result"]]],[5,"pathname","","Getter for https://url.spec.whatwg.org/#dom-url-pathname",N,[[["url"]],["str"]]],[5,"set_pathname","","Setter for https://url.spec.whatwg.org/#dom-url-pathname",N,[[["url"],["str"]]]],[5,"search","","Getter for https://url.spec.whatwg.org/#dom-url-search",N,[[["url"]],["str"]]],[5,"set_search","","Setter for https://url.spec.whatwg.org/#dom-url-search",N,[[["url"],["str"]]]],[5,"hash","","Getter for https://url.spec.whatwg.org/#dom-url-hash",N,[[["url"]],["str"]]],[5,"set_hash","","Setter for https://url.spec.whatwg.org/#dom-url-hash",N,[[["url"],["str"]]]],[11,"base_url","url","Change the base URL",11,[[["self"],["option",["url"]]],["self"]]],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors.",11,[[["self"],["option",["fn"]]],["self"]]],[11,"parse","","Parse an URL string with the configuration so far.",11,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"parse","","Parse an absolute URL from a string.",12,[[["str"]],["result",["url","parseerror"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its query string.",12,[[["str"],["i"]],["result",["url","parseerror"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",12,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",12,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",12,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",12,[[["self"]],["string"]]],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",12,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.",12,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can contain a username, password, host, and port number.",12,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL as the base will return an error.",12,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.",12,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",12,[[["self"]],["option",["str"]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",12,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",12,[[["self"]],["option",["str"]]]],[11,"host","","Return the parsed representation of the host for this URL. Non-ASCII domain labels are punycode-encoded per IDNA.",12,[[["self"]],["option",["host"]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",12,[[["self"]],["option",["str"]]]],[11,"port","","Return the port number for this URL, if any.",12,[[["self"]],["option",["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",12,[[["self"]],["option",["u16"]]]],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",12,[[["self"],["f"]],["result",["hostandport"]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with '/'. For other URLs, this starts with a '/' slash and continues with slash-separated path segments.",12,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of '/' slash-separated path segments, each as a percent-encoded ASCII string.",12,[[["self"]],["option",["split"]]]],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",12,[[["self"]],["option",["str"]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded` and return an iterator of (key, value) pairs.",12,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",12,[[["self"]],["option",["str"]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",12,[[["self"],["option",["str"]]]]],[11,"set_query","","Change this URL’s query string.",12,[[["self"],["option",["str"]]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs in `application/x-www-form-urlencoded` syntax.",12,[[["self"]],["serializer",["urlquery"]]]],[11,"set_path","","Change this URL’s path.",12,[[["self"],["str"]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",12,[[["self"]],["result",["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",12,[[["self"],["option",["u16"]]],["result"]]],[11,"set_host","","Change this URL’s host.",12,[[["self"],["option",["str"]]],["result",["parseerror"]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",12,[[["self"],["ipaddr"]],["result"]]],[11,"set_password","","Change this URL’s password.",12,[[["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",12,[[["self"],["str"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",12,[[["self"],["str"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",12,[[["p"]],["result",["url"]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",12,[[["p"]],["result",["url"]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar, convert its path to an absolute `std::path::Path`.",12,[[["self"]],["result",["pathbuf"]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",N,N],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","url::form_urlencoded","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","url::percent_encoding","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"as_mut_string","url","",15,[[["self"]],["string"]]],[11,"finish","","",15,[[["self"]],["url"]]],[11,"contains","url::percent_encoding","",18,[[["self"],["u8"]],["bool"]]],[11,"contains","","",19,[[["self"],["u8"]],["bool"]]],[11,"contains","","",20,[[["self"],["u8"]],["bool"]]],[11,"contains","","",21,[[["self"],["u8"]],["bool"]]],[11,"contains","","",22,[[["self"],["u8"]],["bool"]]],[11,"next","url","",14,[[["self"]],["option",["socketaddr"]]]],[11,"next","url::form_urlencoded","",7,[[["self"]],["option"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"next","","",17,[[["self"]],["option",["str"]]]],[11,"size_hint","","",17,N],[11,"next","url::percent_encoding","",23,[[["self"]],["option",["str"]]]],[11,"size_hint","","",23,N],[11,"next","","",10,[[["self"]],["option",["u8"]]]],[11,"size_hint","","",10,N],[11,"partial_cmp","url","",2,[[["self"],["host"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["host"]],["bool"]]],[11,"le","","",2,[[["self"],["host"]],["bool"]]],[11,"gt","","",2,[[["self"],["host"]],["bool"]]],[11,"ge","","",2,[[["self"],["host"]],["bool"]]],[11,"partial_cmp","","",12,[[["self"],["self"]],["option",["ordering"]]]],[11,"cmp","","",2,[[["self"],["host"]],["ordering"]]],[11,"cmp","","",12,[[["self"],["self"]],["ordering"]]],[11,"eq","","",2,[[["self"],["host"]],["bool"]]],[11,"ne","","",2,[[["self"],["host"]],["bool"]]],[11,"eq","","",1,[[["self"],["origin"]],["bool"]]],[11,"ne","","",1,[[["self"],["origin"]],["bool"]]],[11,"eq","","",13,[[["self"],["opaqueorigin"]],["bool"]]],[11,"ne","","",13,[[["self"],["opaqueorigin"]],["bool"]]],[11,"eq","","",3,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",12,[[["self"],["self"]],["bool"]]],[11,"from","","",3,[[["errors"]],["parseerror"]]],[11,"as_ref","","",12,[[["self"]],["str"]]],[11,"clone","","",2,[[["self"]],["host"]]],[11,"clone","","",0,[[["self"]],["hostandport"]]],[11,"clone","","",1,[[["self"]],["origin"]]],[11,"clone","","",13,[[["self"]],["opaqueorigin"]]],[11,"clone","","",3,[[["self"]],["parseerror"]]],[11,"clone","","",4,[[["self"]],["position"]]],[11,"clone","url::form_urlencoded","",7,[[["self"]],["parse"]]],[11,"clone","url::percent_encoding","",18,[[["self"]],["simple_encode_set"]]],[11,"clone","","",19,[[["self"]],["query_encode_set"]]],[11,"clone","","",20,[[["self"]],["default_encode_set"]]],[11,"clone","","",21,[[["self"]],["path_segment_encode_set"]]],[11,"clone","","",22,[[["self"]],["userinfo_encode_set"]]],[11,"clone","","",23,[[["self"]],["percentencode"]]],[11,"clone","","",10,[[["self"]],["percentdecode"]]],[11,"clone","url","",12,[[["self"]],["url"]]],[11,"clone","","",11,[[["self"]],["parseoptions"]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",15,[[["self"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","url::percent_encoding","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","url","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"hash","","",2,N],[11,"hash","","",12,[[["self"],["h"]]]],[11,"index","","",12,[[["self"],["rangefull"]],["str"]]],[11,"index","","",12,[[["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",12,[[["self"],["rangeto",["position"]]],["str"]]],[11,"index","","",12,[[["self"],["range",["position"]]],["str"]]],[11,"from_str","","",12,[[["str"]],["result",["url","parseerror"]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"to_socket_addrs","","",0,[[["self"]],["result"]]],[11,"to_socket_addrs","","",12,[[["self"]],["result"]]]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"Position"],[3,"PathSegmentsMut"],[8,"Target"],[3,"Parse"],[3,"Serializer"],[8,"EncodeSet"],[3,"PercentDecode"],[3,"ParseOptions"],[3,"Url"],[3,"OpaqueOrigin"],[3,"SocketAddrs"],[3,"UrlQuery"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"]]};
initSearch(searchIndex);
